{"version":3,"sources":["components/SelectSearchable.module.scss","components/Modal.module.scss","components/DateTimeInput.module.scss","components/DateInput.module.scss","components/TimeInput.module.scss","components/Figure.module.scss","components/Pagination.module.scss","features/json/jsonSlice.js","features/config/configSlice.js","app/store.js","app/utilities.js","components/FormInterface.js","components/controls/DocumentTableOfContents.js","components/controls/ListMulticontrol.js","components/controls/Label.js","components/Modal.js","components/controls/Text.js","components/controls/Repeatable.js","components/controls/ButtonSubmitPurchase.js","components/controls/ButtonAddDocketNumber.js","components/controls/API.js","components/DateInput.js","components/controls/Date.js","components/Figure.js","components/controls/Image.js","components/controls/ImageSingle.js","components/controls/ButtonAddReportDate.js","components/controls/QRScanner.js","components/controls/QRScannerList.js","components/controls/Signature.js","components/controls/SignatureDateTime.js","components/controls/SignatureDate.js","components/controls/Matrix.js","components/controls/Checkbox.js","components/controls/Boolean.js","components/controls/Trilean.js","components/controls/TrileanLabel.js","components/controls/ListSingle.js","components/controls/ListMultiple.js","components/TimeInput.js","components/controls/Time.js","components/DateTimeInput.js","components/controls/DateTime.js","components/controls/TimeLabel.js","components/controls/DateLabel.js","components/controls/ButtonAddSignature.js","components/controls/RegisterSignatures.js","components/SelectSearchable.js","components/controls/SearchableListEntryDialogSMS.js","components/controls/ButtonAddSMS.js","components/controls/SearchableSMSListView.js","components/controls/SearchableListEntryDialogEmail.js","components/controls/ButtonAddEmail.js","components/controls/SearchableEmailListView.js","components/controls/MatrixButton.js","components/controls/DocumentSummaryGrid.js","components/controls/ButtonSubmitRegister.js","components/controls/ButtonCloseout.js","components/controls/ButtonViewDocument.js","components/controls/ButtonSendEmail.js","components/controls/ButtonSendSMS.js","components/Board.js","components/Pagination.js","components/Header.js","App.js","index.js"],"names":["module","exports","jsonSlice","createSlice","name","initialState","value","JSON","parse","localStorage","getItem","documentStatus","currentAction","currentContact","phoneNumber","companyName","repeaterValue","reducers","setJson","state","action","payload","setItem","stringify","setCurrentAction","setCurrentContact","setRepeaterValue","actions","selectJson","json","selectRepeaterValue","configSlice","debugMode","errorMsg","currentTemplate","currentDocument","currentUserName","currentToken","currentSectionIndex","setDebugMode","setErrorMsg","setCurrentTemplate","setCurrentSectionIndex","callSection","prevSection","nextSection","setDocumentStatus","optionedControls","openListId","setCurrentToken","setCurrentUserName","setCurrentDocument","setOpenListId","setOptionedControls","selectDebugMode","config","selectCurrentSectionIndex","selectCurrentTemplate","selectCurrentDocument","selectCurrentUserName","selectCurrentToken","selectCurrentContact","selectCurrentAction","selectDocumentStatus","selectOpenListId","configureStore","reducer","jsonReducer","configReducer","getControlName","pControlType","split","map","part","toUpperCase","slice","join","getControlPathById","pJson","pElementId","currentJson","normalizeJson","Sections","foundPath","forEach","section","sectionIndex","Elements","item","index","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","undefined","Id","push","getCurrentDate","pDate","Date","now","camelcaseKeys","deep","pascalCase","exportMetaData","addToDocumentExport","pValue","controlIndex","findIndex","console","log","prevValue","table","FormInterface","props","apiURL","process","isDebugging","useSelector","dispatch","useDispatch","useState","setIsDocumentEditing","url","URL","window","location","href","searchParams","get","projectId","Number","templateId","documentId","useEffect","fetchFormHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","data","response","catch","error","text","Document","Config","templateToUpdate","controlsUpdates","MetaData","jsonToUpdate","repeaterValues","itemPath","Type","templateValues","prevValues","length","metadata","sendFormHeaders","documentBody","ID","ProjectID","Description","Title","DocumentTypeId","DocumentFormTemplateID","UserRevisionNumber","UserRevisionDate","OpenClosedStatus","CreatedByContactID","CreatedByCompanyID","documentBodyString","formdata","FormData","body","res","result","className","DocumentTableOfContents","sections","element","onClick","icon","faChevronRight","ListMulticontrol","controlJson","Data","IsVisible","options","option","cols","rows","disabled","htmlFor","id","onChange","pEvent","selectedIndex","target","visibleControls","OptionedControls","Controls","hiddenControls","controlId","Label","FontAttributes","FontSize","Margin","HasUnderLine","style","fontSize","fontWeight","fontStyle","borderBottom","padding","Modal","visibility","toggleVisibility","message","css","backdrop","callback","springBackdropProps","useSpring","opacity","from","zIndex","gentle","springModalProps","top","stiff","actionBtns","styles","modalBtn","backdropStyle","backgroundColor","div","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","faTimes","modalHeader","faExclamationTriangle","modalContent","modalFooter","Text","IsEnabled","Value","Format","Warning","WarningMessage","Mandatory","ValidationMessage","AssociatedId","Boolean","isModalVisible","setIsModalVisible","bgColor","modalOptions","setModalOptions","emailAddressTester","phoneNumberRestrictCodes","onChangeHandler","Names","email","newJson","updateJson","onBlurHandler","focus","Keyboard","test","toLowerCase","textfield","Lines","defaultValue","type","min","Min","max","Max","size","Decimal","maxLength","onKeyDown","includes","keyCode","preventDefault","VarChar","onBlur","warningMarker","mandatoryMarker","Repeatable","children","currentRepreaterIndex","repeater","repeatableSchema","control","elementCopy","ElementId","components","ButtonSubmitPurchase","ButtonAddDocketNumber","API","Image","ImageSingle","ButtonAddReportDate","QRScanner","QRScannerList","Signature","SignatureDateTime","SignatureDate","Matrix","Checkbox","Trilean","TrileanLabel","ListSingle","ListMultiple","Time","DateTime","TimeLabel","DateLabel","ButtonAddSignature","RegisterSignatures","SearchableListEntryDialogSMS","ButtonAddSMS","SearchableSMSListView","SearchableListEntryDialogEmail","ButtonAddEmail","SearchableEmailListView","MatrixButton","DocumentSummaryGrid","ButtonSubmitRegister","ButtonCloseout","ButtonViewDocument","repeatable","pControls","pIndex","e","repeaterValueToUpdate","repeatableIndex","repeatableValue","RepeaterValue","filter","repeat","removeRepeatableByIndex","faTrash","controls","componentName","Component","values","controlBaseJson","repeaterIndex","faPlusSquare","Api","IncludePhoneNumber","IncludeEmail","IncludeTitle","IncludeBusinessNumber","IncludeAbbreviation","IncludeCode","targetedApi","String","token","collapsed","setCollapsed","keyword","setKeyword","list","setList","filteredList","setFilteredList","constructor","selectedValues","setSelectedValues","animatedListProps","height","trailPills","useTrail","marginLeft","marginTop","transform","to","projectID","apiUrl","getEndpoint","apiHeaders","listItemClickHandler","currentItem","updateJSON","listItems","emailAddress","title","abn","abbr","code","spacer","Contact","Email","NameFirst","NameLast","Company","Name","CompanyName","Abn","Abbr","Code","itemList","key","isSelected","iconCheck","faCheck","selectedPills","targetText","parentNode","innerText","faAngleDown","faAngleUp","placeholder","DateInput","dateformatConverted","format","replace","dateValue","setDateValue","dateString","addMonths","addDays","toTimeString","modifiers","AddDay","AddMonth","dateContainer","datePicker","onDateChange","btnClear","FormatDateTime","IsBlank","DateValue","defaultDate","toDateString","onDateChangeHandler","Figure","container","src","source","alt","btnClose","onClose","Images","onCloseHandler","images","image","faImage","figure","imageData","fileReader","FileReader","onload","readAsDataURL","files","DateTimeValue","isScanning","setIsScanning","updateValues","pScanValue","pTimestamp","qrReader","delay","onError","pErr","onScan","pData","width","btScan","scanOffIndex","setScanOffIndex","newList","ScanOnDateTime","ScanOffDateTime","scanList","signatureDisplay","useRef","username","signatureText","setSignatureText","selectedFont","setSelectedFont","isSigning","setIsSigning","htmlToImage","current","dataUrl","rawData","fontDropdownOptions","label","editSignature","btnSign","signature","ref","Columns","Rows","matrixLayout","i","j","controlComponent","updateJsonHandler","substring","display","gridTemplateColumns","gridTemplateRows","ShowComment","Collapsible","IsCollapsed","EntryTitle","Details","CommentValue","comment","commentText","details","entryTitle","defaultChecked","checkboxValue","checked","booleanValue","commentValue","HideNa","trileanValue","Buttons","buttons","button","computedBackground","Button","BackgroundColorSelected","BackgroundColor","Fragment","underline","valuesToExport","SelectedValue","mass","tension","friction","newValues","TimeInput","timeformatConverted","timeValue","setTimeValue","pTime","timeString","addHours","AddHour","timeContainer","timePicker","onTimeChange","TimeValue","defaultTime","getHours","getMinutes","onTimeChangeHandler","DateTimeInput","dateFormatConverted","dateTimeValue","toLocaleTimeString","dateTimeStringValue","dateTimeContainer","onDateTimeChange","defaultDateTime","setDateTimeValue","pDateTime","onDateTimeChangeHandler","registerValues","document","getElementById","SignOnDateTime","registerList","reverse","SignOffDateTime","pId","signatureIndex","SelectSearchable","input","items","allowMultiple","initialIsVisible","isVisible","setIsVisible","handleClickOutside","event","contains","addEventListener","removeEventListener","useVisible","onClickItemHandler","pItem","stopPropagation","currentTarget","onSelectItem","selectedItems","cssWidth","ListSmall","ListMedium","ListLarge","selectSearchable_Container","selectSearchable_Header","selectSearchable_SelectedContainer","selectSearchable_SelectedItem","selectedItem_delete","selectSearchable_Trigger","position","selectSearchable_List","selectSearchable_SearchContainer","selectSearchable_ItemsContainer","selectItem","selectedItem","selectSearchable_SelectedItem_Selected","contactList","setContactList","contactDropdownList","setContactDropdownList","setSelectedContact","contactIndex","contact","contactDetails","addContact","Title2","pContactIndex","deleteContact","Selection","XAxisName","YAxisName","Legend","showLegend","ShowLegend","buttonClickHandler","pButtonId","buttonPath","buttonValue","LegendValuesY","Values","LegendValuesX","legendValuesX","legendValuesY","legend","DocumentNumber","docId","DocumentType","docTitle","docTitle1","Title1","docTitle2","CreatedByContact","CreatedByCompany","documentDetails","ButtonSendEmail","ButtonSendSMS","Board","currentElements","setControls","filteredJson","controlPath","controlsFromElements","boardControls","Array","fill","Pagination","sectionsAmount","tabLength","tabTitle","row","faFastBackward","faStepBackward","faStepForward","faFastForward","Header","App","ReactDOM","render","store"],"mappings":"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","file":"static/js/main.5d9e997b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectItem\":\"SelectSearchable_selectItem__ytOvQ\",\"selectedItem_delete\":\"SelectSearchable_selectedItem_delete__DzATU\",\"selectSearchable\":\"SelectSearchable_selectSearchable__12vBI\",\"selectSearchable_Container\":\"SelectSearchable_selectSearchable_Container__fToYi\",\"selectSearchable_SearchContainer\":\"SelectSearchable_selectSearchable_SearchContainer__3eaGr\",\"selectSearchable_ItemsContainer\":\"SelectSearchable_selectSearchable_ItemsContainer__34yKg\",\"selectSearchable_Header\":\"SelectSearchable_selectSearchable_Header__20KCq\",\"selectSearchable_SelectedContainer\":\"SelectSearchable_selectSearchable_SelectedContainer__3HBOF\",\"selectSearchable_Trigger\":\"SelectSearchable_selectSearchable_Trigger__2brz3\",\"selectSearchable_SelectedItem\":\"SelectSearchable_selectSearchable_SelectedItem__ya07B\",\"selectSearchable_SelectedItem_Selected\":\"SelectSearchable_selectSearchable_SelectedItem_Selected__3kePe\",\"selectSearchable_List\":\"SelectSearchable_selectSearchable_List__12txV\",\"listCollapsed\":\"SelectSearchable_listCollapsed__2gYJk\",\"ListSmall\":\"SelectSearchable_ListSmall__24zac\",\"ListMedium\":\"SelectSearchable_ListMedium__3_qlO\",\"ListLarge\":\"SelectSearchable_ListLarge__m6apt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"DateTimeInput_timePicker__g55DG\",\"datePicker\":\"DateTimeInput_datePicker__fMbwV\",\"dateTimeContainer\":\"DateTimeInput_dateTimeContainer__3DJHa\",\"btnClear\":\"DateTimeInput_btnClear__1hSf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"DateInput_datePicker__1qUGn\",\"dateContainer\":\"DateInput_dateContainer__3vsHd\",\"btnClear\":\"DateInput_btnClear__hBuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"TimeInput_timePicker__1bwP3\",\"timeContainer\":\"TimeInput_timeContainer__15bEw\",\"btnClear\":\"TimeInput_btnClear__3Cafn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Figure_container__1bF2w\",\"btnClose\":\"Figure_btnClose__3UDU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Pagination_row__3VXMX\",\"title\":\"Pagination_title__1mHK-\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const jsonSlice = createSlice({\n  name: \"json\",\n  initialState: {\n    // value: {},\n    // documentStatus: 'init',\n\n    // // Persistence\n    value: JSON.parse(localStorage.getItem(\"json\")) || {},\n    documentStatus: \"loaded\",\n    currentAction: \"\",\n    currentContact: { name: \"\", phoneNumber: \"\", companyName: \"\" },\n    repeaterValue: [],\n  },\n  reducers: {\n    setJson: (state, action) => {\n      // console.log(`setJson : `, action.payload);\n\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = action.payload;\n\n      // Initial JSON to be set if json is not present (new document)\n      // localStorage.se  tItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n      localStorage.setItem(\"json\", JSON.stringify(action.payload));\n    },\n    setCurrentAction: (state, action) => {\n      state.currentAction = action.payload;\n    },\n\n    setCurrentContact: (state, action) => {\n      state.currentContact = action.payload;\n    },\n    setRepeaterValue: (state, action) => {\n      state.repeaterValue = action.payload;\n    },\n  },\n});\n\nexport const { setJson, setCurrentAction, setCurrentContact, setRepeaterValue } = jsonSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectJson = state => state.json.value;\nexport const selectCurrentAction = state => state.json.currentAction;\nexport const selectCurrentContact = state => state.json.currentContact;\nexport const selectRepeaterValue = state => state.json.repeaterValue;\n\nexport default jsonSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const configSlice = createSlice({\n  name: \"config\",\n  initialState: {\n    debugMode: false,\n    errorMsg: \"\",\n    currentAction: \"\",\n    currentTemplate: {},\n    currentDocument: {},\n    currentUserName: \"\",\n    currentToken: \"\",\n    currentSectionIndex: 0,\n    documentStatus: \"loading\",\n    currentAction: \"\",\n    currentContact: { name: \"\", phoneNumber: \"\", companyName: \"\" },\n    repeaterValue: [],\n    optionedControls: {},\n    openListId: 0,\n  },\n  reducers: {\n    setDebugMode: (state, action) => {\n      state.debugMode = action.payload;\n    },\n    setErrorMsg: (state, action) => {\n      state.errorMsg = action.payload;\n    },\n    setCurrentAction: (state, action) => {\n      state.currentAction = action.payload;\n    },\n    setCurrentTemplate: (state, action) => {\n      state.currentTemplate = action.payload;\n    },\n    setCurrentSectionIndex: (state, action) => {\n      state.currentSectionIndex = action.payload;\n    },\n    callSection: (state, action) => {\n      state.currentSectionIndex = action.payload;\n    },\n    prevSection: (state) => {\n      state.currentSectionIndex -= 1;\n    },\n    nextSection: (state) => {\n      state.currentSectionIndex += 1;\n    },\n    setDocumentStatus: (state, action) => {\n      state.documentStatus = action.payload;\n    },\n    setCurrentAction: (state, action) => {\n      state.currentAction = action.payload;\n    },\n    setCurrentContact: (state, action) => {\n      state.currentContact = action.payload;\n    },\n    setCurrentDocument: (state, action) => {\n      state.currentDocument = action.payload;\n    },\n    setRepeaterValue: (state, action) => {\n      state.repeaterValue = action.payload;\n    },\n    setCurrentUserName: (state, action) => {\n      state.currentUserName = action.payload;\n    },\n    setCurrentToken: (state, action) => {\n      state.currentToken = action.payload;\n    },\n    setOptionedControls: (state, action) => {\n      state.optionedControls = action.payload;\n    },\n    setOpenListId: (state, action) => {\n      state.openListId = action.payload;\n    },\n  },\n});\n\nexport const {\n  setDebugMode,\n  setErrorMsg,\n  setCurrentToken,\n  setCurrentUserName,\n  setCurrentTemplate,\n  setCurrentSectionIndex,\n  callSection,\n  prevSection,\n  nextSection,\n  setDocumentStatus,\n  setCurrentAction,\n  setCurrentContact,\n  setRepeaterValue,\n  setCurrentDocument,\n  setOptionedControls,\n  setOpenListId,\n} = configSlice.actions;\n\nexport const selectDebugMode = (state) => state.config.debugMode;\nexport const selectErrorMsg = (state) => state.config.errorMsg;\nexport const selectCurrentSectionIndex = (state) =>\n  state.config.currentSectionIndex;\nexport const selectCurrentTemplate = (state) => state.config.currentTemplate;\nexport const selectCurrentDocument = (state) => state.config.currentDocument;\nexport const selectCurrentUserName = (state) => state.config.currentUserName;\nexport const selectCurrentToken = (state) => state.config.currentToken;\nexport const selectCurrentContact = (state) => state.config.currentContact;\nexport const selectCurrentAction = (state) => state.config.currentAction;\nexport const selectDocumentStatus = (state) => state.config.documentStatus;\nexport const selectRepeaterValue = (state) => state.config.repeaterValue;\nexport const selectOptionedControls = (state) => state.config.value;\nexport const selectOpenListId = (state) => state.config.openListId;\n\nexport default configSlice.reducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport jsonReducer from \"../features/json/jsonSlice\";\nimport configReducer from \"../features/config/configSlice\";\n\nexport default configureStore({\n  reducer: {\n    json: jsonReducer,\n    config: configReducer,\n  },\n});\n","import camelcaseKeys from \"camelcase-keys\";\n\nexport function getControlName(pControlType) {\n  return pControlType\n    .split(\".\")\n    .map(part => part[0].toUpperCase() + part.slice(1))\n    .join(\"\");\n}\n\nexport function getElementFromElementId(pJson, pElementId) {\n  console.log(\"----> Function doesnt exist anymore\");\n}\n\nexport function getControlPathById(pJson, pElementId) {\n  const currentJson = normalizeJson(pJson).Sections;\n  // console.log(`--> Looking for pElementId: `, pElementId, \" inside pJson: \", currentJson);\n\n  // console.log(`--->: getElementFromElementId inside this: `, currentJson);\n  let foundPath = [];\n\n  if (pElementId !== \"undefined\") {\n    currentJson.forEach((section, sectionIndex) => {\n      section.Elements.forEach((item, index) => {\n        if (item.hasOwnProperty(\"Elements\")) {\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.hasOwnProperty(\"Elements\")) {\n              subitem.Elements.forEach((subsubitem, subsubindex) => {\n                if (subsubitem.Id !== undefined && subsubitem.Id === pElementId) {\n                  // console.log(\"--> subsubpath: \", { sectionIndex, index, subindex, subsubindex });\n                  foundPath.push([sectionIndex, index, subindex, subsubindex]);\n                }\n              });\n            }\n\n            if (subitem.Id !== undefined && subitem.Id === pElementId) {\n              // console.log(\"--> subpath: \", { sectionIndex, index, subindex });\n              foundPath.push([sectionIndex, index, subindex]);\n            }\n          });\n        }\n\n        if (item.Id !== undefined && item.Id === pElementId) {\n          // console.log(\"--> path: \", { sectionIndex, index });\n          foundPath.push([sectionIndex, index]);\n        }\n      });\n    });\n  }\n\n  // console.log(\"🚀 -> getElementFromElementId -> foundPath: \", foundPath);\n  return foundPath;\n}\n\n// Fix conflict with React component 'Date' and Date JS Object\nexport function getCurrentDate(pDate = Date.now()) {\n  // console.log(`--->: getCurrentDate -> pDate`, pDate)\n  // return new Date().toLocaleDateString().split('/').reverse().join('-')\n  // return new Date().toLocaleDateString()\n  // return new Date()\n  return new Date(pDate);\n}\nexport function getDateObjFromDate(pDate) {\n  const dateObj = new Date(pDate + \" \" + new Date().toTimeString());\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj;\n}\nexport function getDateObjFromTime(pTime) {\n  const dateObj = new Date(new Date().toDateString() + \" \" + pTime);\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj;\n}\nexport function getDateObjFromDateString(pDate) {\n  const dateObj = new Date(pDate);\n  return dateObj;\n}\n\nexport function normalizeJson(pJson) {\n  // const json = JSON.parse(pJson)\n  return camelcaseKeys(pJson, { deep: true, pascalCase: true });\n}\n\n//\nconst exportMetaData = [];\nexport function addToDocumentExport(pValue) {\n  const controlIndex = exportMetaData.findIndex(item => item.Id === pValue.Id);\n  if (controlIndex === -1) exportMetaData.push(pValue);\n  else {\n    console.log(pValue.Id, \" already indexed\");\n    const prevValue = { ...exportMetaData[controlIndex] };\n    exportMetaData[controlIndex] = { ...prevValue, ...pValue };\n  }\n  // console.log(`--->: addToDocumentExport -> pValue`, pValue.Id)\n  // console.log(`exportMetaData :`);\n  console.table(exportMetaData);\n\n  // exportMetaData[0].Elements.push(pValue)\n  // console.log('---> addToDocumentExport: ', exportMetaData)\n}\n\nexport function getDocumentExport() {\n  return { Elements: exportMetaData };\n}\n","import React, { useState, useEffect } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  setCurrentToken,\n  selectDebugMode,\n  setErrorMsg,\n  selectErrorMsg,\n  setCurrentTemplate,\n  selectCurrentTemplate,\n  setCurrentDocument,\n  selectCurrentDocument,\n  setDocumentStatus,\n  selectDocumentStatus,\n} from \"../features/config/configSlice\";\nimport {\n  setJson,\n  selectJson,\n  setRepeaterValue,\n  selectRepeaterValue,\n  // selectCurrentAction,\n  // setCurrentAction\n} from \"../features/json/jsonSlice\";\n\nimport { normalizeJson, getControlPathById, getDocumentExport } from \"../app/utilities\";\n\nexport default function FormInterface(props) {\n  // console.log(\"-------> render FormInterface \", props);\n\n  const apiURL = process.env.REACT_APP_API_URL_UAT;\n\n  const isDebugging = useSelector(selectDebugMode);\n  const currentTemplate = useSelector(selectCurrentTemplate);\n  const currentDocument = useSelector(selectCurrentDocument);\n  const repeaterValue = useSelector(selectRepeaterValue);\n  const documentStatus = useSelector(selectDocumentStatus);\n  const dispatch = useDispatch();\n\n  const [isDocumentEditing, setIsDocumentEditing] = useState(false);\n\n  const url = new URL(window.location.href);\n\n  const currentUserName = url.searchParams.get(\"user\");\n  const currentToken = url.searchParams.get(\"token\");\n\n  const projectId = Number(url.searchParams.get(\"projectId\"));\n  const templateId = Number(url.searchParams.get(\"templateId\"));\n  const documentId = Number(url.searchParams.get(\"documentId\"));\n  // const userName = currentUserName;\n  // const currentUserName = \"red.marble\";\n  // const currentToken =\n  //   \"eNmZdo4jm_3mGCBr-hjGmT0hlcr8FRY0sAWRhVVnaIsZXuSN0ej02XnAeIuwTQYDflMu7EakK0vU-stJxh2uTGZUJVXFC1C55y6C2lNyN6nVuNca8WDO2nMT-Yy5zTrSuJf6aMgoXVE6ZZgTvJ-KgpXetqy9PRknM2rYsq0xUfGdq6WU6NNJxIM34UcBNwZTFaWnWrZTZ8fqr67Jin55qhVjvRPyuziWK2nKBEZhGkyEHnTGPZkhg_KjYhDMW6OLXxt08JIBru7wReaXZo6iZBKKV5OzVfCD5FI2mqerQgrzYxZQmk2CxGGxBmaDX6vJIdw22iZ9hPsp4-5Pw8uaCOH63UJ2Ex6RQpnNiUqJjKVjuM6_013GCVfUBylDGe_6Yk5VsL2chKpQjOxnnzvl0WeS5R_NgR14settDhRi9QJgeDli3gAIYWa2KJUBPdpEMxwXZck8cALaI9Emovo_Lwi92JHVpd9SaDVe_auyEkIw-Y01xKkfdBb8dttBXRtdxgX3K9XR8nnBI8E1FZYET3U6eo0bwJRMXDWdlkhPE6_S4X8cOYNxOy1HL4HM_KiVjXOP_orUSKb6WW-DUFV3BHoZqXe-5oAJ2Acjvj-rxPTHzbJfkTdFk2kW0KQo4yRF21oTyn6PTQaNfxU03oRPOc-KxZd2XhB9idjs3wAn9IFUavmw1dGAlCyWy2EYXWVyP_pMgWWMgzY3DwpJUDtHopgW9UhGPo7DSxFX4bKgjteoPuxbNHAxN0IwItJJp2G-Fw_fx2lndisCi1hGIRCa17Hkrb5bz9LAvK0xVOep4THU3-D8waU3yGIRebY7xCGFs_Z-RQlF2FtKypDTM0JKjumtTHNvWT4dn2y3HxQWhTtrUU44ONI8aQtCLDBIpGvN\";\n  // const projectId = 1810;\n  // const templateId = 3;\n  // const documentId = 3007;\n  // 2994\n  // 2957\n  // 3007\n\n  useEffect(() => {\n    dispatch(setCurrentToken(currentToken));\n\n    const fetchFormHeaders = new Headers();\n    fetchFormHeaders.append(\"Authorization\", `Bearer ${currentToken}`);\n    fetchFormHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: fetchFormHeaders,\n      redirect: \"follow\",\n    };\n\n    // Load the template and/nor the document\n    if (templateId > 0) {\n      //   console.log(\"-----------------> Fetching Template\");\n      fetch(`${apiURL}/V1.0/Project/${projectId}/Document/Form/Template/${templateId}`, requestOptions)\n        .then(data => data.json())\n        .then(response => {\n          //   console.log(\"%c \" + \"Fetching Template \", \"background:red;color:white;\");\n          //   console.log(\"----> Template response: \", response);\n          dispatch(setCurrentTemplate(response));\n        })\n        .catch(error => console.log(\"error\", error));\n    }\n    if (documentId > 0) {\n      //   console.log(\"-----------------> Fetching Document\");\n      setIsDocumentEditing(true);\n      fetch(`${apiURL}V1.0/Project/${projectId}/Document/${documentId}`, requestOptions)\n        .then(data => data.text())\n        .then(response => {\n          //   console.log(\"%c \" + \"Fetching Document \", \"background:red;color:white;\");\n          //   console.log(\"---> Document reponse: \", JSON.parse(response).Document);\n          dispatch(setCurrentDocument(JSON.parse(response).Document));\n        })\n        .catch(error => console.log(\"error\", error));\n\n      //   console.log(\n      //     \"%c\" + \"----> fetchingType: \" + fetchingStatus,\n      //     \"background:green;color:white\",\n      //     \" template ready:\",\n      //     currentTemplate.hasOwnProperty(\"Config\"),\n      //     \" document ready:\",\n      //     currentDocument.hasOwnProperty(\"MetaData\")\n      //   );\n    }\n    if (templateId === 0 && documentId === 0) console.log(\"-------> Form details are missing\");\n  }, [dispatch, apiURL]);\n\n  useEffect(() => {\n    // console.log(\"%c\" + \"🚀 -> useEffect -> fetchingStatus: \", \"background:green;color:white\", {\n    //   template: currentTemplate,\n    //   document: currentDocument,\n    // });\n\n    // Aggregate JSON when Template and/nor Document are ready\n    if (currentTemplate.hasOwnProperty(\"Config\") && documentId === 0) {\n      console.log(\"----> : Template only, setting the JSON\");\n      dispatch(setDocumentStatus(\"loaded\"));\n      dispatch(setJson(normalizeJson(JSON.parse(currentTemplate.Config))));\n    } else if (currentTemplate.hasOwnProperty(\"Config\") && currentDocument.hasOwnProperty(\"MetaData\")) {\n      dispatch(setDocumentStatus(\"loaded\"));\n      const templateToUpdate = normalizeJson(JSON.parse(currentTemplate.Config));\n      const controlsUpdates = JSON.parse(currentDocument.MetaData)[0];\n      const jsonToUpdate = templateToUpdate;\n      let repeaterValues = [];\n      // console.log(\"🚀 -> aggregateJson -> templateToUpdate: \", templateToUpdate);\n      console.log(\"🚀 -> aggregateJson -> controlsUpdates: \", controlsUpdates);\n\n      controlsUpdates.Elements.forEach(item => {\n        let itemPath;\n        itemPath = getControlPathById(templateToUpdate, item.Id)[0];\n\n        if (item.Type === \"Matrix\") {\n          item.Elements.forEach((subitem, index) => {\n            // console.log(\"%c\" + \"----> Matrix subitem \", \"background:blue;color:white\", subitem.Id, getControlPathById(templateToUpdate, subitem.Id));\n\n            itemPath = getControlPathById(templateToUpdate, subitem.Id)[0];\n            if (itemPath === undefined) {\n              console.log(\"%c\" + item.Id + \" not found in the template\", \"color:red\");\n              return;\n            }\n            // } else console.log(\"-------> Look  for subitem Id: \", subitem.Id, itemPath);\n            //   //   if (itemPath.length > 1)\n            //   //     dispatch(\n            //   //       setErrorMsg(`Multiple ID '${item.Id}' found in the template`)\n            //   //     );\n            //   if (itemPath.length === 0) return;\n            //   itemPath = itemPath[0];\n            const templateValues = templateToUpdate.Sections[itemPath[0]].Elements[itemPath[1]].Elements[itemPath[2]].Elements[itemPath[3]];\n            templateToUpdate.Sections[itemPath[0]].Elements[itemPath[1]].Elements[itemPath[2]].Elements[itemPath[3]] = { ...templateValues, ...subitem };\n            // console.log(\"🚀 -> updated -> templateValues: \", templateToUpdate);\n            // console.log(`subItem path received: `, itemPath)\n          });\n        } else if (item.Type === \"Repeatable\") {\n          console.log(\"----> Repeatable metadata: \", item);\n          // let repeatable = [];\n          repeaterValues.push(item);\n          // console.log(\"%c \" + item.Id + \" - \" + item.Type + \" \", \"background:blue;color:white\", itemPath, item);\n          //   console.log(\"----> Repeatable value: \", repeaterValue);\n          //   console.log(\"%c \" + item.Id + \" - \" + item.Type + \" \", \"background:blue;color:Snow\", itemPath);\n          // item.RepeaterValue.forEach((repeat, index) => {\n          // console.log(\"%c \" + \"       \" + index + \": \" + item.Type + \" \", \"background:DodgerBlue;color:white\", repeat);\n          // repeat.forEach(value => {\n          //   console.log(\"%c \" + \"       -> \" + value.Type + \" \", \"background:SkyBlue;color:SlateGray\", value);\n          // });\n          // });\n          // repeaterValues[item.Id] = repeatable;\n\n          // console.log('doc item: ', item)\n          // itemPath = getControlPathById(JSON.parse(pTemplate.Config), item.Id)\n          // if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n          // if (itemPath.length === 0) return\n          // itemPath = itemPath[0]\n          //   const templateValues = templateToUpdate.Sections[itemPath[0]].Elements[itemPath[1]];\n          //   console.log(`--->: template item: `, templateValues);\n          //   dispatch(setRepeaterValue([...repeaterValue, item.RepeaterValue]));\n        } else {\n          //   itemPath = getControlPathById(templateToUpdate, item.Id)[0];\n\n          // if (itemPath.length > 1)\n          //   dispatch(\n          //     setErrorMsg(`Multiple ID '${item.Id}' found in the template`)\n          //   );\n          if (itemPath === undefined) {\n            console.log(\"%c\" + item.Id + \" not found in the template\", \"color:red\");\n            return;\n          }\n          //   console.log(\"item value: \", item, \" --> path:  \", { sectionIndex: itemPath[0], pos: itemPath[1] });\n          //   const templateValues = templateToUpdate.Sections[itemPath[0]].Elements[itemPath[1]];\n          //   templateToUpdate.Sections[itemPath[0]].Elements[itemPath[1]] = {\n          //     ...templateValues,\n          //     ...item,\n          //   };\n          // }\n          // console.log(\"%c \" + item.Id + \" \", \"background:blue;color:white\", item.Type, itemPath, item);\n          // let jsonToUpdate = JSON.parse(JSON.stringify(json));\n          // RELOCATE IN UTILITIES\n          let prevValues;\n          switch (itemPath.length) {\n            case 2:\n              prevValues = { ...jsonToUpdate.Sections[itemPath[0]].Elements[itemPath[1]] };\n              // console.log(\"🚀 -> useEffect -> prevValues\", prevValues);\n              jsonToUpdate.Sections[itemPath[0]].Elements[itemPath[1]] = { ...prevValues, ...item };\n              break;\n            case 3:\n              prevValues = jsonToUpdate.Sections[itemPath[0]].Elements[itemPath[1]].Elements[itemPath[2]];\n              // console.log(\"🚀 -> useEffect -> prevValues\", prevValues);\n              jsonToUpdate.Sections[itemPath[0]].Elements[itemPath[1]].Elements[itemPath[2]] = { ...prevValues, ...item };\n              break;\n            case 4:\n              prevValues = jsonToUpdate.Sections[itemPath[0]].Elements[itemPath[1]].Elements[itemPath[2]].Elements[itemPath[3]];\n              // console.log(\"🚀 -> useEffect -> prevValues\", prevValues);\n              jsonToUpdate.Sections[itemPath[0]].Elements[itemPath[1]].Elements[itemPath[2]].Elements[itemPath[3]] = { ...prevValues, ...item };\n              break;\n            default:\n              console.log(\"----> Control path invalid!\");\n              break;\n          }\n        }\n      });\n      //   console.log(\"🚀 -> useEffect -> repeaterValues: \", repeaterValues);\n      //   console.log(\"Json created from Template with Document's data: \", templateToUpdate);\n      dispatch(setRepeaterValue(repeaterValues));\n      dispatch(setJson(jsonToUpdate));\n    }\n  }, [currentTemplate, currentDocument, dispatch]);\n\n  useEffect(() => {\n    if (documentStatus === \"tosend\") {\n      let metadata = JSON.stringify([getDocumentExport()]);\n      console.log(`----> metadata`, metadata);\n\n      const sendFormHeaders = new Headers();\n      sendFormHeaders.append(\"Authorization\", `Bearer ${currentToken}`);\n\n      // JSON.stringify triple metadata backslashes\n      const documentBody = JSON.stringify({\n        ID: 0,\n        ProjectID: projectId,\n        Description: \"\",\n        Title: \"Test-NewDoc\",\n        DocumentTypeId: 1088,\n        DocumentFormTemplateID: templateId,\n        UserRevisionNumber: \"0\",\n        UserRevisionDate: \"2020-09-25\",\n        MetaData: metadata,\n        OpenClosedStatus: \"O\",\n        CreatedByContactID: 1059,\n        CreatedByCompanyID: 1009,\n      });\n\n      const documentBodyString = JSON.stringify(documentBody);\n\n      let formdata = new FormData();\n      formdata.append(\"Document\", documentBody);\n      console.log(`--->: sendind with body ------>  :   `, documentBodyString);\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: sendFormHeaders,\n        body: formdata,\n      };\n\n      fetch(`${apiURL}V1.0/Project/${projectId}/Document/Template/${templateId}/Create`, requestOptions)\n        .then(res => res.text())\n        .then(result => console.log(\"response: \", result))\n        .catch(error => console.log(\"error\", error));\n\n      dispatch(setDocumentStatus(\"sent\"));\n    }\n  }, [documentStatus]);\n\n  return (\n    <div className={`App-tools ${isDebugging ? \"\" : \"hidden\"}`}>\n      <ul>\n        <li>project: {projectId}</li>\n        <li>template: {templateId}</li>\n        <li>document: {documentId}</li>\n        <li>userName: {currentUserName}</li>\n        <li className=\"textcut textcut-lg\">token: {currentToken}</li>\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectJson } from \"../../features/json/jsonSlice\";\n\nimport { callSection } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction DocumentTableOfContents(props) {\n  const json = useSelector(selectJson);\n  const dispatch = useDispatch();\n\n  // const { Title, Id, Elements }  = json\n\n  function gotToSectionHanlder(pSectionIndex) {\n    // console.log('pSectionIndex: ', pSectionIndex)\n    dispatch(callSection(pSectionIndex));\n  }\n\n  const sections =\n    json.Sections && json.Sections.length > 0\n      ? json.Sections.map((element, index) => {\n          if (element.Elements[0].Type === \"Document.TableOfContents\")\n            return null;\n          return (\n            <li key={index}>\n              <button\n                className=\"btn-secondary-outlined btn-link fixed-large\"\n                onClick={() => gotToSectionHanlder(index)}\n              >\n                {element.Title}\n                <FontAwesomeIcon icon={faChevronRight} />\n              </button>\n            </li>\n          );\n        })\n      : \"\";\n\n  return <ul className=\"toc-list\">{sections}</ul>;\n}\n\nexport default DocumentTableOfContents;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectOptionedControls,\n  selectDebugMode,\n} from \"../../features/config/configSlice\";\n\nfunction ListMulticontrol(props) {\n  const json = props.controlJson;\n\n  const { Type, Title, Id, Data, IsVisible = true } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  function onChangeHandler(pEvent) {\n    const selectedIndex = Number(pEvent.target.value);\n    // console.log(`--->: onChangeHandler -> selectedIndex`, selectedIndex)\n    if (selectedIndex >= 0) {\n      const visibleControls =\n        json.OptionedControls[selectedIndex].Controls !== undefined\n          ? json.OptionedControls[selectedIndex].Controls\n          : [];\n      const hiddenControls = [];\n\n      json.OptionedControls.forEach((option, index) => {\n        // console.log('index: ', index, '  selectedIndex: ', selectedIndex)\n\n        if (option.Controls !== undefined && index !== selectedIndex) {\n          option.Controls.forEach((controlId) =>\n            hiddenControls.push(controlId)\n          );\n          // console.log('index: ', index, '  selectedIndex: ', selectedIndex, '   hide: ', option.Controls)\n        }\n      });\n\n      // console.log('---> hiddenControls: ', hiddenControls)\n      // console.log('---> visibleControls: ', visibleControls)\n      dispatch(selectOptionedControls({ hiddenControls, visibleControls }));\n      // displayControls(visibleControls)\n    }\n  }\n\n  function displayControls(pControlList) {\n    // console.log('---> pControlList: ', pControlList)\n    // dispatch(setControls(pControlList))\n    // pControlList.forEach((item, index) => {\n    //   console.log('---> ', item)\n    // })\n  }\n\n  const options = Data.map((option, index) => (\n    <option key={index} value={index}>\n      {option}\n    </option>\n  ));\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"listmulticontrol\">{Title}</label>\n        <select\n          name=\"listmulticontrol\"\n          id=\"listmulticontrol\"\n          onChange={onChangeHandler}\n        >\n          <option value=\"-1\">-----</option>\n          {options}\n        </select>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ListMulticontrol;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction Label(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, FontAttributes, FontSize = 14, Margin = 0, HasUnderLine = false } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <div\n          // className=\"control\"\n          style={{\n            fontSize: FontSize - 2 + \"px\",\n            fontWeight: FontAttributes === \"Bold\" ? \"bold\" : \"\",\n            fontStyle: FontAttributes === \"Italic\" ? \"italic\" : \"\",\n            borderBottom: HasUnderLine ? \"1px solid black\" : \"\",\n            padding: Margin ? Margin + \"px\" : \"\",\n          }}\n        >\n          {Title}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Label;\n","import React from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop, callback } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  const actionBtns = callback ? <div>\n    <button className={styles.modalBtn} onClick={toggleVisibility}>Cancel</button>\n    <button className={styles.modalBtn} onClick={callback}>OK</button>\n  </div>\n    :\n    <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springModalProps}>\n          <div\n            className={styles.modalContainer}\n            style={css}>\n            <div className={styles.modalClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.modalHeader}>\n              <FontAwesomeIcon icon={faExclamationTriangle} />\n            </div>\n            <div className={styles.modalContent}>\n              {message}\n            </div>\n            <div className={styles.modalFooter}>\n              {actionBtns}\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Modal from \"../Modal\";\n\nimport { selectDebugMode, setCurrentContact, selectCurrentContact, selectDocumentStatus } from \"../../features/config/configSlice\";\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nfunction Text(props) {\n  const json = props.controlJson;\n\n  let { Type, Title, Id, IsVisible = true, IsEnabled = true, Value = \"\", Format, Warning = false, WarningMessage, Mandatory, ValidationMessage, AssociatedId } = json;\n  // Id case insensitive\n  if (Boolean(json.ID)) {\n    Id = json.ID;\n  }\n\n  const debugMode = useSelector(selectDebugMode);\n  const currentContact = useSelector(selectCurrentContact);\n  // const status = useSelector(selectDocumentStatus)\n  const dispatch = useDispatch();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalOptions, setModalOptions] = useState(Mandatory ? { message: ValidationMessage, bgColor: \"#EF643C\" } : { message: WarningMessage, bgColor: \"#000000\" });\n\n  const emailAddressTester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n  const phoneNumberRestrictCodes = [49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 16, 57, 48, 16, 187, 32, 8, 35];\n\n  // useEffect(() => {\n  //   if (status === 'reset-currentContact') {\n  //     const newJson = JSON.parse(JSON.stringify(json))\n  //     newJson.Value = ''\n  //     console.log(`---> ~ file: Text.js ~ line 36 ~ useEffect ~ newJson`, newJson)\n  //     props.updateJson(newJson)\n\n  //     // console.log('---> Should reset this: ', document.getElementById('ManualSMSName').value, document.getElementById('ManualSMSPhone').value)\n  //     // document.getElementById('ManualSMSName').value = ''\n  //     // document.getElementById('ManualSMSPhone').value = ''\n  //   }\n  // }, [status])\n\n  function onChangeHandler(pEvent) {\n    // EMAIL&SMS Register\n    if (AssociatedId && AssociatedId.Names.length > 0) {\n      if (Id === \"ManualSMSName\") dispatch(setCurrentContact({ ...currentContact, name: pEvent.target.value }));\n      if (Id === \"ManualSMSPhone\")\n        dispatch(\n          setCurrentContact({\n            ...currentContact,\n            phoneNumber: pEvent.target.value,\n          })\n        );\n      if (Id === \"ManualEmailName\") dispatch(setCurrentContact({ ...currentContact, name: pEvent.target.value }));\n      if (Id === \"ManualEmailEmail\") dispatch(setCurrentContact({ ...currentContact, email: pEvent.target.value }));\n    }\n\n    const valuesToExport = { Type, Id, Value: pEvent.target.value };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = pEvent.target.value;\n    // console.log('value: ', json)\n    props.updateJson(newJson);\n  }\n\n  function onBlurHandler(pEvent) {\n    const target = pEvent.target;\n\n    if (Warning && target.value === \"\") {\n      setIsModalVisible(true);\n    }\n    if (Mandatory && target.value === \"\") {\n      target.focus();\n      setIsModalVisible(true);\n    }\n    if (Format !== undefined && Format.Keyboard === \"Email\") {\n      if (!emailAddressTester.test(pEvent.target.value.toLowerCase())) {\n        setModalOptions({\n          message: \"The email address provided appears not to be valid\",\n          bgColor: \"#000000\",\n        });\n        setIsModalVisible(true);\n      }\n    }\n  }\n\n  function onKeyDownHandler(pEvent) {\n    // console.log('---> ', pEvent.keyCode)\n    if (Format.Keyboard === \"Telephone\") {\n      if (!phoneNumberRestrictCodes.includes(pEvent.keyCode)) pEvent.preventDefault();\n    }\n  }\n\n  useEffect(() => {\n    // console.log('Text set data: ', Value)\n  }, [json]);\n\n  const textfield =\n    Format !== undefined ? (\n      Format.Lines !== undefined ? (\n        <textarea id={Id} rows={Format.Lines} onChange={onChangeHandler} defaultValue={Value}></textarea>\n      ) : Format.Keyboard === \"Numeric\" ? (\n        <input type=\"number\" min={Format.Min} max={Format.Max} size={Format.Decimal} onChange={onChangeHandler} />\n      ) : Format.Keyboard === \"Telephone\" ? (\n        <input type=\"text\" maxLength=\"20\" onKeyDown={onKeyDownHandler} onChange={onChangeHandler} />\n      ) : (\n        <input id={Id} type=\"text\" value={Value} maxLength={Format.VarChar || -1} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n      )\n    ) : (\n      <input id={Id} type=\"text\" value={Value} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n    );\n\n  const warningMarker = WarningMessage ? \"*\" : \"\";\n  const mandatoryMarker = Mandatory ? <span className=\"warning-red\">*</span> : \"\";\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"title\">\n          {Title} {warningMarker}\n          {mandatoryMarker}\n        </label>\n        {textfield}\n      </div>\n      <Modal\n        visibility={isModalVisible}\n        toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n        message={`${Id}: ${modalOptions.message}`}\n        css={{ backgroundColor: modalOptions.bgColor }}\n        backdrop={\"rgba(0,0,0,0.3)\"}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Text;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\nimport { setJson, selectJson, setRepeaterValue, selectRepeaterValue } from \"../../features/json/jsonSlice\";\n\nimport { getControlName } from \"../../app/utilities\";\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  // Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument,\n} from \"./\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Repeatable(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Elements, IsVisible = true } = json;\n  // console.log(`--->: New repeatable -> json: `, json.Id, json.Elements);\n\n  const dispatch = useDispatch();\n\n  const repeaterValue = useSelector(selectRepeaterValue);\n  const debugMode = useSelector(selectDebugMode);\n\n  const currentRepreaterIndex = repeaterValue.findIndex(repeater => repeater.Id === Id);\n  const repeatableSchema = Elements.map(control => {\n    // if (control.Value) control.Value = \"\";\n    const elementCopy = { ...control };\n    delete elementCopy.ElementId;\n    return elementCopy;\n  });\n  // console.log(\"🚀 -> Repeatable -> repeatableSchema: \", repeatableSchema);\n  // console.log(`--->: Repeatable -> repeaterValue`, repeaterValue)\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument,\n  };\n\n  // useEffect(() => {\n  //   console.log(\"----> repeaterValue: \", repeaterValue);\n  //   console.log(\"----> found values: \", repeaterValue[Id]);\n  // }, [repeaterValue, Id]);\n\n  function updateJsonHandler(pJson, pRepeaterIndex) {\n    // // console.log('this repeater: ', pRepeaterIndex)\n    // // console.log('update this: ', pJson)\n    // const repeaterControlIndex = repeaterValue[pRepeaterIndex].findIndex(item => item.Id === pJson.Id);\n    // const newRepeaterValues = [...repeaterValue];\n    // console.log(`--->: updateJsonHandler -> newRepeaterValues`, newRepeaterValues);\n    // console.log(`--->: updateJsonHandler -> newRepeaterValues[pRepeaterIndex][repeaterControlIndex]`, newRepeaterValues[pRepeaterIndex][repeaterControlIndex]);\n    // newRepeaterValues[pRepeaterIndex] = [...newRepeaterValues[pRepeaterIndex], pJson];\n    // dispatch(setRepeaterValue(newRepeaterValues));\n    // // props.updateJson({ ...json, Elements: mergedElements })\n  }\n\n  function addRepeatable() {\n    const repeaterValueToUpdate = JSON.parse(JSON.stringify(repeaterValue));\n\n    const repeaterIndex = currentRepreaterIndex < 0 ? repeaterValue.length : currentRepreaterIndex;\n    if (currentRepreaterIndex < 0) {\n      repeaterValueToUpdate.push({ Type: \"Repeatable\", RepeaterValue: [repeatableSchema], Id });\n    } else repeaterValueToUpdate[repeaterIndex].RepeaterValue.push(repeatableSchema);\n    dispatch(setRepeaterValue(repeaterValueToUpdate));\n  }\n\n  function removeRepeatableByIndex(pIndex) {\n    console.log(\"----> repeaterValue: \", repeaterValue);\n\n    const repeaterValueToUpdate = JSON.parse(JSON.stringify(repeaterValue));\n\n    const repeatableIndex = repeaterValue.findIndex(repeatable => repeatable.Id === Id);\n    console.log(\"🚀 -> removeRepeatableByIndex -> pIndex\", pIndex);\n\n    const repeatableValue = repeaterValue[repeatableIndex].RepeaterValue.filter((repeat, index) => index !== pIndex);\n    console.log(\"🚀 -> removeRepeatableByIndex -> repeatableValue\", repeatableValue);\n    repeaterValueToUpdate[0].RepeaterValue = repeatableValue;\n\n    console.log(\"----> repeaterValueToUpdate: \", repeaterValueToUpdate);\n    dispatch(setRepeaterValue(repeaterValueToUpdate));\n  }\n\n  const repeatable = (pControls, pIndex) => (\n    <div className=\"repeatable\" key={`rep-${pIndex}`}>\n      <div className=\"repeatable-header\">\n        <h3 className=\"repeatable-title\">\n          #{pIndex + 1}, {Title}\n        </h3>\n        <button className=\"btn btn-secondary btn-small\" onClick={e => removeRepeatableByIndex(pIndex)}>\n          Remove\n          <FontAwesomeIcon icon={faTrash} />\n        </button>\n      </div>\n      {pControls}\n    </div>\n  );\n\n  let children;\n\n  if (currentRepreaterIndex < 0) {\n    console.log(\"----> repeatable is empty, process with repeatableSchema: \", repeatableSchema);\n    const controls = repeatableSchema.map((control, index) => {\n      const componentName = getControlName(control.Type);\n      const Component = components[componentName];\n      return <Component key={index} controlJson={{ ...control }} updateJson={pJson => updateJsonHandler(pJson, index)} />;\n    });\n    children = repeatable(controls, 0);\n  } else {\n    // console.log(\"🚀 -> Repeatable -> currentRepreater\", repeaterValue[currentRepreaterIndex].RepeaterValue);\n    children = repeaterValue[currentRepreaterIndex].RepeaterValue.map((values, index) => {\n      // console.log(\"---> repeaterValue: \", values);\n      const controls = values.map((control, index) => {\n        const controlBaseJson = repeatableSchema.filter(item => item.Id === control.Id)[0];\n        // console.log(\"🚀 -> controls -> controlBaseJson\", controlBaseJson);\n\n        const componentName = getControlName(control.Type);\n        const Component = components[componentName];\n        return <Component key={index} controlJson={{ ...control, ...controlBaseJson }} updateJson={pJson => updateJsonHandler(pJson, index)} />;\n      });\n      return repeatable(controls, index);\n    });\n  }\n  console.log(\"🚀 -> children\", children);\n\n  // const children = repeaterValue.map((value, repeaterIndex) => {\n  //   console.log(`--->value: `, value);\n\n  //   const controls = Elements.map((control, index) => {\n  //     // console.log('---> ', control)\n\n  //     value.forEach((repeaterControl, index) => {\n  //       if (control.Id === repeaterControl.Id) control = { control, ...repeaterControl };\n  //     });\n\n  //     const componentName = getControlName(control.Type);\n  //     const Component = components[componentName];\n  //     return <Component key={index} controlJson={control} updateJson={pJson => updateJsonHandler(pJson, repeaterIndex)} />;\n  //   });\n\n  //   return (\n  //     <div className=\"repeatable\" key={`rep-${repeaterIndex}`}>\n  //       <div className=\"repeatable-header\">\n  //         <h3 className=\"repeatable-title\">\n  //           #{repeaterIndex + 1}, {Title}\n  //         </h3>\n  //         <button className=\"btn btn-secondary btn-small\" onClick={e => removeRepeatableByIndex(repeaterIndex)}>\n  //           Remove\n  //           <FontAwesomeIcon icon={faTimes} />\n  //         </button>\n  //       </div>\n  //       {controls}\n  //     </div>\n  //   );\n  // });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n\n      <div className=\"control\">\n        {/* <div className=\"repeatable-header\">\n            <h3 className=\"repeatable-title\">{Title}</h3>\n            <button className=\"btn btn-secondary btn-small\" onClick={e => console.log('ok')}>\n              Remove\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div> */}\n        {children}\n\n        <button className=\"btn btn-primary\" onClick={addRepeatable}>\n          <FontAwesomeIcon icon={faPlusSquare} />\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Repeatable;\n","import React, { useState } from 'react'\n\nfunction ButtonSubmitPurchase(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitPurchase<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitPurchase\n","import React, { useState } from 'react'\n\nfunction ButtonAddDocketNumber(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddDocketNumber<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddDocketNumber\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nimport { selectCurrentToken, selectOpenListId, setOpenListId, selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSpring, animated, useTrail, config } from \"react-spring\";\n\nfunction API(props) {\n  const json = props.controlJson;\n\n  const { Title, Type, Id, IsVisible = true, Value = \"\", Api, IncludePhoneNumber, IncludeEmail, IncludeTitle, IncludeBusinessNumber, IncludeAbbreviation, IncludeCode } = json;\n  const targetedApi = String(Api).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n  const token = useSelector(selectCurrentToken);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n  const [selectedValues, setSelectedValues] = useState(Value.constructor === String ? [Value] : Value);\n\n  const openListId = useSelector(selectOpenListId);\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 });\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: {\n      opacity: 0,\n      marginLeft: -12,\n      marginTop: -6,\n      transform: \"scaleX(0.6) scaleY(0.8)\",\n    },\n    to: {\n      opacity: 1,\n      marginLeft: 0,\n      marginTop: 0,\n      transform: \"scaleX(1) scaleY(1)\",\n    },\n    // config: { duration: 1250 },\n    config: config.stiff,\n  });\n\n  // useEffect(() => {\n  //   // console.log(`API (${Title}) has new json: ${JSON.stringify(json)}`)\n  //   // console.log('API: default data: ', Value)\n  // }, [json])\n\n  /**-------------------------------------------------**\n   * @desc - API                                   -----*\n   *----------------------------------------------------*/\n\n  const environment = \"https://api-uat.extrack.com/V1.0/\";\n  const projectID = 1249;\n\n  const apiUrl = `${environment}${getEndpoint()}`;\n\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n  // console.log(`--->: API -> Api`, Api, token.access_token)\n\n  const apiHeaders = new Headers();\n  apiHeaders.append(\"Authorization\", `Bearer ${token}`);\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: apiHeaders,\n    redirect: \"follow\",\n  };\n\n  function getEndpoint() {\n    switch (targetedApi) {\n      case \"projectcompany\":\n        return `Project/${projectID}/Directory/Companies`;\n      case \"projectcontacts\":\n        return `Project/${projectID}/Directory/Contacts`;\n      case \"globalcontacts\":\n        return `Org/contacts`;\n      case \"dockettypes\":\n        return `/Docket/Types`;\n      case \"abs\":\n        return `Project/${projectID}/ABS`;\n      case \"tbs\":\n        return `Project/${projectID}/TBS`;\n      case \"cbs\":\n        return `Project/${projectID}/CbsWo`;\n      case \"dbs\":\n        return `Project/${projectID}/DBS`;\n      case \"fbs\":\n        return `Project/${projectID}/FBS`;\n      case \"wbs\":\n        return `Project/${projectID}/WBS`;\n      case \"pcbs\":\n        return `Project/${projectID}/PCBS`;\n      case \"pbs\":\n        return `Project/${projectID}/PBS`;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(targetedApi, JSON.parse(result))\n        const dropdownOptions = JSON.parse(result);\n        // console.log(`--->: API -> dropdownOptions`, dropdownOptions)\n\n        const listItems = dropdownOptions.map((item, index) => {\n          let option, phoneNumber, emailAddress, title, abn, abbr, code, spacer;\n          switch (Api) {\n            case \"ProjectContacts\":\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Contact.Number || `n/a`}` : ``;\n              emailAddress = IncludeEmail ? ` | ${item.Contact.Email || `n/a`}` : ``;\n              option = `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}${phoneNumber}${emailAddress}`;\n              break;\n\n            case \"GlobalContacts\":\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Number || `n/a`}` : ``;\n              emailAddress = IncludeEmail ? ` | ${item.Email || `n/a`}` : ``;\n              option = `${item.NameFirst} ${item.NameLast} | ${item.CompanyName}${phoneNumber}${emailAddress}`;\n              break;\n\n            case \"ProjectCompany\":\n              // console.log(`--->: API ${Api} -> item`, item)\n\n              title = IncludeTitle ? ` | ${item.Title || `n/a`}` : ``;\n              abn = IncludeBusinessNumber ? ` | ${item.Company.Abn || `n/a`}` : ``;\n              abbr = IncludeAbbreviation ? ` | ${item.Company.Abbr || `n/a`}` : ``;\n              option = `${item.Company.Name}${title}${abn}${abbr}`;\n              // optionLabel = `${item.Company.Name} - ${item.Company.Abbr}`\n              break;\n\n            case \"DocketTypes\":\n              option = `${item.Title}`;\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break;\n            default:\n              title = IncludeTitle ? `${item.Title || `n/a`}` : ``;\n              code = IncludeCode ? `${item.Code || `n/a`}` : ``;\n              spacer = IncludeCode && IncludeTitle ? ` | ` : ``;\n              option = `${title}${spacer}${code}`;\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break;\n          }\n\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          // console.log('component:', {Type: 'Api', Value, optionLabel})\n          // setSelectedValue(optionValue)\n          // }\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          //   currentValue = Value\n          //   console.log('API ---> DefaultValue: ', Value, '----> optionLabel : ', optionLabel)\n\n          // }\n          // return <option key={index} value={optionValue}>{optionLabel}</option>\n          return option;\n        });\n        setList(listItems);\n        // console.log(`--->: API -> dropdownNodes`, dropdownNodes)\n      })\n      .catch(error => console.log(\"error\", error));\n  }, []);\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id));\n  }, [collapsed, Id, dispatch]);\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true);\n  }, [openListId, Id]);\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(list.filter(item => item.toLowerCase().includes(keyword.toLowerCase())));\n  }, [list, keyword]);\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target;\n    if (target.className === \"input-select\" || target.className === \"input-select-items\") setCollapsed(!collapsed);\n    else if (target.className === \"remove-item\") {\n      const targetText = target.parentNode.innerText;\n      if (targetText !== \"\") {\n        updateJSON(\"\");\n        setSelectedValues(selectedValues.filter(item => item !== targetText));\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id;\n\n    if (selectedValues[0] !== currentItem) setSelectedValues([currentItem]);\n    else setSelectedValues([]);\n    updateJSON(currentItem);\n  }\n  function updateJSON(pValue) {\n    const valuesToExport = { Type, Id, Value: pValue };\n    addToDocumentExport(valuesToExport);\n\n    // console.log(`--->: updateJSON with Value: `, pValue)\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (newJson.Value === pValue) newJson.Value = \"\";\n    else {\n      newJson.Value = pValue;\n      setCollapsed(true);\n    }\n    // console.log(`--->: updateJSON -> newJson`, newJson)\n    props.updateJson(newJson);\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed\n    ? \"\"\n    : filteredList.map((item, key) => {\n        const isSelected = item === Value ? true : false;\n        const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : \"\";\n        return (\n          <div key={key} id={item} className={`input-list-item ${isSelected ? \"selected-list-item\" : \"\"}`} onClick={listItemClickHandler}>\n            {iconCheck}\n            {item}\n          </div>\n        );\n      });\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index];\n    if (item !== \"\")\n      return (\n        <animated.div className=\"input-select-item\" style={props} key={index}>\n          {item}\n          <button id={item} className=\"remove-item\"></button>\n        </animated.div>\n      );\n    return \"\";\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">{selectedPills}</div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword(\"\")} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default API;\n","import React, { useState } from 'react'\n\nimport { format, addDays, addMonths } from 'date-fns'\n// import DatePicker from \"react-datepicker\"\n// import \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DateInput(props) {\n\n  const dateformatConverted = props.format.replace(/ddd/g, 'eee')\n  const [dateValue, setDateValue] = useState(props.dateValue)\n  // console.log(`--->: DateInput -> props.dateValue received: `, props.dateValue)\n\n  function onClearHandler() {\n    setDateValue('')\n    props.onDateChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setDateValue(pValue)\n    props.onDateChange(pValue)\n  }\n\n  const dateString = dateValue === '' ? dateValue : format(addMonths(addDays(getDateObjFromDate(dateValue), props.modifiers.AddDay), props.modifiers.AddMonth), dateformatConverted)\n\n\n  return (\n    <div className={styles.dateContainer}>\n      <input\n        type=\"date\"\n        name=\"\"\n        id=\"\"\n        className={styles.datePicker}\n        defaultValue={dateValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {dateString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { getCurrentDate, addToDocumentExport } from \"../../app/utilities\";\nimport DateInput from \"../DateInput\";\n\nfunction Date(props) {\n  const json = props.controlJson;\n  let { Type, Title, Id, FormatDateTime = \"yyyy-MM-dd\", IsBlank = false, IsVisible = true, AddDay = 0, AddMonth = 0, DateValue } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const defaultDate = DateValue === \"\" || DateValue === undefined ? `${getCurrentDate().toDateString()}` : DateValue;\n\n  const [dateValue, setDateValue] = useState(!IsBlank ? defaultDate : \"\");\n\n  function onDateChangeHandler(pDate) {\n    setDateValue(pDate);\n\n    const valuesToExport = { Type, Id, DateValue: pDate };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (pDate !== \"\") newJson.DateValue = pDate;\n    else delete newJson.DateValue;\n    newJson.IsBlank = pDate !== \"\" ? false : true;\n    props.updateJson(newJson);\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <DateInput format={FormatDateTime} dateValue={dateValue} modifiers={{ AddDay, AddMonth }} onDateChange={value => onDateChangeHandler(value)} />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Date;\n","import React from 'react'\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './Figure.module.scss'\n\n\nexport default function Figure(props) {\n\n  function onClickHandler(pEvent) {\n    // console.log('---> ', pEvent)\n\n    props.onClose(pEvent)\n\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.source} alt=\"figure\" />\n      <div className={styles.btnClose} onClick={onClickHandler}><FontAwesomeIcon icon={faTimes} /></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport Figure from \"../Figure\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Image(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, IsVisible = true, Images = [] } = json;\n  // console.log(`--->: Image -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    // const newJson = JSON.parse(JSON.stringify(json))\n    // newJson.Value = pEvent.target.value\n    console.log(\"pEvent: \", pEvent);\n    // props.updateJson(newJson)\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log(\"---> \", pEvent);\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json]);\n\n  const images = Images.map((image, index) => (\n    <div className=\"control-row\" key={`image${index}`}>\n      <Figure source={`data:image/png; base64, ${image}`} onClose={onCloseHandler} />\n    </div>\n  ));\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <div className=\"control-row\">\n          <h3 htmlFor=\"title\">{Title}</h3>\n          <div>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n        </div>\n        {images}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Image;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport Figure from \"../Figure\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ImageSingle(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, IsVisible = true, Value = \"\" } = json;\n  // console.log(`--->: ImageSingle -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    let imageData;\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      imageData = e.target.result.replace(\"data:image/png;base64,\", \"\");\n\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = imageData;\n      props.updateJson(newJson);\n    };\n    fileReader.readAsDataURL(pEvent.target.files[0]);\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log(\"---> \", pEvent);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    delete newJson.Value;\n    props.updateJson(newJson);\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json]);\n\n  const figure =\n    Value !== \"\" ? (\n      <Figure\n        source={`data:image/png; base64, ${Value}`}\n        onClose={onCloseHandler}\n      />\n    ) : (\n      \"\"\n    );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <div className=\"control-row\">\n          <h3 htmlFor=\"title\">{Title}</h3>\n          <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n            <FontAwesomeIcon icon={faImage} />\n            Select an image\n          </label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            name=\"file\"\n            className=\"btn-file\"\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"control-row\">{figure}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ImageSingle;\n","import React, { useState } from 'react'\n\nfunction ButtonAddReportDate(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddReportDate<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddReportDate","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport QrReader from \"react-qr-reader\";\nimport { format } from \"date-fns\";\n\nfunction QRScanner(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Value = \"\", DateTimeValue } = json;\n\n  const [isScanning, setIsScanning] = useState(false);\n  const debugMode = useSelector(selectDebugMode);\n\n  const handleScan = (pData) => {\n    if (pData) {\n      updateValues(pData, format(new Date(), \"yyyy-MM-dd hh:mm a\"));\n      setIsScanning(false);\n    }\n  };\n\n  const handleError = (pErr) => {\n    console.error(pErr);\n  };\n\n  function deleteValue() {\n    updateValues(\"\", \"\");\n  }\n\n  function updateValues(pScanValue, pTimestamp) {\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = pScanValue;\n    newJson.DateTimeValue = pTimestamp;\n    // console.log('value: ', json)\n    props.updateJson(newJson);\n  }\n\n  const qrReader = isScanning ? (\n    <QrReader\n      delay={300}\n      onError={handleError}\n      onScan={handleScan}\n      style={{ width: \"100%\" }}\n    />\n  ) : (\n    \"\"\n  );\n\n  const btScan = !isScanning ? (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => setIsScanning(!isScanning)}\n    >\n      Scan a code\n    </button>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          {btScan}\n          {qrReader}\n        </div>\n        <div className=\"control-row\">\n          <div className=\"qrscan-record qrscan-record-3cols\">\n            <div>{Value}</div>\n            <div>{DateTimeValue}</div>\n            <button\n              className=\"btn btn-secondary btn-small\"\n              onClick={deleteValue}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default QRScanner;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport Modal from \"../Modal\";\n\nimport QrReader from \"react-qr-reader\";\nimport { format } from \"date-fns\";\n\nfunction QRScannerList(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Value = [], DateTimeValue } = json;\n  console.log(\"-------> QRLIST json: \", json);\n\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanOffIndex, setScanOffIndex] = useState(-1);\n\n  const debugMode = useSelector(selectDebugMode);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalOptions, setModalOptions] = useState({ message: \"\" });\n\n  const handleScan = (pData) => {\n    if (pData) {\n      const newList = Value;\n\n      if (scanOffIndex < 0) {\n        newList.push({\n          Id: newList.length,\n          Name: pData,\n          ScanOnDateTime: format(new Date(), \"yyyy-MM-dd hh:mm a\"),\n        });\n      } else {\n        if (pData === newList[scanOffIndex].Name) {\n          newList[scanOffIndex].ScanOffDateTime = format(\n            new Date(),\n            \"yyyy-MM-dd hh:mm a\"\n          );\n          // console.log('---> Add scan off, scanOffIndex on: ', newList[scanOffIndex])\n        } else {\n          setModalOptions({\n            message: \"Please rescan the same QR code to sign off\",\n            bgColor: \"#000000\",\n            callback: null,\n          });\n          setIsModalVisible(true);\n        }\n        setScanOffIndex(-1);\n      }\n\n      updateValues(newList);\n      setIsScanning(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log(`--->: QRScannerList -> scanOffIndex`, scanOffIndex);\n    if (scanOffIndex >= 0) setIsScanning(true);\n  }, [scanOffIndex]);\n\n  const handleError = (pErr) => {\n    console.error(pErr);\n  };\n\n  function deleteValue(pIndex) {\n    setModalOptions({\n      message: \"Are you sure you want to delete?\",\n      bgColor: \"#000000\",\n      callback: () => {\n        const newList = JSON.parse(Value).filter(\n          (value, index) => index !== pIndex\n        );\n        updateValues(newList);\n        setIsModalVisible(false);\n      },\n    });\n    setIsModalVisible(true);\n  }\n\n  function updateValues(pValue) {\n    // console.log('value: ', pValue)\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = JSON.stringify(pValue);\n    // newJson.DateTimeValue = pTimestamp\n    props.updateJson(newJson);\n  }\n\n  const qrReader = isScanning ? (\n    <QrReader\n      delay={300}\n      onError={handleError}\n      onScan={handleScan}\n      style={{ width: \"100%\" }}\n    />\n  ) : (\n    \"\"\n  );\n\n  const btScan = !isScanning ? (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => setIsScanning(!isScanning)}\n    >\n      Add to QR Scanner list\n    </button>\n  ) : (\n    \"\"\n  );\n\n  const scanList = Value.map((value, index) => {\n    return (\n      <div key={`scan${index}`} className=\"qrscan-record\">\n        <div>{value.Name}</div>\n        <div>\n          {value.ScanOnDateTime || (\n            <button\n              className=\"btn btn-primary btn-small\"\n              onClick={() => setScanOffIndex(index)}\n            >\n              Scan Off\n            </button>\n          )}\n        </div>\n        <div>\n          {value.ScanOffDateTime || (\n            <button\n              className=\"btn btn-primary btn-small\"\n              onClick={() => setScanOffIndex(index)}\n            >\n              Scan Off\n            </button>\n          )}\n        </div>\n        <button\n          className=\"btn btn-secondary btn-small\"\n          onClick={() => deleteValue(index)}\n        >\n          delete\n        </button>\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          {btScan}\n          {qrReader}\n        </div>\n        <div className=\"control-row\">\n          <div className=\"qrscan-record\">\n            <div>Name</div>\n            <div>Scan On</div>\n            <div>Scan Off</div>\n            <span></span>\n          </div>\n          {scanList}\n        </div>\n      </div>\n      <Modal\n        visibility={isModalVisible}\n        toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n        message={modalOptions.message}\n        css={{ backgroundColor: \"#000000\" }}\n        backdrop={\"rgba(0,0,0,0.3)\"}\n        callback={modalOptions.callback}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default QRScannerList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from \"html-to-image\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\n\nimport {\n  selectDebugMode,\n  selectCurrentUserName,\n} from \"../../features/config/configSlice\";\n\nfunction Signature(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Signature = \"\" } = json;\n  const signatureDisplay = useRef(null);\n\n  const debugMode = useSelector(selectDebugMode);\n  const username = useSelector(selectCurrentUserName);\n\n  const [signatureText, setSignatureText] = useState();\n  const [selectedFont, setSelectedFont] = useState(\"\");\n  const [isSigning, setIsSigning] = useState(false);\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" },\n  ];\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage();\n  }, [selectedFont]);\n\n  function generateImage() {\n    htmlToImage\n      .toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\");\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        newJson.Signature = rawData;\n        // console.log('value: ', json)\n        props.updateJson(newJson);\n      })\n      .catch(function (error) {\n        console.error(\"oops, something went wrong!\", error);\n      });\n  }\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value);\n  }\n  function dropdownChangeHandler(pEvent) {\n    setSelectedFont(pEvent.target.value);\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning);\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => (\n    <option key={index} value={value.name}>\n      {value.label}\n    </option>\n  ));\n\n  const editSignature = isSigning ? (\n    <div className=\"control-row control-inline\">\n      <input\n        type=\"text\"\n        name=\"signatureText\"\n        id=\"signatureText\"\n        placeholder=\"Your Name\"\n        onChange={textChangeHandler}\n      />\n      <select\n        name=\"fontDropdown\"\n        id=\"fontDropdown\"\n        onChange={dropdownChangeHandler}\n      >\n        <option value=\"\">Choose a style</option>\n        {fontDropdownOptions}\n      </select>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const btnSign = !isSigning ? (\n    <div className=\"control-row\">\n      <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>\n        Sign\n      </button>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const signature = (\n    <img\n      src={`data:image/png;base64,${Signature}`}\n      id={Id}\n      alt=\"\"\n      width=\"400px\"\n    />\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {editSignature}\n        <div className=\"control-row\">\n          {btnSign}\n          <div className=\"signature-display\">{signature}</div>\n        </div>\n      </div>\n      <div id=\"signaturePad\"></div>\n      <div className=\"signature-container\">\n        <div\n          ref={signatureDisplay}\n          className={`signature-preview ${selectedFont}`}\n        >\n          {signatureText}\n          <div className=\"signature-user\">{username}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Signature;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from \"html-to-image\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\nimport { format } from \"date-fns\";\n\nimport {\n  selectDebugMode,\n  selectCurrentUserName,\n} from \"../../features/config/configSlice\";\n\nfunction SignatureDateTime(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    IsVisible = true,\n    Signature = \"\",\n    DateTimeValue,\n  } = json;\n  const signatureDisplay = useRef(null);\n\n  const debugMode = useSelector(selectDebugMode);\n  const username = useSelector(selectCurrentUserName);\n\n  const [signatureText, setSignatureText] = useState();\n  const [selectedFont, setSelectedFont] = useState(\"\");\n  const [isSigning, setIsSigning] = useState(false);\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" },\n  ];\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage();\n  }, [selectedFont]);\n\n  function generateImage() {\n    htmlToImage\n      .toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\");\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        newJson.Signature = rawData;\n        newJson.DateTimeValue = format(new Date(), \"yyyy-MM-dd hh:mm:ss\");\n        props.updateJson(newJson);\n      })\n      .catch(function (error) {\n        console.error(\"oops, something went wrong!\", error);\n      });\n  }\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value);\n  }\n  function dropdownChangeHandler(pEvent) {\n    setSelectedFont(pEvent.target.value);\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning);\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => (\n    <option key={index} value={value.name}>\n      {value.label}\n    </option>\n  ));\n\n  const editSignature = isSigning ? (\n    <div className=\"control-row control-inline\">\n      <input\n        type=\"text\"\n        name=\"signatureText\"\n        id=\"signatureText\"\n        placeholder=\"Your Name\"\n        onChange={textChangeHandler}\n      />\n      <select\n        name=\"fontDropdown\"\n        id=\"fontDropdown\"\n        onChange={dropdownChangeHandler}\n      >\n        <option value=\"\">Choose a style</option>\n        {fontDropdownOptions}\n      </select>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const btnSign = !isSigning ? (\n    <div className=\"control-row\">\n      <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>\n        Sign\n      </button>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const signature = (\n    <img src={`data:image/png;base64,${Signature}`} alt=\"\" width=\"400px\" />\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {editSignature}\n        <div className=\"control-row\">\n          {btnSign}\n          <div className=\"signature-display\">\n            {signature}\n            <div className=\"signature-timestamp\">{DateTimeValue}</div>\n          </div>\n        </div>\n      </div>\n      <div id=\"signaturePad\"></div>\n      <div className=\"signature-container\">\n        <div\n          ref={signatureDisplay}\n          className={`signature-preview ${selectedFont}`}\n        >\n          {signatureText}\n          <div className=\"signature-user\">{username}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default SignatureDateTime;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from \"html-to-image\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\nimport { format } from \"date-fns\";\n\nimport {\n  selectDebugMode,\n  selectCurrentUserName,\n} from \"../../features/config/configSlice\";\n\nfunction SignatureDate(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Signature = \"\", DateValue } = json;\n  const signatureDisplay = useRef(null);\n\n  const debugMode = useSelector(selectDebugMode);\n  const username = useSelector(selectCurrentUserName);\n\n  const [signatureText, setSignatureText] = useState();\n  const [selectedFont, setSelectedFont] = useState(\"\");\n  const [isSigning, setIsSigning] = useState(false);\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" },\n  ];\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage();\n  }, [selectedFont]);\n\n  function generateImage() {\n    htmlToImage\n      .toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\");\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        newJson.Signature = rawData;\n        newJson.DateValue = format(new Date(), \"yyyy-MM-dd\");\n        props.updateJson(newJson);\n      })\n      .catch(function (error) {\n        console.error(\"--> Something went wrong!\", error);\n      });\n  }\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value);\n  }\n  function dropdownChangeHandler(pEvent) {\n    setSelectedFont(pEvent.target.value);\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning);\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => (\n    <option key={index} value={value.name}>\n      {value.label}\n    </option>\n  ));\n\n  const editSignature = isSigning ? (\n    <div className=\"control-row control-inline\">\n      <input\n        type=\"text\"\n        name=\"signatureText\"\n        id=\"signatureText\"\n        placeholder=\"Your Name\"\n        onChange={textChangeHandler}\n      />\n      <select\n        name=\"fontDropdown\"\n        id=\"fontDropdown\"\n        onChange={dropdownChangeHandler}\n      >\n        <option value=\"\">Choose a style</option>\n        {fontDropdownOptions}\n      </select>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const btnSign = !isSigning ? (\n    <div className=\"control-row\">\n      <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>\n        Sign\n      </button>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const signature = (\n    <img src={`data:image/png;base64,${Signature}`} alt=\"\" width=\"400px\" />\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {editSignature}\n        <div className=\"control-row\">\n          {btnSign}\n          <div className=\"signature-display\">\n            {signature}\n            <div className=\"signature-timestamp\">{DateValue}</div>\n          </div>\n        </div>\n      </div>\n      <div id=\"signaturePad\"></div>\n      <div className=\"signature-container\">\n        <div\n          ref={signatureDisplay}\n          className={`signature-preview ${selectedFont}`}\n        >\n          {signatureText}\n          <div className=\"signature-user\">{username}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default SignatureDate;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\nimport { setJson } from \"../../features/json/jsonSlice\";\n\nimport { getControlName, getControlPathById } from \"../../app/utilities\";\n\nimport {\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n} from \"../../components/controls/\";\n\nexport default function Matrix(props) {\n  const json = props.controlJson;\n  // console.log(`-> json`, json)\n\n  const { Type, Id, Title, Columns, Rows, Elements, IsVisible = true } = json;\n  // console.log(`--->: Matrix -> Elements`, Elements);\n\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n  // dispatch(setDocumentStatus('modified'))\n\n  const components = {\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n  };\n\n  let matrixLayout = [];\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j];\n      // console.log(`--->: Matrix -> element`, element)\n      const componentName = getControlName(element.Type);\n      // console.log(`--->: Matrix -> componentName`, componentName)\n\n      const Component = components[componentName];\n      const controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.Id}`} controlJson={element} updateJson={updateJsonHandler} />;\n\n      matrixLayout.push(\n        <div\n          key={`${i}-${j}`}\n          className=\"matrix-box\"\n          style={{\n            backgroundColor: i % 2 > 0 ? \"rgb(244, 244, 244)\" : \"\",\n            borderBottom: i % 2 > 0 ? \"1px solid #CCC\" : \"\",\n          }}\n        >\n          {controlComponent}\n        </div>\n      );\n    }\n  }\n\n  /**-------------------------------------------------**\n   * @desc - JSON                                  -----*\n   *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    props.updateJson(pJson);\n    // // console.log(`--->: Matrix updateJsonHandler -> pJson`, pJson);\n    // // console.log('updating... ', documentStatus)\n    // // if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n    // const controlPath = getControlPathById(pJson.Id);\n    // // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n    // let jsonToUpdate = JSON.parse(JSON.stringify(json));\n    // // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // // ONLY FIST SUBLEVEL\n    // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson;\n    // dispatch(setJson(jsonToUpdate));\n  }\n\n  // let layout = Elements.map((item, index) => <div key={index}>boxCol</div>)\n\n  return IsVisible ? (\n    <div className=\"control-container control-container-matrix\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: `repeat(${Columns}, 1fr)`,\n              gridTemplateRows: `repeat(${Rows}, 1fr)`,\n            }}\n          >\n            {matrixLayout}\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nfunction Checkbox(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, EntryTitle, Details, HasUnderLine, IsVisible = true, Value = \"\", CommentValue = \"\" } = json;\n  // console.log(`--->: Checkbox -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n\n    const checkboxValue = pEvent.target.checked === true ? \"Y\" : \"N\";\n    const valuesToExport = { Type, Id, Value: checkboxValue };\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = checkboxValue;\n    // console.log('value: ', newJson.Value, json)\n    props.updateJson(newJson);\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const commentText = pEvent.target.value;\n    const valuesToExport = { Id, CommentValue: commentText };\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.CommentValue = commentText;\n    props.updateJson(newJson);\n  }\n\n  useEffect(() => {\n    // console.log('Checkbox set data :', json)\n  }, [json]);\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  const comment = ShowComment ? (\n    <div className=\"control-checkbox-option\">\n      <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const details = Collapsible ? (\n    <div className=\"control-details-container\">\n      <div className=\"control-details-toggle\" onClick={onToggleClickHandler}>\n        <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} />\n      </div>\n      <div id=\"controlDetails\" className={`${collapsed ? \"hidden\" : \"\"} control-details-details`}>\n        {Details}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const entryTitle = EntryTitle ? (\n    <div className=\"control-checkbox-option\">\n      <label htmlFor=\"checkbox\">{EntryTitle}</label>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n\n      <div className={`control ${HasUnderLine ? \"control-underline\" : \"\"}`}>\n        <div className=\"control-checkbox\">\n          <input id={Id} type=\"checkbox\" defaultChecked={Value === \"Y\"} onChange={onChangeHandler} />\n          <label htmlFor={Id}>{Title}</label>\n        </div>\n        {details}\n        {entryTitle}\n        {comment}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Checkbox;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nfunction Boolean(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, HasUnderLine, EntryTitle, Details, IsVisible = true, Value = \"\", CommentValue = \"\" } = json;\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    const booleanValue = pEvent.target.value;\n    const valuesToExport = { Type, Id, Value: booleanValue };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = booleanValue;\n    props.updateJson(newJson);\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    const commentValue = pEvent.target.value;\n    const valuesToExport = { Type, Id, CommentValue: commentValue };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.CommentValue = pEvent.target.value;\n    props.updateJson(newJson);\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : \"\";\n\n  const details = Collapsible ? (\n    <div className=\"control-details-container\">\n      <div className=\"control-details-toggle\" onClick={onToggleClickHandler}>\n        <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} />\n      </div>\n      <div id=\"controlDetails\" className={`${collapsed ? \"hidden\" : \"\"} control-details-details`}>\n        {Details}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : \"\";\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n\n      <div className=\"control\">\n        {Title}\n        <div className=\"control-inline\">{details}</div>\n        <div className={`control-inline ${HasUnderLine ? \"control-underline\" : \"\"}`}>\n          <div className=\"control-checkbox\">\n            <label htmlFor=\"yes\">Yes</label>\n            <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === \"Y\"} onChange={onChangeHandler} />\n          </div>\n          <div className=\"control-checkbox\">\n            <label htmlFor=\"no\">No</label>\n            <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === \"N\"} onChange={onChangeHandler} />\n          </div>\n        </div>\n        <div className=\"control-inline\">{entryTitle}</div>\n        <div className=\"control-inline\">{comment}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Boolean;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nfunction Trilean(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, ShowComment, HideNa, IsVisible = true, Collapsible, IsCollapsed, EntryTitle, Details, Value = \"\", CommentValue = \"\" } = json;\n  // console.log(`--->: Trilean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    const trileanValue = pEvent.target.value;\n    const valuesToExport = { Type, Id, Value: trileanValue, CommentValue };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = trileanValue;\n    props.updateJson(newJson);\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.CommentValue = pEvent.target.value;\n    props.updateJson(newJson);\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  useEffect(() => {\n    // console.log('Trilean set data :', json)\n  }, [json]);\n\n  const comment = ShowComment ? (\n    <div className=\"control-row\">\n      <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const details = Collapsible ? (\n    <div className=\"control-row\">\n      <div className=\"control-details-container\">\n        <div className=\"control-details-toggle\" onClick={onToggleClickHandler}>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} />\n        </div>\n        <div id=\"controlDetails\" className={`${collapsed ? \"hidden\" : \"\"} control-details-details`}>\n          {Details}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n\n      <div className=\"control\">\n        {Title}\n        {details}\n        <div className=\"control-row\">\n          <div className=\"control-inline\">\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === \"Y\"} onChange={onChangeHandler} />\n            </div>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === \"N\"} onChange={onChangeHandler} />\n            </div>\n            <div className={`${HideNa ? \"hidden\" : \"\"} control-checkbox`}>\n              <label htmlFor=\"na\">N/A</label>\n              <input type=\"radio\" id=\"na\" name={Id} value=\"NA\" checked={Value === \"NA\"} onChange={onChangeHandler} />\n            </div>\n          </div>\n        </div>\n        {comment}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Trilean;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction TrileanLabel(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    IsVisible = true,\n    Buttons,\n    CommentValue,\n    HasUnderLine,\n    ShowComment,\n    HideNa,\n    Value,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    // console.log('---> radio click: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = pEvent.target.value;\n    props.updateJson(newJson);\n  }\n\n  const buttons =\n    Buttons !== undefined\n      ? Buttons.map((button, index) => {\n          const computedBackground =\n            Value === button.Button\n              ? button.BackgroundColorSelected\n              : button.BackgroundColor;\n          if (!(HideNa && button.Button === \"NA\"))\n            return (\n              <React.Fragment key={`${Id}${index}`}>\n                <input\n                  type=\"radio\"\n                  name={Id}\n                  id={`${Id}${button.Label}`}\n                  value={button.Button}\n                  className=\"radiocheck-hidden\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  htmlFor={`${Id}${button.Label}`}\n                  className=\"radiocheck-button\"\n                  style={{ backgroundColor: computedBackground }}\n                >\n                  {button.Label}\n                </label>\n              </React.Fragment>\n            );\n        })\n      : \"\";\n\n  const comment = ShowComment ? (\n    <div className=\"control-row\">{CommentValue}</div>\n  ) : (\n    \"\"\n  );\n  const underline = HasUnderLine ? <hr /> : \"\";\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {comment}\n        <div className=\"control-row control-inline\">\n          {buttons}\n          {underline}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default TrileanLabel;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectOpenListId,\n  setOpenListId,\n  selectDebugMode,\n} from \"../../features/config/configSlice\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleUp,\n  faAngleDown,\n  faTimes,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useSpring, animated, useTrail, config } from \"react-spring\";\n\nfunction ListSingle(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, Value = \"\", IsVisible = true } = json;\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n  const [filteredList, setFilteredList] = useState([]);\n  const [selectedValues, setSelectedValues] = useState(\n    Value.constructor === String ? [Value] : Value\n  );\n\n  const openListId = useSelector(selectOpenListId);\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 });\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: {\n      opacity: 0,\n      marginLeft: -12,\n      marginTop: -6,\n      transform: \"scaleX(0.6) scaleY(0.8)\",\n    },\n    to: {\n      opacity: 1,\n      marginLeft: 0,\n      marginTop: 0,\n      transform: \"scaleX(1) scaleY(1)\",\n    },\n    // config: { duration: 1250 },\n    config: config.stiff,\n  });\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id));\n  }, [collapsed, Id, dispatch]);\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true);\n  }, [openListId, Id]);\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(\n      Data.filter((item) => item.toLowerCase().includes(keyword.toLowerCase()))\n    );\n  }, [Data, keyword]);\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target;\n    if (\n      target.className === \"input-select\" ||\n      target.className === \"input-select-items\"\n    )\n      setCollapsed(!collapsed);\n    else if (target.className === \"remove-item\") {\n      const targetText = target.parentNode.innerText;\n      if (targetText !== \"\") {\n        updateJSON(\"\");\n        setSelectedValues(selectedValues.filter((item) => item !== targetText));\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    if (selectedValues[0] !== pEvent.target.id)\n      setSelectedValues([pEvent.target.id]);\n    else setSelectedValues([]);\n    updateJSON(pEvent.target.id);\n  }\n  function updateJSON(pValue) {\n    let valuesToExport = { Type, Id, Value: pValue };\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (newJson.Value === pValue) {\n      newJson.Value = \"\";\n      valuesToExport.Value = \"\";\n      addToDocumentExport(valuesToExport);\n    } else {\n      newJson.Value = pValue;\n      setCollapsed(true);\n      addToDocumentExport(valuesToExport);\n    }\n    props.updateJson(newJson);\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed\n    ? \"\"\n    : filteredList.map((item, key) => {\n        const isSelected =\n          selectedValues.findIndex((value) => item === value) > -1;\n        const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : \"\";\n        return (\n          <div\n            key={key}\n            id={item}\n            className={`input-list-item ${\n              isSelected ? \"selected-list-item\" : \"\"\n            }`}\n            onClick={listItemClickHandler}\n          >\n            {iconCheck}\n            {item}\n          </div>\n        );\n      });\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index];\n    if (item !== \"\")\n      return (\n        <animated.div className=\"input-select-item\" style={props} key={index}>\n          {item}\n          <button id={item} className=\"remove-item\"></button>\n        </animated.div>\n      );\n    return \"\";\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">{selectedPills}</div>\n          <FontAwesomeIcon\n            icon={collapsed ? faAngleDown : faAngleUp}\n            onClick={listIconClickHandler}\n          />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"input-list-search\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n            ></input>\n            <FontAwesomeIcon icon={faTimes} onClick={(e) => setKeyword(\"\")} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default ListSingle;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectOpenListId, setOpenListId, selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSpring, animated, useTrail, config } from \"react-spring\";\n\nfunction ListMultiple(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, SelectedValue = \"[]\", IsVisible = true } = json;\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n  const [filteredList, setFilteredList] = useState([]);\n  const [selectedValues, setSelectedValues] = useState(JSON.parse(SelectedValue));\n\n  const openListId = useSelector(selectOpenListId);\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 });\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: {\n      opacity: 0,\n      marginLeft: -12,\n      marginTop: -6,\n      transform: \"scaleX(0.6) scaleY(0.8)\",\n    },\n    to: {\n      opacity: 1,\n      marginLeft: 0,\n      marginTop: 0,\n      transform: \"scaleX(1) scaleY(1)\",\n    },\n    // config: { duration: 1250 },\n    config: { mass: 1, tension: 500, friction: 26 },\n  });\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id));\n  }, [collapsed, Id, dispatch]);\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true);\n  }, [openListId, Id]);\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())));\n  }, [Data, keyword]);\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target;\n    if (target.className === \"input-select\" || target.className === \"input-select-items\") setCollapsed(!collapsed);\n    else if (target.className === \"remove-item\") {\n      const targetText = target.parentNode.innerText;\n      if (targetText !== \"\") {\n        const newValues = selectedValues.filter(item => item !== targetText);\n        setSelectedValues(newValues);\n        updateJSON(newValues);\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id;\n\n    const newValues = selectedValues.findIndex(item => item === currentItem) < 0 ? [...selectedValues, currentItem] : selectedValues.filter(item => item !== currentItem);\n    setSelectedValues(newValues);\n    updateJSON(newValues);\n  }\n\n  function updateJSON(pValue) {\n    let valuesToExport = { Type, Id, SelectedValue: JSON.stringify(pValue) };\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (newJson.Value === pValue) {\n      newJson.SelectedValue = \"\";\n      valuesToExport.SelectedValue = \"\";\n      addToDocumentExport(valuesToExport);\n    } else {\n      newJson.SelectedValue = pValue;\n      setCollapsed(true);\n      addToDocumentExport(valuesToExport);\n    }\n    props.updateJson(newJson);\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed\n    ? \"\"\n    : filteredList.map((item, key) => {\n        const isSelected = selectedValues.findIndex(value => item === value) > -1;\n        const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : \"\";\n        return (\n          <div key={key} id={item} className={`input-list-item ${isSelected ? \"selected-list-item\" : \"\"}`} onClick={listItemClickHandler}>\n            {iconCheck}\n            {item}\n          </div>\n        );\n      });\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index];\n    if (item !== \"\")\n      return (\n        <animated.div className=\"input-select-item\" style={props} key={index}>\n          {item}\n          <button id={item} className=\"remove-item\"></button>\n        </animated.div>\n      );\n    return \"\";\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">{selectedPills}</div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword(\"\")} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ListMultiple;\n","import React, { useState } from 'react'\n\nimport { format, addHours } from 'date-fns'\n\nimport { getDateObjFromTime } from '../app/utilities'\n\nimport styles from './TimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function TimeInput(props) {\n\n  // console.log(`--->: TimeInput -> timeValue received: `, props.timeValue, getDateObjFromTime(props.timeValue))\n\n  const timeformatConverted = props.format.replace('tt', 'a')\n  const [timeValue, setTimeValue] = useState(props.timeValue)\n\n  function onClearHandler(pEvent) {\n    setTimeValue('')\n    props.onTimeChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setTimeValue(pValue)\n    props.onTimeChange(pValue)\n  }\n\n  const timeString = timeValue !== '' ? format(addHours(getDateObjFromTime(timeValue), props.modifiers.AddHour), timeformatConverted)\n    :\n    ''\n\n  return (\n    <div className={styles.timeContainer}>\n      <input\n        type=\"time\"\n        name=\"\"\n        id=\"\"\n        className={styles.timePicker}\n        value={timeValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {timeString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport TimeInput from \"../../components/TimeInput\";\n\nfunction Time(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    FormatDateTime = \"hh:mm tt\",\n    IsBlank = false,\n    IsVisible = true,\n    AddHour = 0,\n    TimeValue,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const defaultTime =\n    TimeValue === \"\" || TimeValue === undefined\n      ? `${\n          new Date().getHours() < 10\n            ? \"0\" + new Date().getHours()\n            : new Date().getHours()\n        }:${\n          new Date().getMinutes() < 10\n            ? \"0\" + new Date().getMinutes()\n            : new Date().getMinutes()\n        }`\n      : TimeValue;\n  // console.log(`TimeValue: ${TimeValue} , defaultTime: ${defaultTime}`)\n\n  const [timeValue, setTimeValue] = useState(!IsBlank ? defaultTime : \"\");\n\n  function onTimeChangeHandler(pTime) {\n    console.log(`--->: onTimeChangeHandler -> pTime`, pTime);\n    setTimeValue(pTime);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (pTime !== \"\") newJson.TimeValue = pTime;\n    else delete newJson.TimeValue;\n    newJson.IsBlank = pTime !== \"\" ? false : true;\n    props.updateJson(newJson);\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <TimeInput\n          format={FormatDateTime}\n          timeValue={timeValue}\n          modifiers={{ AddHour }}\n          onTimeChange={(value) => onTimeChangeHandler(value)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Time;\n","import React, { useState } from 'react'\n\nimport { format } from 'date-fns'\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateTimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function DateTimeInput(props) {\n\n  const dateFormatConverted = props.format.replace(/ddd/g, 'eee').replace('tt', 'a')\n  // console.log(`--->: DateTimeInput -> dateFormatConverted`, dateFormatConverted)\n\n  const dateTimeValue = props.dateTimeValue\n  // console.log(`--->: DateTimeInput -> dateTimeValue: `, dateTimeValue)\n\n  let dateValue = (dateTimeValue !== '') ? `${format(new Date(dateTimeValue), 'yyyy-MM-dd')}` : format(new Date(), 'yyyy-MM-dd')\n  let timeValue = (dateTimeValue !== '') ? `${new Date(dateTimeValue).toLocaleTimeString()}` : new Date().toLocaleTimeString()\n\n  function onDateChangeHandler(pEvent) {\n    // console.log('onDateChangeHandler pEvent.target.value: ', pEvent.target.value, timeValue)\n    dateValue = pEvent.target.value\n    props.onDateTimeChange(pEvent.target.value + ' ' + timeValue)\n  }\n  function onTimeChangeHandler(pEvent) {\n    // console.log('onTimeChangeHandler pEvent.target.value', dateValue, pEvent.target.value)\n    timeValue = pEvent.target.value\n    props.onDateTimeChange(dateValue + ' ' + pEvent.target.value)\n  }\n\n  function onClearHandler() {\n    dateValue = ''\n    timeValue = ''\n    props.onDateTimeChange('')\n  }\n\n  const dateTimeStringValue = (dateTimeValue !== '') ? format(new Date(dateTimeValue), dateFormatConverted) : ''\n\n  return (\n    <div className={styles.dateTimeContainer}>\n      <div>\n        <input type=\"date\" className={styles.datePicker} name=\"\" id=\"\" onChange={onDateChangeHandler} />\n        <input type=\"time\" className={styles.timePicker} name=\"\" id=\"\" onChange={onTimeChangeHandler} />\n      </div>\n      {dateTimeStringValue}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport DateTimeInput from \"../DateTimeInput\";\n\n// import { getCurrentDate, getDateObjFromDateString } from \"../../app/utilities\";\nimport { getCurrentDate, addToDocumentExport } from \"../../app/utilities\";\n\nfunction DateTime(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, FormatDateTime = \"yyyy-MM-dd hh:mm tt\", IsBlank = false, IsVisible = true, DateTimeValue } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const defaultDateTime = DateTimeValue === \"\" || DateTimeValue === undefined ? `${getCurrentDate().toDateString() + \" \" + getCurrentDate().toLocaleTimeString()}` : DateTimeValue;\n\n  const [dateTimeValue, setDateTimeValue] = useState(!IsBlank ? defaultDateTime : \"\");\n  // const dateTimeValue = (typeof DateTimeValue === 'string' && DateTimeValue !== '') ? getDateObjFromDateString(DateTimeValue) : DateTimeValue\n  // console.log(`--->: DateTime -> dateTimeValue: `, dateTimeValue)\n\n  function onDateTimeChangeHandler(pDateTime) {\n    setDateTimeValue(pDateTime);\n\n    const valuesToExport = { Type, Id, DateTimeValue: pDateTime };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (pDateTime !== \"\") newJson.DateTimeValue = pDateTime;\n    else delete newJson.DateTimeValue;\n    newJson.IsBlank = pDateTime !== \"\" ? false : true;\n    props.updateJson(newJson);\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <DateTimeInput format={FormatDateTime} dateTimeValue={dateTimeValue} onDateTimeChange={value => onDateTimeChangeHandler(value)} />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default DateTime;\n","import React from 'react'\n\nfunction TimeLabel() {\n  return (\n    <div>\n      TimeLabel\n    </div>\n  )\n}\n\nexport default TimeLabel\n","import React from 'react'\n\nfunction DateLabel() {\n  return (\n    <div>\n      DateLabel\n    </div>\n  )\n}\n\nexport default DateLabel\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonAddSignature(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickAddSignatureHandler() {\n    dispatch(setCurrentAction(\"add-signature\"));\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button\n          className=\"btn btn-secondary\"\n          onClick={clickAddSignatureHandler}\n        >\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonAddSignature;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Modal from \"../Modal\";\n\nimport { selectDebugMode, setCurrentAction, selectCurrentAction } from \"../../features/config/configSlice\";\n\nimport { format } from \"date-fns\";\n\nfunction RegisterSignatures(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Value = \"[]\" } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const currentAction = useSelector(selectCurrentAction);\n  const dispatch = useDispatch();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalOptions, setModalOptions] = useState({ message: \"\" });\n\n  useEffect(() => {\n    // console.log(\"---> currentAction: \", currentAction, Value);\n    if (currentAction === \"add-signature\") {\n      // CHECK IF SIGNATURE IS EMPTY\n      const registerValues = JSON.parse(Value);\n      registerValues.push({\n        Id: registerValues.length + 1,\n        Name: document.getElementById(\"SignatureSignOnOffName\").value,\n        SignOnDateTime: format(new Date(), \"yyyy-MM-dd hh:mm:ss\"),\n        Signature: document.getElementById(\"SignatureSignOnOffSignature\").src.replace(\"data:image/png;base64,\", \"\"),\n      });\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = JSON.stringify(registerValues);\n      props.updateJson(newJson);\n\n      // Need to be cleared in the JSON\n      // document.getElementById('SignatureSignOnOffName').value = ''\n      document.getElementById(\"signatureText\").value = \"\";\n      document.getElementById(\"SignatureSignOnOffSignature\").src = \"\";\n      dispatch(setCurrentAction(\"\"));\n    }\n  }, [currentAction]);\n\n  function signOffClickHandler(pId) {\n    setModalOptions({\n      message: \"Are you sure you want to sign off?\",\n      bgColor: \"#000000\",\n      callback: () => {\n        const registerValues = JSON.parse(Value);\n        const signatureIndex = registerValues.findIndex(element => element.Id === pId);\n\n        registerValues[signatureIndex].SignOffDateTime = format(new Date(), \"yyyy-MM-dd hh:mm:ss\");\n        // console.log('---> SIGNING OFF: ', registerValues)\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        // console.log(`--->: signOffClickHandler -> newJson`, newJson)\n        newJson.Value = JSON.stringify(registerValues);\n        props.updateJson(newJson);\n\n        setIsModalVisible(false);\n      },\n    });\n    setIsModalVisible(true);\n  }\n\n  const registerList = JSON.parse(Value)\n    .reverse()\n    .map((item, index) => {\n      return (\n        <div key={index} className=\"register-signature-row\">\n          <img src={`data:image/png;base64,${item.Signature}`} alt=\"\" width=\"250px\" />\n          <div>\n            <p>{item.Name}</p>\n            <p>Sign On: {item.SignOnDateTime}</p>\n            <p>\n              Sign Off:{\" \"}\n              {item.SignOffDateTime || (\n                <button className=\"btn btn-primary btn-small\" onClick={() => signOffClickHandler(item.Id)}>\n                  Sign\n                </button>\n              )}\n            </p>\n          </div>\n        </div>\n      );\n    });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">{registerList}</div>\n      <Modal\n        visibility={isModalVisible}\n        toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n        message={modalOptions.message}\n        css={{ backgroundColor: \"#000000\" }}\n        backdrop={\"rgba(0,0,0,0.3)\"}\n        callback={modalOptions.callback}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default RegisterSignatures;\n","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './SelectSearchable.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction useVisible(initialIsVisible) {\n  const [isVisible, setIsVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  }, [])\n  return { ref, isVisible, setIsVisible }\n}\n\n\nexport default function SelectSearchable(props) {\n\n  const [keyword, setKeyword] = useState('')\n  const input = useRef(null)\n\n  const items = props.items\n  const allowMultiple = props.allowMultiple\n  const width = props.width\n\n\n  const filteredList = keyword.length > 0 ? items.filter(item => String(item.label).toLowerCase().includes(keyword.toLowerCase())) : items\n\n  const { ref, isVisible, setIsVisible } = useVisible(false, input)\n\n  function onClickItemHandler(pEvent, pItem) {\n    pEvent.stopPropagation()\n    // console.log(`--->: onClickItemHandler -> pEvent.target.className: `, pEvent.currentTarget.className)\n    // console.log('---> delete here: ', pEvent.currentTarget.className.includes('delete'))\n\n    if (pEvent.currentTarget.className.includes('delete')) {\n      props.onSelectItem(props.selectedItems.filter(item => item.Id !== pItem.Id))\n      return\n    }\n\n    if (allowMultiple) {\n      const clickedItemIndex = props.selectedItems.findIndex(item => item === pItem)\n\n      if (clickedItemIndex > -1) {\n        props.onSelectItem(props.selectedItems.filter(item => item !== pItem))\n      }\n      else props.onSelectItem([...props.selectedItems, pItem])\n    }\n    else {\n      props.onSelectItem([pItem])\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    if (input.current) input.current.focus()\n  }, [isVisible])\n\n  const cssWidth = width === \"s\" ? styles.ListSmall : width === \"m\" ? styles.ListMedium : styles.ListLarge\n\n  return (\n    <div className={styles.selectSearchable_Container}>\n      <div className={styles.selectSearchable_Header} onClick={e => setIsVisible(!isVisible)}>\n        <div className={styles.selectSearchable_SelectedContainer}>\n          {props.selectedItems.map((item, index) => <div key={index} className={styles.selectSearchable_SelectedItem}>\n            {item.label}\n            <span className={styles.selectedItem_delete} onClick={(e) => onClickItemHandler(e, item)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>)}\n        </div>\n        <div className={styles.selectSearchable_Trigger}>\n          <FontAwesomeIcon icon={isVisible ? faAngleDown : faAngleUp} />\n        </div>\n      </div>\n      {isVisible && <div style={{ position: 'absolute' }} className={`${styles.selectSearchable_List} ${cssWidth}`} ref={ref}>\n        <div className={styles.selectSearchable_SearchContainer}>\n          <input type=\"text\" value={keyword} onChange={e => setKeyword(e.target.value)} ref={input}></input>\n          <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n        </div>\n        <div className={styles.selectSearchable_ItemsContainer}>\n          {filteredList.map((item, index) => <span key={index} className={`${styles.selectItem} ${props.selectedItems.findIndex(selectedItem => item.label === selectedItem.label) > -1 ? styles.selectSearchable_SelectedItem_Selected : ''}`} onClick={(e) => onClickItemHandler(e, item)}>{item.label}</span>)}\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport SelectSearchable from \"./../SelectSearchable\";\n\nimport {\n  selectDebugMode,\n  selectCurrentToken,\n  setCurrentContact,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction SearchableListEntryDialogSMS(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  const [contactList, setContactList] = useState([]);\n  const [contactDropdownList, setContactDropdownList] = useState([]);\n  const [selectedContact, setSelectedContact] = useState([]);\n\n  const environment = \"https://api-uat.extrack.com/V1.0/\";\n  const projectID = 1810;\n\n  const apiUrl = `${environment}Project/${projectID}/Directory/Contacts`;\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n  const token = useSelector(selectCurrentToken);\n\n  const apiHeaders = new Headers();\n  apiHeaders.append(\"Authorization\", `Bearer ${token}`);\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: apiHeaders,\n    redirect: \"follow\",\n  };\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setContactList(result);\n        setContactDropdownList(\n          result.map((item) => {\n            return {\n              Id: item.Id,\n              label: `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}`,\n            };\n          })\n        );\n      });\n  }, []);\n\n  const addContact = (pItem) => {\n    const contactIndex = contactList.findIndex(\n      (contact) => contact.Id === pItem[0].Id\n    );\n    const contactDetails = contactList[contactIndex];\n\n    dispatch(\n      setCurrentContact({\n        name: `${contactDetails.Contact.NameFirst} ${contactDetails.Contact.NameLast}`,\n        phoneNumber: contactDetails.Contact.Number,\n        companyName: contactDetails.Company.Name,\n      })\n    );\n    dispatch(setCurrentAction(\"add-contact\"));\n    setSelectedContact(pItem);\n  };\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n\n        <SelectSearchable\n          items={contactDropdownList}\n          selectedItems={[]}\n          allowMultiple={false}\n          onSelectItem={(item) => addContact(item)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableListEntryDialogSMS;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonAddSMS(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickAddContactHandler(pEvent) {\n    dispatch(setCurrentAction(\"add-contact\"));\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickAddContactHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonAddSMS;\n","import React, { useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectDebugMode, setDocumentStatus, setCurrentContact, selectCurrentContact, setCurrentAction, selectCurrentAction } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedo, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SearchableSMSListView(props) {\n  const json = props.controlJson;\n  const { Type, Title, Title2, Id, Api, Value = \"[]\", IsVisible = true } = json;\n  // console.log(`--->: Text -> json:`, json)\n\n  const currentAction = useSelector(selectCurrentAction);\n  const currentContact = useSelector(selectCurrentContact);\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  useEffect(() => {\n    if (currentAction === \"add-contact\") {\n      console.log(\"---> currentAction: \", currentAction);\n      console.log(\"---> currentContact: \", currentContact);\n\n      const registerValues = JSON.parse(Value);\n      registerValues.push({\n        Name: currentContact.name,\n        Number: currentContact.phoneNumber,\n        CompanyName: currentContact.companyName,\n      });\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = JSON.stringify(registerValues);\n      props.updateJson(newJson);\n\n      dispatch(setCurrentAction(\"reset-currentContact\"));\n      dispatch(setCurrentContact(\"\"));\n    }\n  }, [currentAction]);\n\n  function deleteContact(pContactIndex) {\n    const registerValues = JSON.parse(Value).filter((item, index) => index !== pContactIndex);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = JSON.stringify(registerValues);\n    props.updateJson(newJson);\n  }\n\n  const contactList = JSON.parse(Value).map((contact, index) => {\n    return (\n      <div key={index} className=\"listview-record\">\n        <div>{contact.Name}</div>\n        <div>{contact.CompanyName}</div>\n        <div>{contact.Number}</div>\n        <button className=\"btn btn-secondary btn-small btn-icon\" onClick={() => deleteContact(index)}>\n          <FontAwesomeIcon icon={faTrash} />\n          delete\n        </button>\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n\n      <div className=\"control\">\n        {/* <h3>{Title}</h3> */}\n        <div className=\"control-row\">{contactList}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableSMSListView;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport SelectSearchable from \"./../SelectSearchable\";\n\nimport {\n  selectDebugMode,\n  selectCurrentToken,\n  setCurrentContact,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction SearchableListEntryDialogEmail(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  const [contactList, setContactList] = useState([]);\n  const [contactDropdownList, setContactDropdownList] = useState([]);\n  const [selectedContact, setSelectedContact] = useState([]);\n\n  const environment = \"https://api-uat.extrack.com/V1.0/\";\n  const projectID = 1810;\n\n  const apiUrl = `${environment}Project/${projectID}/Directory/Contacts`;\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n  const token = useSelector(selectCurrentToken);\n\n  const apiHeaders = new Headers();\n  apiHeaders.append(\"Authorization\", `Bearer ${token}`);\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: apiHeaders,\n    redirect: \"follow\",\n  };\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setContactList(result);\n        setContactDropdownList(\n          result.map((item) => {\n            return {\n              Id: item.Id,\n              label: `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${\n                item.Contact.Email || \"\"\n              } | ${item.Company.Name}`,\n            };\n          })\n        );\n      });\n  }, []);\n\n  const addContact = (pItem) => {\n    const contactIndex = contactList.findIndex(\n      (contact) => contact.Id === pItem[0].Id\n    );\n    const contactDetails = contactList[contactIndex];\n\n    dispatch(\n      setCurrentContact({\n        name: `${contactDetails.Contact.NameFirst} ${contactDetails.Contact.NameLast}`,\n        email: contactDetails.Contact.Email,\n        companyName: contactDetails.Company.Name,\n      })\n    );\n    dispatch(setCurrentAction(\"add-contact\"));\n    setSelectedContact(pItem);\n  };\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n\n        <SelectSearchable\n          items={contactDropdownList}\n          selectedItems={[]}\n          allowMultiple={false}\n          onSelectItem={(item) => addContact(item)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableListEntryDialogEmail;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonAddEmail(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickAddContactHandler(pEvent) {\n    dispatch(setCurrentAction(\"add-contact\"));\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickAddContactHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonAddEmail;\n","import React, { useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectDebugMode, setDocumentStatus, setCurrentContact, selectCurrentContact, setCurrentAction, selectCurrentAction } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedo, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SearchableEmailListView(props) {\n  const json = props.controlJson;\n  const { Type, Title, Title2, Id, Api, Value = \"[]\", IsVisible = true } = json;\n  // console.log(`--->: SearchableEmailListView -> json: `, json);\n\n  const currentAction = useSelector(selectCurrentAction);\n  const currentContact = useSelector(selectCurrentContact);\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  useEffect(() => {\n    if (currentAction === \"add-contact\") {\n      console.log(\"---> currentAction: \", currentAction);\n      console.log(\"---> currentContact: \", currentContact);\n\n      const registerValues = JSON.parse(Value);\n      registerValues.push({\n        Name: currentContact.name,\n        Email: currentContact.email,\n        CompanyName: currentContact.companyName,\n      });\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = JSON.stringify(registerValues);\n      props.updateJson(newJson);\n\n      dispatch(setCurrentAction(\"reset-currentContact\"));\n      dispatch(setCurrentContact(\"\"));\n    }\n  }, [currentAction]);\n\n  function deleteContact(pContactIndex) {\n    const registerValues = JSON.parse(Value).filter((item, index) => index !== pContactIndex);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = JSON.stringify(registerValues);\n    props.updateJson(newJson);\n  }\n\n  const contactList = JSON.parse(Value).map((contact, index) => {\n    return (\n      <div key={index} className=\"listview-record\">\n        <div>{contact.Name}</div>\n        <div>{contact.CompanyName}</div>\n        <div>{contact.Email}</div>\n        <button className=\"btn btn-secondary btn-small btn-icon\" onClick={() => deleteContact(index)}>\n          <FontAwesomeIcon icon={faTrash} />\n          delete\n        </button>\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n\n      <div className=\"control\">\n        {/* <h3>{Title}</h3> */}\n        <div className=\"control-row\">{contactList}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableEmailListView;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nexport default function MatrixButton(props) {\n  const json = props.controlJson;\n  // console.log(`-> json`, json)\n\n  const {\n    Id,\n    Title,\n    Type,\n    IsVisible = true,\n    Selection,\n    XAxisName,\n    YAxisName,\n    Legend,\n    Columns,\n    Rows,\n    Elements,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const showLegend = Legend.ShowLegend;\n\n  const [selectedButton, setSelectedButton] = useState([]);\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  function buttonClickHandler(pButtonId) {\n    const buttonPath = pButtonId.split(\"-\");\n    // console.log('---> ', buttonPath)\n    // console.log('---> Selection is: ', Selection)\n\n    const newJson = JSON.parse(JSON.stringify(json));\n\n    if (Selection === \"single\") {\n      for (let i = 0; i < newJson.Elements.length; i++) {\n        for (let j = 0; j < newJson.Elements[i].Elements.length; j++) {\n          if (newJson.Elements[i].Elements[j].Value)\n            newJson.Elements[i].Elements[j].Value = false;\n        }\n      }\n    }\n    const buttonValue =\n      Elements[buttonPath[0]].Elements[buttonPath[1]].Value !== undefined\n        ? Elements[buttonPath[0]].Elements[buttonPath[1]].Value\n        : false;\n\n    newJson.Elements[buttonPath[0]].Elements[\n      buttonPath[1]\n    ].Value = !buttonValue;\n    props.updateJson(newJson);\n  }\n\n  let matrixLayout = [];\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j];\n      const id = `${i}-${j}`;\n      const title = `${Legend.LegendValuesY.Name}: ${Legend.LegendValuesY.Values[i]}\\n${Legend.LegendValuesX.Name}: ${Legend.LegendValuesX.Values[j]}`;\n\n      matrixLayout.push(\n        <div\n          key={id}\n          id={id}\n          title={title}\n          className=\"matrix-box matrix-button\"\n          style={{\n            backgroundColor: element.Value\n              ? element.BackgroundColorSelected\n              : element.BackgroundColor,\n          }}\n          onClick={() => buttonClickHandler(id)}\n        >\n          {element.Title}\n        </div>\n      );\n    }\n  }\n\n  const legendValuesX = Legend.LegendValuesX.Values.map((item, index) => (\n    <li key={index}>{item}</li>\n  ));\n  const legendValuesY = Legend.LegendValuesY.Values.map((item, index) => (\n    <li key={index}>{item}</li>\n  ));\n\n  const legend = showLegend ? (\n    <div className=\"matrix-legend\">\n      <div>\n        <h5>{Legend.LegendValuesY.Name}:</h5>\n        {legendValuesY}\n      </div>\n      <div>\n        <h5>{Legend.LegendValuesX.Name}:</h5>\n        {legendValuesX}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          <div className=\"matrix-container\">\n            <h4 className=\"matrix-yaxis\">{YAxisName}</h4>\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: `repeat(${Columns}, 1fr)`,\n                gridTemplateRows: `repeat(${Rows}, 1fr)`,\n              }}\n            >\n              {matrixLayout}\n            </div>\n            <h4 className=\"matrix-xaxis\">{XAxisName}</h4>\n          </div>\n          <div className=\"matrix-footer\">{legend}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode, selectCurrentTemplate, selectCurrentDocument } from \"../../features/config/configSlice\";\n\nfunction DocumentSummaryGrid(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(\"DocumentSummaryGrid -> json\", json);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  // const currentProjectId = useSelector(selectCurrentProjectId);\n  const currentTemplate = useSelector(selectCurrentTemplate);\n  const currentDocument = useSelector(selectCurrentDocument);\n\n  // const [documentDetail, setDocumentDetail] = useState(\n  //   JSON.stringify(currentDocumentDetails)\n  // );\n\n  // const apiURL = \"https://api-uat.extrack.com/\";\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n\n  // const detailsHeaders = new Headers();\n  // detailsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`);\n\n  // const requestOptions = {\n  //   method: \"POST\",\n  //   headers: detailsHeaders,\n  // };\n\n  // useEffect(() => {\n  //   fetch(\n  //     `${apiURL}V1.0/Project/${currentProjectId}/Document/${currentDocumentDetails.Id}/Template/${currentTemplateId}/Create`,\n  //     requestOptions\n  //   )\n  //     .then((response) => response.json())\n  //     .then((result) => {\n  //       setDocumentDetail(result.Document);\n  //     })\n  //     .catch((error) => console.log(\"error\", error));\n  // }, []);\n\n  const { DocumentNumber, Id: docId, DocumentType, Title: docTitle, Title1: docTitle1, Title2: docTitle2, OpenClosedStatus, UserRevisionNumber, UserRevisionDate, CreatedByContact, CreatedByCompany } =\n    currentTemplate || currentDocument;\n\n  const documentDetails = (\n    <div className=\"summary-details\">\n      <div className=\"summary-details-row\">\n        <h5>Document No</h5>\n        <span>{DocumentNumber || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Document Id</h5>\n        <span>{docId || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Document Type</h5>\n        <span>{DocumentType ? DocumentType.Title : \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Title</h5>\n        <span>{docTitle || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Title1</h5>\n        <span>{docTitle1 || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Title2</h5>\n        <span>{docTitle2 || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Document Status Open/Closed</h5>\n        <span>{OpenClosedStatus || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Valid From</h5>\n        <span></span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Valid To</h5>\n        <span></span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Revision</h5>\n        <span>{UserRevisionNumber || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Revision Date</h5>\n        <span>{UserRevisionDate || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Created By Contact</h5>\n        <span>{CreatedByContact || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Created By Company</h5>\n        <span>{CreatedByCompany || \"\"}</span>\n      </div>\n    </div>\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n      <div className=\"control\">\n        <div className=\"control-row\">\n          <h3 htmlFor=\"title\">{Title}</h3>\n          {documentDetails}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default DocumentSummaryGrid;\n","import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectDebugMode, setDocumentStatus, selectDocumentStatus } from \"../../features/config/configSlice\";\n\nfunction ButtonSubmitRegister(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\\\n\n  const documentStatus = useSelector(selectDocumentStatus);\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  function onSubmitToRegisterHandler(pEvent) {\n    // console.log('onSubmitToRegisterHandler: ', pEvent )\n    dispatch(setDocumentStatus(\"tosend\"));\n  }\n\n  const button =\n    documentStatus !== \"sent\" ? (\n      <button className=\"btn btn-secondary\" onClick={onSubmitToRegisterHandler}>\n        {Title}\n      </button>\n    ) : (\n      \"Sent\"\n    );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n      </div>\n\n      <div className=\"control\">{button}</div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonSubmitRegister;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction ButtonCloseout(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">{Title}</button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonCloseout;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction ButtonViewDocument(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">{Title}</button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonViewDocument;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonSendEmail(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickSendEmailHandler(pEvent) {\n    console.log(\"clickSendEmailHandler\");\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickSendEmailHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonSendEmail;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonSendSMS(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickSendSmsHandler(pEvent) {\n    console.log(\"clickSendSmsHandler\");\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickSendSmsHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonSendSMS;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectDocumentStatus, selectDebugMode, selectCurrentSectionIndex } from \"../features/config/configSlice\";\nimport { selectJson, setJson } from \"../features/json/jsonSlice\";\n\nimport { getControlName, getControlPathById } from \"../app/utilities\";\n\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument,\n  ButtonSendEmail,\n  ButtonSendSMS,\n} from \"./controls\";\n\nexport default function Board(props) {\n  // console.log(\"-------> render Board \", props);\n\n  const json = useSelector(selectJson);\n  const currentSectionIndex = useSelector(selectCurrentSectionIndex);\n  const documentStatus = useSelector(selectDocumentStatus);\n  const isDebugging = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  const currentSection = json.Sections !== undefined ? json.Sections[currentSectionIndex] : [];\n  const currentElements = currentSection.Elements;\n\n  const [controls, setControls] = useState([]);\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument,\n    ButtonSendEmail,\n    ButtonSendSMS,\n  };\n\n  /* Watch for section changes * ---------------------------------------------------------------------------- */\n  useEffect(() => {\n    // if (Object.keys(json).length > 0) console.log(\"----> json section updated: \", currentElements);\n\n    if (currentElements !== undefined) {\n      const controlsFromElements = currentElements.map((element, index) => {\n        const componentName = getControlName(element.Type);\n        // console.log(`--->componentName: `, componentName);\n        let controlComponent;\n        if (components[componentName] !== undefined) {\n          const Component = components[componentName];\n          controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.Id || element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />;\n          //   controlComponent = <Component key={element.Id} controlJson={element} updateJson={updateJsonHandler} />;\n        }\n        return controlComponent;\n      });\n      setControls(controlsFromElements);\n    } else setControls(\"\");\n  }, [currentElements]);\n  /* --------------------------------------------------------------------------- * Watch for section changes */\n\n  /* Update the JSON * ------------------------------------------------------------------------------------- */\n  function updateJsonHandler(pJson) {\n    // console.log(\"🚀 -> updateJsonHandler -> updateJsonHandler: \", updateJsonHandler);\n    // if (documentStatus === \"loaded\") dispatch(setDocumentStatus(\"modified\"));\n    const filteredJson = { ...pJson };\n    if (filteredJson.ElementId) delete filteredJson.ElementId;\n\n    const controlPath = getControlPathById(json, pJson.Id)[0];\n    // console.log(\"🚀 -> updateJsonHandler -> controlPath: \", controlPath);\n\n    // LOG THE CURRENT UPDATED CONTROL\n    // console.log(\"%c \" + pJson.Id + \" \", \"background:green;color:white;\", JSON.stringify(controlPath), filteredJson);\n\n    // RELOCATE IN UTILITIES\n    let jsonToUpdate = JSON.parse(JSON.stringify(json));\n    switch (controlPath.length) {\n      case 2:\n        jsonToUpdate.Sections[controlPath[0]].Elements[controlPath[1]] = filteredJson;\n        break;\n      case 3:\n        jsonToUpdate.Sections[controlPath[0]].Elements[controlPath[1]].Elements[controlPath[2]] = filteredJson;\n        break;\n      case 4:\n        jsonToUpdate.Sections[controlPath[0]].Elements[controlPath[1]].Elements[controlPath[2]].Elements[controlPath[3]] = filteredJson;\n        break;\n      default:\n        console.log(\"----> Control path invalid!\");\n        break;\n    }\n    // // ONLY FIST SUBLEVEL\n    // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson;\n    dispatch(setJson(jsonToUpdate));\n  }\n  /* ------------------------------------------------------------------------------------ * Update the JSON */\n\n  //   const selectedTemplate = useSelector(selectCurrentTemplate);\n  //   console.log(\"🚀 -> Board -> selectedTemplate: \", selectedTemplate);\n\n  const boardControls =\n    documentStatus === \"loading\" ? (\n      <div className=\"skeleton\">\n        {Array(14)\n          .fill(\"\")\n          .map((item, index) => (\n            <div key={index} className={`${index % 2 === 1 ? \"skeleton-bloc-offset\" : \"\"} skeleton-bloc`}></div>\n          ))}\n      </div>\n    ) : (\n      controls\n    );\n\n  return (\n    <div>\n      <div className={`${!isDebugging ? \"board\" : \"board board-debug\"}`}>{boardControls}</div>\n      {/* {JSON.stringify(currentElements)} */}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectCurrentSectionIndex, callSection, prevSection, nextSection } from \"../features/config/configSlice\";\nimport { selectJson } from \"../features/json/jsonSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStepBackward, faStepForward, faFastBackward, faFastForward } from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./Pagination.module.scss\";\n\nfunction Pagination(props) {\n  // console.log(\"-------> render the Pagination\", props);\n\n  const dispatch = useDispatch();\n  const json = useSelector(selectJson);\n\n  const sectionsAmount = json.Sections !== undefined ? json.Sections.length : 0;\n  const currentSectionIndex = useSelector(selectCurrentSectionIndex);\n\n  const tabLength = json.Sections ? json.Sections.length : 0;\n  const tabTitle = json.Sections ? json.Sections[currentSectionIndex].Title : \"\";\n\n  function onFirstSectionHandler(e) {\n    dispatch(callSection(0));\n  }\n  function onPrevSectionHandler(e) {\n    if (currentSectionIndex > 0) dispatch(prevSection());\n  }\n  function onNextSectionHandler(e) {\n    if (currentSectionIndex < tabLength - 1) dispatch(nextSection());\n  }\n  function onLastSectionHandler(e) {\n    dispatch(callSection(tabLength - 1));\n  }\n\n  return (\n    <nav>\n      <div className={styles.row}>\n        <button className=\"btn btn-primary\" disabled={tabLength === 0 || currentSectionIndex === 0} onClick={e => onFirstSectionHandler(e)}>\n          <FontAwesomeIcon icon={faFastBackward} />\n        </button>\n        <button className=\"btn btn-primary\" disabled={tabLength === 0 || currentSectionIndex === 0} onClick={e => onPrevSectionHandler(e)}>\n          <FontAwesomeIcon icon={faStepBackward} />\n        </button>\n        <div className={styles.title}>\n          <h2>{tabTitle}</h2>\n        </div>\n        <button className=\"btn btn-primary\" disabled={tabLength === 0 || currentSectionIndex === tabLength - 1} onClick={e => onNextSectionHandler(e)}>\n          <FontAwesomeIcon icon={faStepForward} />\n        </button>\n        <button className=\"btn btn-primary\" disabled={tabLength === 0 || currentSectionIndex === tabLength - 1} onClick={e => onLastSectionHandler(e)}>\n          <FontAwesomeIcon icon={faFastForward} />\n        </button>\n      </div>\n      <div>\n        <div className=\"currentSectionIndicator\">\n          {currentSectionIndex + 1} of {sectionsAmount}\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Pagination;\n","import React from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectDebugMode, setDebugMode, selectCurrentTemplate, selectCurrentDocument } from \"../features/config/configSlice\";\n\nexport default function Header(props) {\n  // console.log(\"-------> render Header \", props);\n\n  const dispatch = useDispatch();\n\n  const isDebugging = useSelector(selectDebugMode);\n  const currentTemplate = useSelector(selectCurrentTemplate);\n  const currentDocument = useSelector(selectCurrentDocument);\n\n  return (\n    <header className=\"App-header\">\n      <h1 title=\"v20.12.10\">DYNAMIC FORM</h1>\n      <h2>{currentDocument.Title || currentTemplate.Title1}</h2>\n      <div className=\"debug-toggle\">\n        <input type=\"checkbox\" name=\"debug\" checked={isDebugging} id=\"debug\" onChange={() => dispatch(setDebugMode(!isDebugging))} />\n        <label htmlFor=\"debug\">Debug</label>\n      </div>\n    </header>\n  );\n}\n","import { useSelector } from \"react-redux\";\n\nimport FormInterface from \"./components/FormInterface\";\nimport Board from \"./components/Board\";\nimport Pagination from \"./components/Pagination\";\n\nimport \"./App.scss\";\nimport Header from \"./components/Header\";\n\nfunction App(props) {\n  // console.log(\"-------> render App \", props);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <FormInterface />\n      <Pagination />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./app/store\";\n\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}