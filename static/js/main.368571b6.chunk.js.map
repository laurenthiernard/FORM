{"version":3,"sources":["components/Modal.module.scss","components/DateTimeInput.module.scss","components/DateInput.module.scss","components/TimeInput.module.scss","components/Figure.module.scss","components/Tabulation.module.scss","features/json/JsonReader.module.scss","features/json/jsonSlice.js","features/tabulation/tabulationSlice.js","features/display/displaySlice.js","components/JsonOptions.js","components/controls/DocumentTableOfContents.js","components/controls/ListMulticontrol.js","components/controls/Label.js","components/Modal.js","components/controls/Text.js","app/utilities.js","components/controls/Repeatable.js","components/controls/ButtonSubmitPurchase.js","components/controls/ButtonAddDocketNumber.js","components/controls/API.js","components/DateInput.js","components/controls/Date.js","components/Figure.js","components/controls/Image.js","components/controls/ImageSingle.js","components/controls/ButtonAddReportDate.js","components/controls/QRScanner.js","components/controls/QRScannerList.js","components/controls/Signature.js","components/controls/SignatureDateTime.js","components/controls/SignatureDate.js","components/controls/Matrix.js","components/controls/Checkbox.js","components/controls/Boolean.js","components/controls/Trilean.js","components/controls/TrileanLabel.js","components/controls/ListSingle.js","components/controls/ListMultiple.js","components/TimeInput.js","components/controls/Time.js","components/DateTimeInput.js","components/controls/DateTime.js","components/controls/TimeLabel.js","components/controls/DateLabel.js","components/controls/ButtonAddSignature.js","components/controls/RegisterSignatures.js","components/controls/SearchableListEntryDialogSMS.js","components/controls/ButtonAddSMS.js","components/controls/SearchableSMSListView.js","components/controls/SearchableListEntryDialogEmail.js","components/controls/ButtonAddEmail.js","components/controls/SearchableEmailListView.js","components/controls/MatrixButton.js","components/controls/DocumentSummaryGrid.js","components/controls/ButtonSubmitRegister.js","components/controls/ButtonCloseout.js","components/controls/ButtonViewDocument.js","features/json/JsonReader.js","components/Tabulation.js","components/ApiInterface.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","jsonSlice","createSlice","name","initialState","value","JSON","parse","localStorage","getItem","documentStatus","reducers","setJson","state","action","payload","setItem","stringify","setDocumentStatus","actions","selectJson","json","selectDocumentStatus","tabulationSlice","callSection","prevSection","nextSection","selectedTabulation","tabulation","displaySlice","debugMode","errorMsg","setControls","setDebugMode","setOpenListId","openListId","setErrorMsg","clearErrorMsg","selectDisplayedControls","display","selectDebugMode","selectOpenListId","selectErrorMsg","JsonOptions","dispatch","useDispatch","useState","useSelector","loadedJSON","id","className","onClick","pEvent","icon","faRedo","style","transform","marginLeft","faTrash","htmlFor","type","checked","onChange","target","DocumentTableOfContents","props","sections","Sections","length","map","element","index","Elements","Type","key","Title","faChevronRight","ListMulticontrol","controlJson","Id","Data","options","option","cols","rows","defaultValue","selectedIndex","visibleControls","OptionedControls","Controls","Label","IsVisible","FontAttributes","FontSize","HasUnderLine","fontSize","fontWeight","fontStyle","textDecoration","Modal","visibility","toggleVisibility","message","css","backdrop","springBackdropProps","useSpring","opacity","from","zIndex","config","gentle","springModalProps","top","stiff","backdropStyle","backgroundColor","div","styles","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","faTimes","modalHeader","faExclamationTriangle","modalContent","modalFooter","modalBtn","Text","IsEnabled","Value","Format","Warning","WarningMessage","Mandatory","ValidationMessage","isModalVisible","setIsModalVisible","bgColor","modalOptions","setModalOptions","emailAddressTester","phoneNumberRestrictCodes","onChangeHandler","newJson","updateJson","useEffect","textfield","Lines","Keyboard","min","Min","max","Max","size","Decimal","maxLength","onKeyDown","includes","keyCode","preventDefault","VarChar","disabled","onBlur","focus","test","toLowerCase","warningMarker","mandatoryMarker","getControlName","pControlType","split","part","toUpperCase","slice","join","getCurrentDate","pDate","Date","now","normalizeJson","pJson","camelcaseKeys","deep","pascalCase","exportMetaData","addToDocumentExport","pValue","controlIndex","findIndex","item","console","log","push","prevValue","table","Repeatable","components","ButtonSubmitPurchase","ButtonAddDocketNumber","API","Image","ImageSingle","ButtonAddReportDate","QRScanner","QRScannerList","Signature","SignatureDateTime","SignatureDate","Matrix","Checkbox","Boolean","Trilean","TrileanLabel","ListSingle","ListMultiple","Time","DateTime","TimeLabel","DateLabel","ButtonAddSignature","RegisterSignatures","SearchableListEntryDialogSMS","ButtonAddSMS","SearchableSMSListView","SearchableListEntryDialogEmail","ButtonAddEmail","SearchableEmailListView","MatrixButton","DocumentSummaryGrid","ButtonSubmitRegister","ButtonCloseout","ButtonViewDocument","updateJsonHandler","mergedElements","elementIndex","ID","children","control","componentName","Component","Api","IncludePhoneNumber","IncludeEmail","IncludeTitle","IncludeBusinessNumber","IncludeAbbreviation","IncludeCode","targetedApi","String","collapsed","setCollapsed","keyword","setKeyword","list","setList","filteredList","setFilteredList","constructor","selectedValues","setSelectedValues","animatedListProps","height","trailPills","useTrail","marginTop","to","apiUrl","getEndpoint","token","apiHeaders","Headers","append","access_token","requestOptions","method","headers","redirect","listItemClickHandler","currentItem","updateJSON","fetch","then","response","text","result","listItems","phoneNumber","emailAddress","title","abn","abbr","code","spacer","Contact","Number","Email","NameFirst","NameLast","Company","Name","CompanyName","Abn","Abbr","Code","catch","error","filter","itemList","isSelected","iconCheck","faCheck","selectedPills","targetText","parentNode","innerText","faAngleDown","faAngleUp","placeholder","e","DateInput","dateformatConverted","format","replace","dateValue","setDateValue","dateString","addMonths","addDays","toTimeString","modifiers","AddDay","AddMonth","dateContainer","datePicker","onDateChange","btnClear","FormatDateTime","IsBlank","DateValue","defaultDate","undefined","toDateString","onDateChangeHandler","Figure","container","src","source","alt","btnClose","onClose","Images","onCloseHandler","images","image","faImage","figure","imageData","fileReader","FileReader","onload","readAsDataURL","files","ShowComment","Collapsible","IsCollapsed","EntryTitle","Details","CommentValue","comment","commentText","details","entryTitle","defaultChecked","checkboxValue","booleanValue","HideNa","trileanValue","SelectedValue","mass","tension","friction","newValues","TimeInput","timeformatConverted","timeValue","setTimeValue","pTime","timeString","addHours","AddHour","timeContainer","timePicker","onTimeChange","TimeValue","defaultTime","getHours","getMinutes","onTimeChangeHandler","DateTimeInput","dateFormatConverted","dateTimeValue","toLocaleTimeString","dateTimeStringValue","dateTimeContainer","onDateTimeChange","DateTimeValue","defaultDateTime","setDateTimeValue","pDateTime","onDateTimeChangeHandler","JsonReader","displayedControls","activeSectionId","currentJsonToEdit","controls","getControlPathById","pControlId","currentSection","itemPath","forEach","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","section","controlPath","jsonToUpdate","controlsFromElements","controlComponent","substring","ElementId","isVisible","fixed","Tabulation","tabIndex","tabLength","tabTitle","row","faFastBackward","faStepBackward","faStepForward","faFastForward","ApiInterface","apiURL","setToken","user","setUser","projects","setProjects","templates","setTemplates","documents","setDocuments","selectedProjectId","setSelectedProjectID","selectedTemplateId","setSelectedTemplateID","selectedTemplate","setSelectedTemplate","setSelectedDocument","isFetchingTemplates","setIsFetchingTemplates","isFetchingDocuments","setIsFetchingDocuments","loadingAnim","setLoadingAnim","metadata","documentBody","documentBodyString","formdata","FormData","body","res","Config","configJson","getUser","pToken","userHeaders","projectsList","project","templatesList","template","Title1","documentsList","document","DocumentNumber","trail","setInterval","fetchingTemplates","fetchingDocuments","urlencoded","URLSearchParams","receivedToken","projectsHeaders","projectID","pProjectID","templatesHeaders","getTemplates","documentsHeaders","getDocuments","getElementById","pTemplate","pDocument","templateToUpdate","pElementID","currentJson","foundPath","sectionIndex","getElementFromElementId","firstFoundedPath","templateValues","aggregateJson","pTemplateID","currentTemplate","getTemplateById","DocumentFormTemplateId","MetaData","App","configureStore","reducer","jsonReducer","tabulationReducer","displayReducer","window","location","hostname","match","ReactDOM","render","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.368571b6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"DateTimeInput_timePicker__g55DG\",\"datePicker\":\"DateTimeInput_datePicker__fMbwV\",\"dateTimeContainer\":\"DateTimeInput_dateTimeContainer__3DJHa\",\"btnClear\":\"DateTimeInput_btnClear__1hSf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"DateInput_datePicker__1qUGn\",\"dateContainer\":\"DateInput_dateContainer__3vsHd\",\"btnClear\":\"DateInput_btnClear__hBuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"TimeInput_timePicker__1bwP3\",\"timeContainer\":\"TimeInput_timeContainer__15bEw\",\"btnClear\":\"TimeInput_btnClear__3Cafn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Figure_container__1bF2w\",\"btnClose\":\"Figure_btnClose__3UDU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Tabulation_row__1qqOd\",\"title\":\"Tabulation_title__2BmpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"JsonReader_fixed__1abV0\"};","import { createSlice } from '@reduxjs/toolkit'\n\nexport const jsonSlice = createSlice({\n  name: 'json',\n  initialState: {\n    value: JSON.parse(localStorage.getItem('json')) || {},\n    documentStatus: '',\n  },\n  reducers: {\n    setJson: (state, action) => {\n      // console.log(`setJson : `, action.payload)\n\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = action.payload\n      localStorage.setItem('json', JSON.stringify(action.payload))\n    },\n    setDocumentStatus: (state, action) => {\n      // console.log(`setDocumentStatut : `, action.payload)\n      state.documentStatus = action.payload\n    }\n  },\n})\n\nexport const { setJson, setDocumentStatus } = jsonSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectJson = state => state.json.value\nexport const selectDocumentStatus = state => state.json.documentStatus\n\nexport default jsonSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\n\nexport const tabulationSlice = createSlice({\n  name: 'tabulation',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    callSection: (state, action) => {\n      state.value = action.payload\n    },\n    prevSection: state => {\n      state.value -= 1\n    },\n    nextSection: state => {\n      state.value += 1\n    },\n  },\n});\n\nexport const { callSection,\n  prevSection,\n  nextSection,\n  } = tabulationSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectedTabulation = state => state.tabulation.value;\n\n\nexport default tabulationSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const displaySlice = createSlice({\n  name: 'display',\n  initialState: {\n    value: [],\n    debugMode: false,\n    errorMsg: ''\n  },\n  reducers: {\n    setControls: (state, action) => {\n      state.value = action.payload\n    },\n    setDebugMode: (state, action) => {\n      state.debugMode = action.payload\n    },\n    setOpenListId: (state, action) => {\n      state.openListId = action.payload\n    },\n    setErrorMsg: (state, action) => {\n      state.errorMsg = action.payload\n    },\n    //what's that\n    clearErrorMsg: state => {\n      state.errorMsg = ''\n    }\n  }\n})\n\nexport const { setControls, setDebugMode, setOpenListId, setErrorMsg, clearErrorMsg } = displaySlice.actions\n\nexport const selectDisplayedControls = state => state.display.value;\nexport const selectDebugMode = state => state.display.debugMode;\nexport const selectOpenListId = state => state.display.openListId;\nexport const selectErrorMsg = state => state.display.errorMsg;\n\nexport default displaySlice.reducer;","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setDebugMode,\n  selectDebugMode\n} from '../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport default function JsonOptions() {\n\n  const dispatch = useDispatch()\n\n  const [isHidden, setIsHidden] = useState(false)\n\n  const debugMode = useSelector(selectDebugMode)\n  const onDebugChangeHandler = (pEvent) => dispatch(setDebugMode(pEvent.target.checked))\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  let loadedJSON = JSON.parse(localStorage.getItem('initialJson')) || {}\n\n  function clickRevertChangesHandler(pEvent) {\n    dispatch(callSection(0))\n    dispatch(setJson(loadedJSON))\n  }\n\n  function clickClearDocumentHandler(pEvent) {\n    dispatch(setJson({}))\n  }\n\n  // function clickLoadJSONHandler(pEvent) {\n  //   fileLoaderInput = document.querySelector('#fileLoader')\n  //   fileLoaderInput.click()\n  // }\n  // let fileLoaderInput\n  // function loadJSONHandler(pEvent) {\n  //   const file = pEvent.target.files[0]\n  //   const reader = new FileReader()\n\n  //   reader.onloadend = function () {\n  //     try {\n  //       let source = reader.result\n  //       let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n  //       loadedJSON = JSON.parse(atob(newSource))\n  //       console.log(`--->: reader.onloadend -> newData`, loadedJSON)\n\n  //       localStorage.setItem('initialJson', JSON.stringify(loadedJSON))\n  //       dispatch(setJson(loadedJSON))\n  //     }\n  //     catch (err) {\n  //       console.log('---> ', err)\n  //     }\n  //   }\n  //   if (file) {\n  //     reader.readAsDataURL(file)\n  //   }\n  // }\n\n\n  return (\n    <div id=\"jsonOptions\" className={`${(documentStatus === 'modified') ? 'options-visible' : 'options-hidden'}`}>\n      {/* <button className=\"btn btn-ternary\" onClick={clickLoadJSONHandler}>LOAD JSON FILE</button> */}\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickRevertChangesHandler}>\n        <FontAwesomeIcon icon={faRedo} style={{ transform: 'scaleX(-1)', marginLeft: 0 }} />\n        REVERT CHANGES\n      </button>\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickClearDocumentHandler}>\n        <FontAwesomeIcon icon={faTrash} style={{ marginLeft: 0 }} />\n        CLEAR DOCUMENT\n      </button>\n      {/* <input id=\"fileLoader\" type=\"file\" onChange={loadJSONHandler}></input> */}\n      <div className=\"debug\">\n        <label htmlFor=\"debug\">Debug</label>\n        <input type=\"checkbox\" name=\"debug\" id=\"debug\" className=\"debug-check\" checked={debugMode} onChange={onDebugChangeHandler} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectJson\n} from '../../features/json/jsonSlice';\nimport {\n  callSection\n} from '../../features/tabulation/tabulationSlice';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DocumentTableOfContents(props) {\n  const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n\n  // const { Title, Id, Elements }  = json\n\n  function gotToSectionHanlder(pSectionIndex) {\n    // console.log('pSectionIndex: ', pSectionIndex)\n    dispatch(callSection(pSectionIndex))\n  }\n\n  const sections = json.Sections && json.Sections.length > 0 ? json.Sections.map((element, index) => {\n    if (element.Elements[0].Type === 'Document.TableOfContents') return null\n    return (\n      <li key={index}>\n        <button className=\"btn btn-secondary-outlined btn-link fixed-large\" onClick={() => gotToSectionHanlder(index)}>\n          {element.Title}\n          <FontAwesomeIcon icon={faChevronRight} />\n        </button>\n      </li>\n    )\n  }) : ''\n\n  return (\n    <ul className=\"toc-list\">\n      {sections}\n    </ul>\n  )\n}\n\nexport default DocumentTableOfContents\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { setControls } from '../../features/display/displaySlice'\n\nfunction ListMulticontrol(props) {\n\n  const json = props.controlJson\n\n  const { Title, Id, Data } = json\n\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n  function onChangeHandler(pEvent) {\n    const selectedIndex = pEvent.target.value\n    // console.log(`--->: onChangeHandler -> selectedIndex`, selectedIndex)\n    if (selectedIndex >= 0) {\n      const visibleControls = json.OptionedControls[selectedIndex].Controls\n      // console.log('---> ', visibleControls)\n      displayControls(visibleControls)\n    }\n  }\n\n  function displayControls(pControlList) {\n    dispatch(setControls(pControlList))\n    // pControlList.forEach((item, index) => {\n    //   console.log('---> ', item)\n    // })\n  }\n\n  const options = Data.map((option, index) => <option key={index} value={index}>{option}</option>)\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        List<br />\n        Multicontrol<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" defaultValue={JSON.stringify(json)}></textarea>\n      <div className=\"control\">\n        <label htmlFor=\"listmulticontrol\">{Title}</label>\n        <select name=\"listmulticontrol\" id=\"listmulticontrol\" onChange={onChangeHandler}>\n          <option value=\"-1\">-----</option>\n          {options}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default ListMulticontrol\n","import React, { useState } from 'react'\n\nfunction Label(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true, FontAttributes, FontSize = 14, HasUnderLine = false } = json\n\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const underline = HasUnderLine ? <hr /> : ''\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Label<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" defaultValue={JSON.stringify(json)}></textarea>\n        <div className=\"control\" style={{\n          fontSize: FontSize - 2 + 'px',\n          fontWeight: (FontAttributes === 'Bold' ? 'bold' : ''),\n          fontStyle: (FontAttributes === 'Italic' ? 'italic' : ''),\n          textDecoration: HasUnderLine ? 'underline' : ''\n        }}>\n          {Title}\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Label","import React from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springModalProps}>\n          <div\n            className={styles.modalContainer}\n            style={css}>\n            <div className={styles.modalClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.modalHeader}>\n              <FontAwesomeIcon icon={faExclamationTriangle} />\n            </div>\n            <div className={styles.modalContent}>\n              {message}\n            </div>\n            <div className={styles.modalFooter}>\n              <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport Modal from '../Modal'\n\nfunction Text(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true, IsEnabled = true, Value = '', Format, Warning = false, WarningMessage, Mandatory, ValidationMessage } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalOptions, setModalOptions] = useState(Mandatory ? { message: ValidationMessage, bgColor: '#EF643C' } : { message: WarningMessage, bgColor: '#000000' })\n\n\n  const emailAddressTester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/\n  const phoneNumberRestrictCodes = [49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 16, 57, 48, 16, 187, 32, 8]\n\n\n  function onChangeHandler(pEvent) {\n\n    // if ((Format.Keyboard === 'Telephone') && !telephoneTester.test(pEvent.target.value)) return\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    // console.log('value: ', json)\n    props.updateJson(newJson)\n  }\n\n  function onBlurHandler(pEvent) {\n    const target = pEvent.target\n\n    if (Warning && target.value === '') {\n      setIsModalVisible(true)\n    }\n    if (Mandatory && target.value === '') {\n      target.focus()\n      setIsModalVisible(true)\n    }\n    if (Format.Keyboard === 'Email') {\n      if (!emailAddressTester.test((pEvent.target.value).toLowerCase())) {\n\n        setModalOptions({ message: \"The email address provided appears not to be valid\", bgColor: '#000000' })\n        setIsModalVisible(true)\n      }\n    }\n  }\n\n  function onKeyDownHandler(pEvent) {\n    // console.log('---> ', pEvent.keyCode)\n    if (Format.Keyboard === 'Telephone') {\n      if (!phoneNumberRestrictCodes.includes(pEvent.keyCode)) pEvent.preventDefault()\n    }\n  }\n\n  useEffect(() => {\n    // console.log('Text set data: ', Value)\n  }, [json])\n\n  const textfield = Format.Lines ? <textarea id={Id} rows={Format.Lines} onChange={onChangeHandler}></textarea>\n    :\n    Format.Keyboard === 'Numeric' ? <input type='number' min={Format.Min} max={Format.Max} size={Format.Decimal} onChange={onChangeHandler} />\n      :\n      Format.Keyboard === 'Telephone' ? <input type='text' maxLength=\"20\" onKeyDown={onKeyDownHandler} onChange={onChangeHandler} />\n        :\n        <input id={Id} type=\"text\" value={Value} maxLength={Format.VarChar || -1} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n  const warningMarker = WarningMessage ? '*' : ''\n  const mandatoryMarker = Mandatory ? <span className=\"warning-red\">*</span> : ''\n\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Text<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <label htmlFor=\"title\">{Title} {warningMarker}{mandatoryMarker}</label>\n          {textfield}\n        </div>\n        <Modal\n          visibility={isModalVisible}\n          toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n          message={`${Id}: ${modalOptions.message}`}\n          css={{ backgroundColor: modalOptions.bgColor }}\n          backdrop={'rgba(0,0,0,0.3)'}\n        />\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Text\n","import camelcaseKeys from 'camelcase-keys'\n\nexport function getControlName(pControlType) {\n  return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n}\n\nexport function getElementFromElementId(pJson, pElementID) {\n  console.log(`---> Looking for pElementID: `, pElementID)\n  const currentJson = normalizeJson(pJson).Sections\n  console.log(`--->: getElementFromElementId inside this: `, currentJson)\n  let foundPath = []\n\n  if (pElementID !== 'undefined') {\n    currentJson.forEach((section, sectionIndex) => {\n      section.Elements.forEach((item, index) => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach((subsubitem, subsubindex) => {\n                if (subsubitem.Id !== undefined && subsubitem.Id === pElementID) {\n                  console.log('---> path: ', { sectionIndex, index, subindex, subsubindex })\n                  foundPath.push([sectionIndex, index, subindex, subsubindex])\n                }\n              })\n\n            }\n\n            if (subitem.Id !== undefined && subitem.Id === pElementID) {\n              console.log('---> path: ', { sectionIndex, index, subindex })\n              foundPath.push([sectionIndex, index, subindex])\n            }\n\n          })\n        }\n\n        if (item.Id !== undefined && item.Id === pElementID) {\n          console.log('---> path: ', { sectionIndex, index })\n          foundPath.push([sectionIndex, index])\n        }\n\n      }\n      )\n    }\n    )\n  }\n\n  return foundPath\n}\n\n// Fix conflict with React component 'Date' and Date JS Object\nexport function getCurrentDate(pDate = Date.now()) {\n  // console.log(`--->: getCurrentDate -> pDate`, pDate)\n  // return new Date().toLocaleDateString().split('/').reverse().join('-')\n  // return new Date().toLocaleDateString()\n  // return new Date()\n  return new Date(pDate)\n}\nexport function getDateObjFromDate(pDate) {\n  const dateObj = new Date(pDate + ' ' + new Date().toTimeString())\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromTime(pTime) {\n  const dateObj = new Date(new Date().toDateString() + ' ' + pTime)\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromDateString(pDate) {\n  const dateObj = new Date(pDate)\n  return dateObj\n}\n\nexport function normalizeJson(pJson) {\n  // const json = JSON.parse(pJson)\n  return camelcaseKeys(pJson, { deep: true, pascalCase: true })\n}\n\n//\nconst exportMetaData = []\nexport function addToDocumentExport(pValue) {\n\n  const controlIndex = exportMetaData.findIndex(item => item.Id === pValue.Id)\n  console.log(`--->: addToDocumentExport -> controlIndex`, controlIndex)\n  if (controlIndex === -1) exportMetaData.push(pValue)\n  else {\n    const prevValue = { ...exportMetaData[controlIndex] }\n    exportMetaData[controlIndex] = { ...prevValue, ...pValue }\n  }\n  // console.log(`--->: addToDocumentExport -> pValue`, pValue.Id)\n  console.log(`exportMetaData :`)\n  console.table(exportMetaData)\n\n  // exportMetaData[0].Elements.push(pValue)\n  // console.log('---> addToDocumentExport: ', exportMetaData)\n}\n\nexport function getDocumentExport() {\n  return { Elements: exportMetaData }\n}","import React, { useState } from 'react'\n\nimport { getControlName } from '../../app/utilities'\nimport { DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  // Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument } from './'\n\nfunction Repeatable(props) {\n\n  const json = props.controlJson\n  const { Title, Id, Data, Elements, IsVisible = true }  = json\n  // console.log(`--->: Repeatable -> IsVisible`, IsVisible)\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n\n\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function updateJsonHandler(pJson) {\n    console.log('update this: ', pJson)\n    console.log('in this: ', json.Elements)\n    const mergedElements = [...json.Elements]\n\n    const elementIndex = mergedElements.findIndex(element => element.ID === pJson.ID)\n    mergedElements[elementIndex] = pJson\n    console.log('--->elementIndex:  ', elementIndex)\n\n    props.updateJson({...json, Elements: mergedElements})\n  }\n\n  const children = Elements.map((control, index) => {\n    const componentName = getControlName(control.Type)\n    // console.log(`--->componentName: `, componentName)\n    const Component = components[componentName]\n    return <Component key={index} controlJson={control} updateJson={updateJsonHandler} />\n    // return <div key={index}>{control.Type}</div>\n  })\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        Repeatable<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" defaultValue={JSON.stringify(json)}></textarea>\n      <div className=\"control\">\n        {children}\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default Repeatable","import React, { useState } from 'react'\n\nfunction ButtonSubmitPurchase(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitPurchase<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitPurchase\n","import React, { useState } from 'react'\n\nfunction ButtonAddDocketNumber(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddDocketNumber<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddDocketNumber\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction API(props) {\n\n  const json = props.controlJson\n\n  const { Title, Type, Id, Value = '', Api,\n    IncludePhoneNumber, IncludeEmail, IncludeTitle, IncludeBusinessNumber, IncludeAbbreviation, IncludeCode } = json\n  const targetedApi = String(Api).toLowerCase()\n\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [list, setList] = useState([])\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // UTILS\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // useEffect(() => {\n  //   // console.log(`API (${Title}) has new json: ${JSON.stringify(json)}`)\n  //   // console.log('API: default data: ', Value)\n  // }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - API                                   -----*\n  *----------------------------------------------------*/\n\n  const environment = 'https://api-uat.extrack.com/V1.0/'\n  const projectID = 1249\n\n  const apiUrl = `${environment}${getEndpoint()}`\n\n  const token = JSON.parse(localStorage.getItem('dynFormToken'))\n  // console.log(`--->: API -> Api`, Api, token.access_token)\n\n  const apiHeaders = new Headers()\n  apiHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n  const requestOptions = {\n    method: 'GET',\n    headers: apiHeaders,\n    redirect: 'follow'\n  }\n\n  function getEndpoint() {\n    switch (targetedApi) {\n      case 'projectcompany':\n        return `Project/${projectID}/Directory/Companies`\n      case 'projectcontacts':\n        return `Project/${projectID}/Directory/Contacts`\n      case 'globalcontacts':\n        return `Org/contacts`\n      case 'dockettypes':\n        return `/Docket/Types`\n      case 'abs':\n        return `Project/${projectID}/ABS`\n      case 'tbs':\n        return `Project/${projectID}/TBS`\n      case 'cbs':\n        return `Project/${projectID}/CbsWo`\n      case 'dbs':\n        return `Project/${projectID}/DBS`\n      case 'fbs':\n        return `Project/${projectID}/FBS`\n      case 'wbs':\n        return `Project/${projectID}/WBS`\n      case 'pcbs':\n        return `Project/${projectID}/PCBS`\n      case 'pbs':\n        return `Project/${projectID}/PBS`\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(targetedApi, JSON.parse(result))\n        const dropdownOptions = JSON.parse(result)\n        // console.log(`--->: API -> dropdownOptions`, dropdownOptions)\n\n        const listItems = dropdownOptions.map((item, index) => {\n          let option, phoneNumber, emailAddress, title, abn, abbr, code, spacer\n          switch (Api) {\n\n            case 'ProjectContacts':\n              phoneNumber = IncludePhoneNumber ? ` - ${item.Contact.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` - ${item.Contact.Email || `n/a`}` : ``\n              option = `${item.Contact.NameFirst} ${item.Contact.NameLast} - ${item.Company.Name}${phoneNumber}${emailAddress}`\n              break\n\n            case 'GlobalContacts':\n              phoneNumber = IncludePhoneNumber ? ` - ${item.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` - ${item.Email || `n/a`}` : ``\n              option = `${item.NameFirst} ${item.NameLast} - ${item.CompanyName}${phoneNumber}${emailAddress}`\n              break\n\n            case 'ProjectCompany':\n              // console.log(`--->: API ${Api} -> item`, item)\n\n              title = IncludeTitle ? ` - ${item.Title || `n/a`}` : ``\n              abn = IncludeBusinessNumber ? ` - ${item.Company.Abn || `n/a`}` : ``\n              abbr = IncludeAbbreviation ? ` - ${item.Company.Abbr || `n/a`}` : ``\n              option = `${item.Company.Name}${title}${abn}${abbr}`\n              // optionLabel = `${item.Company.Name} - ${item.Company.Abbr}`\n              break\n\n            case 'DocketTypes':\n              option = `${item.Title}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n            default:\n              title = IncludeTitle ? `${item.Title || `n/a`}` : ``\n              code = IncludeCode ? `${item.Code || `n/a`}` : ``\n              spacer = (IncludeCode && IncludeTitle) ? ` - ` : ``\n              option = `${title}${spacer}${code}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n          }\n\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          // console.log('component:', {Type: 'Api', Value, optionLabel})\n          // setSelectedValue(optionValue)\n          // }\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          //   currentValue = Value\n          //   console.log('API ---> DefaultValue: ', Value, '----> optionLabel : ', optionLabel)\n\n          // }\n          // return <option key={index} value={optionValue}>{optionLabel}</option>\n          return option\n        })\n        setList(listItems)\n        // console.log(`--->: API -> dropdownNodes`, dropdownNodes)\n\n      })\n      .catch(error => console.log('error', error))\n  }, [])\n\n\n\n\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(list.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [list, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    if (selectedValues[0] !== currentItem) setSelectedValues([currentItem])\n    else setSelectedValues([])\n    updateJSON(currentItem)\n  }\n  function updateJSON(pValue) {\n    // console.log(`--->: updateJSON with Value: `, pValue)\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    // console.log(`--->: updateJSON -> newJson`, newJson)\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = (item === Value) ? true : false\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        {Type}<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">\n            {selectedPills}\n          </div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  )\n}\n\nexport default API","import React, { useState } from 'react'\n\nimport { format, addDays, addMonths } from 'date-fns'\n// import DatePicker from \"react-datepicker\"\n// import \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DateInput(props) {\n\n  const dateformatConverted = props.format.replace(/ddd/g, 'eee')\n  const [dateValue, setDateValue] = useState(props.dateValue)\n  // console.log(`--->: DateInput -> props.dateValue received: `, props.dateValue)\n\n  function onClearHandler() {\n    setDateValue('')\n    props.onDateChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setDateValue(pValue)\n    props.onDateChange(pValue)\n  }\n\n  const dateString = dateValue === '' ? dateValue : format(addMonths(addDays(getDateObjFromDate(dateValue), props.modifiers.AddDay), props.modifiers.AddMonth), dateformatConverted)\n\n\n  return (\n    <div className={styles.dateContainer}>\n      <input\n        type=\"date\"\n        name=\"\"\n        id=\"\"\n        className={styles.datePicker}\n        defaultValue={dateValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {dateString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { getCurrentDate, getDateObjFromDate } from '../../app/utilities'\nimport DateInput from '../DateInput'\n\nfunction Date(props) {\n\n  const json = props.controlJson\n  let { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd', IsBlank = false, IsVisible = true, AddDay = 0, AddMonth = 0, DateValue } = json\n\n  const defaultDate = (DateValue === '' || DateValue === undefined) ?\n    `${getCurrentDate().toDateString()}`\n    :\n    DateValue\n\n\n  const [dateValue, setDateValue] = useState(!IsBlank ? defaultDate : '')\n\n  function onDateChangeHandler(pDate) {\n    setDateValue(pDate)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDate !== '') newJson.DateValue = pDate\n    else delete newJson.DateValue\n    newJson.IsBlank = (pDate !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Date<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {/* {DateValue.toString()} */}\n          <DateInput format={FormatDateTime} dateValue={dateValue} modifiers={{ AddDay, AddMonth }} onDateChange={(value) => onDateChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Date","import React from 'react'\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './Figure.module.scss'\n\n\nexport default function Figure(props) {\n\n  function onClickHandler(pEvent) {\n    // console.log('---> ', pEvent)\n\n    props.onClose(pEvent)\n\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.source} alt=\"figure\" />\n      <div className={styles.btnClose} onClick={onClickHandler}><FontAwesomeIcon icon={faTimes} /></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction Image(props) {\n\n  const json = props.controlJson\n  const { Title, Id, Data, IsVisible = true, Images = [] } = json\n  // console.log(`--->: Image -> IsVisible`, IsVisible)\n\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  const [selectedFile, setSelectedFile] = useState('')\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    // const newJson = JSON.parse(JSON.stringify(json))\n    // newJson.Value = pEvent.target.value\n    console.log('pEvent: ', pEvent)\n    // props.updateJson(newJson)\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const images = Images.map((image, index) => (\n    <div className=\"control-row\" key={`image${index}`}>\n      <Figure source={`data:image/png; base64, ${image}`} onClose={onCloseHandler} />\n    </div>\n  )\n  )\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Image<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          {images}\n        </div>\n\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Image\n","import React, { useState, useEffect } from 'react'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction ImageSingle(props) {\n\n  const json = props.controlJson\n  const { Title, Id, Data, IsVisible = true, Value = '' } = json\n  // console.log(`--->: ImageSingle -> IsVisible`, IsVisible)\n\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    let imageData\n    const fileReader = new FileReader()\n    fileReader.onload = (e) => {\n      imageData = e.target.result.replace(\"data:image/png;base64,\", \"\")\n\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = imageData\n      props.updateJson(newJson)\n    }\n    fileReader.readAsDataURL(pEvent.target.files[0])\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    delete newJson.Value\n    props.updateJson(newJson)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const figure = Value !== '' ? <Figure source={`data:image/png; base64, ${Value}`} onClose={onCloseHandler} /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          ImageSingle<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          <div className=\"control-row\">\n            {figure}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ImageSingle\n","import React, { useState } from 'react'\n\nfunction ButtonAddReportDate(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddReportDate<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddReportDate","import React from 'react'\n\nfunction QRScanner() {\n  return (\n    <div>\n      QRScanner\n    </div>\n  )\n}\n\nexport default QRScanner\n","import React from 'react'\n\nfunction QRScannerList() {\n  return (\n    <div>\n      QRScannerList\n    </div>\n  )\n}\n\nexport default QRScannerList\n","import React from 'react'\n\nfunction Signature() {\n  return (\n    <div>\n      Signature\n    </div>\n  )\n}\n\nexport default Signature\n","import React from 'react'\n\nfunction SignatureDateTime() {\n  return (\n    <div>\n      SignatureDateTime\n    </div>\n  )\n}\n\nexport default SignatureDateTime\n","import React from 'react'\n\nfunction SignatureDate() {\n  return (\n    <div>\n      SignatureDate\n    </div>\n  )\n}\n\nexport default SignatureDate\n","import React from 'react'\n\nfunction Matrix() {\n  return (\n    <div>\n      Matrix\n    </div>\n  )\n}\n\nexport default Matrix\n","import React, { useState, useEffect } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Checkbox(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, EntryTitle, Details, HasUnderLine, IsVisible = true, Value = '', CommentValue = '' }  = json\n  // console.log(`--->: Checkbox -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n\n    const checkboxValue = pEvent.target.checked === true ? 'Y' : 'N'\n    const valuesToExport = {Type, Id, Value: checkboxValue}\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = checkboxValue\n    // console.log('value: ', newJson.Value, json)\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const commentText = pEvent.target.value\n    const valuesToExport = {Id, CommentValue: commentText}\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = commentText\n    props.updateJson(newJson)\n  }\n\n  useEffect(() => {\n    // console.log('Checkbox set data :', json)\n  }, [json])\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        Checkbox<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className={`control ${HasUnderLine ? 'control-underline' : ''}`}>\n        <h3>{Title}</h3>\n        {details}\n        <input type=\"checkbox\" defaultChecked={Value === 'Y'} onChange={onChangeHandler}/>\n        {entryTitle}\n        {comment}\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default Checkbox\n","import React, { useState, useEffect } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Boolean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, HasUnderLine, EntryTitle, Details, IsVisible = true, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Boolean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  useEffect(() => {\n    // console.log('Boolean set data :', json)\n  }, [json])\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n\n    const booleanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: booleanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = booleanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Boolean<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-inline\">\n            {details}\n          </div>\n          <div className={`control-inline ${HasUnderLine ? 'control-underline' : ''}`}>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n            </div>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n            </div>\n          </div>\n          <div className=\"control-inline\">\n            {entryTitle}\n          </div>\n          <div className=\"control-inline\">\n            {comment}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Boolean","import React, { useState, useEffect } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Trilean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, HideNa, IsVisible = true, Collapsible, IsCollapsed, EntryTitle, Details, Value = '', CommentValue = '' }  = json\n  // console.log(`--->: Trilean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n\n    const trileanValue = pEvent.target.value\n    const valuesToExport = {Type, Id, Value: trileanValue}\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = trileanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n\n  useEffect(() => {\n    // console.log('Trilean set data :', json)\n  }, [json])\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        Trilean<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        {Title}\n        <div className=\"control-inline\">\n          {details}\n          <div className=\"control-checkbox\">\n            <label htmlFor=\"yes\">Yes</label>\n            <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler}/>\n          </div>\n          <div className=\"control-checkbox\">\n            <label htmlFor=\"no\">No</label>\n            <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler}/>\n          </div>\n          <div className={`${HideNa? 'hidden' : ''} control-checkbox`}>\n            <label htmlFor=\"na\">N/A</label>\n            <input type=\"radio\" id=\"na\" name={Id} value=\"NA\" checked={Value === 'NA'} onChange={onChangeHandler}/>\n          </div>\n        </div>\n        <div className=\"control-inline\">\n          {comment}\n        </div>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default Trilean\n","import React, { useState } from 'react'\n\nfunction TrileanLabel(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id} = json\n\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        {Type}<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <label htmlFor=\"title\">{Title}</label>\n      </div>\n    </div>\n  )\n}\n\nexport default TrileanLabel\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport {useSpring, animated, useTrail, config} from 'react-spring'\n\nfunction ListSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, Value = ''} = json\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({height: collapsed ? 0 : 200})\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // UTILS\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    if (selectedValues[0] !== pEvent.target.id) setSelectedValues([pEvent.target.id])\n    else setSelectedValues([])\n    updateJSON(pEvent.target.id)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n  filteredList.map((item, key) => {\n    const isSelected = selectedValues.findIndex(value => item === value) > -1\n    const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n    return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n      {iconCheck}\n      {item}\n    </div>\n    }\n  )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        {Type}<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">\n            {selectedPills}\n          </div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  )\n}\n\nexport default ListSingle","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport {useSpring, animated, useTrail, config} from 'react-spring'\n\nfunction ListMultiple(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, SelectedValue = []} = json\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState(SelectedValue || [])\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({height: collapsed ? 0 : 200})\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: {mass:1, tension: 500, friction: 26}\n  })\n\n  // UTILS\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        const newValues = selectedValues.filter(item => item !== targetText)\n        setSelectedValues(newValues)\n        updateJSON(newValues)\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    const newValues = (selectedValues.findIndex(item => item === currentItem) < 0) ? [...selectedValues, currentItem]\n    : selectedValues.filter(item => item !== currentItem)\n    setSelectedValues(newValues)\n    updateJSON(newValues)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.SelectedValue = pValue\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n  filteredList.map((item, key) => {\n    const isSelected = selectedValues.findIndex(value => item === value) > -1\n    const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n    return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n      {iconCheck}\n      {item}\n    </div>\n    }\n  )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        {Type}<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">\n            {selectedPills}\n          </div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  )\n}\n\nexport default ListMultiple\n","import React, { useState } from 'react'\n\nimport { format, addHours } from 'date-fns'\n\nimport { getDateObjFromTime } from '../app/utilities'\n\nimport styles from './TimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function TimeInput(props) {\n\n  // console.log(`--->: TimeInput -> timeValue received: `, props.timeValue, getDateObjFromTime(props.timeValue))\n\n  const timeformatConverted = props.format.replace('tt', 'a')\n  const [timeValue, setTimeValue] = useState(props.timeValue)\n\n  function onClearHandler(pEvent) {\n    setTimeValue('')\n    props.onTimeChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setTimeValue(pValue)\n    props.onTimeChange(pValue)\n  }\n\n  const timeString = timeValue !== '' ? format(addHours(getDateObjFromTime(timeValue), props.modifiers.AddHour), timeformatConverted)\n    :\n    ''\n\n  return (\n    <div className={styles.timeContainer}>\n      <input\n        type=\"time\"\n        name=\"\"\n        id=\"\"\n        className={styles.timePicker}\n        value={timeValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {timeString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport TimeInput from '../../components/TimeInput'\n\nfunction Time(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'hh:mm tt', IsBlank = false, IsVisible = true, AddHour = 0, TimeValue } = json\n\n  const defaultTime = (TimeValue === '' || TimeValue === undefined) ?\n    `${new Date().getHours() < 10 ?\n      '0' + new Date().getHours()\n      :\n      new Date().getHours()}:${new Date().getMinutes() < 10 ?\n        '0' + new Date().getMinutes()\n        :\n        new Date().getMinutes()}`\n    :\n    TimeValue\n  // console.log(`TimeValue: ${TimeValue} , defaultTime: ${defaultTime}`)\n\n  const [timeValue, setTimeValue] = useState(!IsBlank ? defaultTime : '')\n\n  function onTimeChangeHandler(pTime) {\n    console.log(`--->: onTimeChangeHandler -> pTime`, pTime)\n    setTimeValue(pTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pTime !== '') newJson.TimeValue = pTime\n    else delete newJson.TimeValue\n    newJson.IsBlank = (pTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <TimeInput format={FormatDateTime} timeValue={timeValue} modifiers={{ AddHour }} onTimeChange={(value) => onTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Time\n","import React, { useState } from 'react'\n\nimport { format } from 'date-fns'\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateTimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function DateTimeInput(props) {\n\n  const dateFormatConverted = props.format.replace(/ddd/g, 'eee').replace('tt', 'a')\n  // console.log(`--->: DateTimeInput -> dateFormatConverted`, dateFormatConverted)\n\n  const dateTimeValue = props.dateTimeValue\n  // console.log(`--->: DateTimeInput -> dateTimeValue: `, dateTimeValue)\n\n  let dateValue = (dateTimeValue !== '') ? `${format(new Date(dateTimeValue), 'yyyy-MM-dd')}` : format(new Date(), 'yyyy-MM-dd')\n  let timeValue = (dateTimeValue !== '') ? `${new Date(dateTimeValue).toLocaleTimeString()}` : new Date().toLocaleTimeString()\n\n  function onDateChangeHandler(pEvent) {\n    // console.log('onDateChangeHandler pEvent.target.value: ', pEvent.target.value, timeValue)\n    dateValue = pEvent.target.value\n    props.onDateTimeChange(pEvent.target.value + ' ' + timeValue)\n  }\n  function onTimeChangeHandler(pEvent) {\n    // console.log('onTimeChangeHandler pEvent.target.value', dateValue, pEvent.target.value)\n    timeValue = pEvent.target.value\n    props.onDateTimeChange(dateValue + ' ' + pEvent.target.value)\n  }\n\n  function onClearHandler() {\n    dateValue = ''\n    timeValue = ''\n    props.onDateTimeChange('')\n  }\n\n  const dateTimeStringValue = (dateTimeValue !== '') ? format(new Date(dateTimeValue), dateFormatConverted) : ''\n\n  return (\n    <div className={styles.dateTimeContainer}>\n      <div>\n        <input type=\"date\" className={styles.datePicker} name=\"\" id=\"\" onChange={onDateChangeHandler} />\n        <input type=\"time\" className={styles.timePicker} name=\"\" id=\"\" onChange={onTimeChangeHandler} />\n      </div>\n      {dateTimeStringValue}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport DateTimeInput from '../../components/DateTimeInput'\n\nimport { getCurrentDate, getDateObjFromDateString } from '../../app/utilities'\n\nfunction DateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd hh:mm tt', IsBlank = false, IsVisible = true, DateTimeValue } = json\n\n  const defaultDateTime = (DateTimeValue === '' || DateTimeValue === undefined) ?\n    `${getCurrentDate().toDateString() + ' ' + getCurrentDate().toLocaleTimeString()}`\n    :\n    DateTimeValue\n\n  const [dateTimeValue, setDateTimeValue] = useState(!IsBlank ? defaultDateTime : '')\n  // const dateTimeValue = (typeof DateTimeValue === 'string' && DateTimeValue !== '') ? getDateObjFromDateString(DateTimeValue) : DateTimeValue\n  // console.log(`--->: DateTime -> dateTimeValue: `, dateTimeValue)\n\n\n  function onDateTimeChangeHandler(pDateTime) {\n    // console.log('---> onDateTimeChangeHandler: ', pDateTime)\n\n    setDateTimeValue(pDateTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDateTime !== '') newJson.DateTimeValue = pDateTime\n    else delete newJson.DateTimeValue\n    newJson.IsBlank = (pDateTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          DateTime<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateTimeInput format={FormatDateTime} dateTimeValue={dateTimeValue} onDateTimeChange={(value) => onDateTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default DateTime\n","import React from 'react'\n\nfunction TimeLabel() {\n  return (\n    <div>\n      TimeLabel\n    </div>\n  )\n}\n\nexport default TimeLabel\n","import React from 'react'\n\nfunction DateLabel() {\n  return (\n    <div>\n      DateLabel\n    </div>\n  )\n}\n\nexport default DateLabel\n","import React, { useState } from 'react'\n\nfunction ButtonAddSignature(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddSignature<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddSignature\n","import React from 'react'\n\nfunction RegisterSignatures() {\n  return (\n    <div>\n      RegisterSignatures\n    </div>\n  )\n}\n\nexport default RegisterSignatures\n","import React from 'react'\n\nfunction SearchableListEntryDialogSMS() {\n  return (\n    <div>\n      SearchableListEntryDialogSMS\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogSMS\n","import React, { useState } from 'react'\n\nfunction ButtonAddSMS(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddSMS<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddSMS","import React from 'react'\n\nfunction SearchableSMSListView() {\n  return (\n    <div>\n      SearchableSMSListView\n    </div>\n  )\n}\n\nexport default SearchableSMSListView\n","import React from 'react'\n\nfunction SearchableListEntryDialogEmail() {\n  return (\n    <div>\n      SearchableListEntryDialogEmail\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogEmail\n","import React, { useState } from 'react'\n\nfunction ButtonAddEmail(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddEmail<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddEmail\n","import React from 'react'\n\nfunction SearchableEmailListView() {\n  return (\n    <div>\n      SearchableEmailListView\n    </div>\n  )\n}\n\nexport default SearchableEmailListView\n","import React from 'react'\n\nfunction MatrixButton() {\n  return (\n    <div>\n      MatrixButton\n    </div>\n  )\n}\n\nexport default MatrixButton\n","import React from 'react'\n\nfunction DocumentSummaryGrid() {\n  return (\n    <div>\n      DocumentSummaryGrid\n    </div>\n  )\n}\n\nexport default DocumentSummaryGrid\n","import React, { useState } from 'react'\n\nimport  { useSelector, useDispatch } from 'react-redux'\nimport { setDocumentStatus } from '../../features/json/jsonSlice'\n\n\nfunction ButtonSubmitRegister(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch()\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onSubmitToRegisterHandler(pEvent) {\n    // console.log('onSubmitToRegisterHandler: ', pEvent )\n    dispatch(setDocumentStatus('tosend'))\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitRegister<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={onSubmitToRegisterHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitRegister\n","import React, { useState } from 'react'\n\nfunction ButtonCloseout(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonCloseout<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonCloseout\n","import React, { useState } from 'react'\n\nfunction ButtonViewDocument(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonViewDocument<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonViewDocument\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus\n} from './jsonSlice'\n\nimport {\n  selectDisplayedControls,\n  selectDebugMode,\n  selectErrorMsg,\n} from '../display/displaySlice'\n\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\nimport styles from './JsonReader.module.scss'\n\nexport default function JsonReader() {\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n  const json = useSelector(selectJson)\n  const debugMode = useSelector(selectDebugMode)\n  const errorMsg = useSelector(selectErrorMsg)\n  const displayedControls = useSelector(selectDisplayedControls)\n  const documentStatus = useSelector(selectDocumentStatus)\n  const dispatch = useDispatch()\n\n  const activeSectionId = useSelector(state => state.tabulation.value)\n  const currentJsonToEdit = (json.Sections !== undefined) ? json.Sections[activeSectionId] : {}\n\n  const { Title, Elements } = currentJsonToEdit\n\n  const [controls, setControls] = useState([])\n\n  useEffect(() => {\n    // console.log('Section Updated! ',Elements)\n\n    if (Elements !== undefined) {\n      const controlsFromElements = Elements.map((element, index) => {\n        const componentName = getControlName(element.Type)\n        // console.log(`--->componentName: `, componentName)\n        let controlComponent\n        if (components[componentName] !== undefined) {\n          const Component = components[componentName]\n          controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n        }\n        return controlComponent\n      })\n      setControls(controlsFromElements)\n    }\n    else setControls('')\n  }, [Elements])\n\n  useEffect(() => {\n    // console.log('displayedControls updated... ', displayedControls)\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n\n    if (json.Sections !== undefined) {\n      json.Sections[activeSectionId].Elements.forEach(control => {\n        // console.log(`--->: JsonReader -> control`, control.Id)\n        const controlPath = getControlPathById(control.Id)\n        // console.log(`--->: JsonReader -> controlPath`, controlPath)\n        if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n          jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n          console.log('---> reset control visibility ', control.Id, control.isVisible)\n        }\n      })\n    }\n\n\n    displayedControls.forEach(id => {\n      const controlPath = getControlPathById(id)\n      jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = true\n      // console.log('---> ', jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index])\n    })\n    dispatch(setJson(jsonToUpdate))\n  }, [displayedControls])\n\n  useEffect(() => {\n    // console.log('json.Sections: ', json.Sections)\n  }, [json.Sections])\n\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  // function getControlName(pControlType) {\n  //   return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n  // }\n\n  function getControlPathById(pControlId) {\n    // console.log(`--->: getControlPathById -> pControlId`, pControlId)\n    const currentSection = json.Sections[activeSectionId]\n    let foundItem = {}\n    let itemPath = {}\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.Id === pControlId) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                itemPath = { section: activeSectionId, index, subindex, subsubindex }\n                foundItem = subsubitem\n              }\n            })\n          }\n\n          if (subitem.Id === pControlId) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            itemPath = { section: activeSectionId, index, subindex }\n            foundItem = subitem\n          }\n        })\n      }\n\n      if (item.Id === pControlId) {\n        // console.log('---> Trouvé item: ', item)\n        itemPath = { section: activeSectionId, index }\n        foundItem = json.Sections[activeSectionId].Elements[index]\n      }\n    })\n    // console.log('-- itemPath -> ', itemPath)\n    // return foundItem\n    return itemPath\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log('updating... ', documentStatus)\n    if (documentStatus === '') dispatch(setDocumentStatus('modified'))\n\n    const controlPath = getControlPathById(pJson.Id)\n    // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // ONLY FIST SUBLEVEL\n    jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    dispatch(setJson(jsonToUpdate))\n  }\n\n  return (\n    <div className=\"board\">\n\n      <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div>\n\n      {controls}\n\n      <textarea\n        name=\"jsonviewer\"\n        id=\"jsonviewer\"\n        className={debugMode ? `${styles.fixed}` : 'hidden'}\n        // className={styles.fixed}\n        rows=\"30\"\n        value={JSON.stringify(Elements)}\n        onChange={e => dispatch(setJson(JSON.parse(e.target.value)))}>\n      </textarea>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  selectedTabulation,\n  callSection,\n  prevSection,\n  nextSection,\n} from '../features/tabulation/tabulationSlice';\nimport { selectJson } from '../features/json/jsonSlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepBackward, faStepForward, faFastBackward, faFastForward } from '@fortawesome/free-solid-svg-icons'\nimport styles from './Tabulation.module.scss';\n\nfunction Tabulation() {\n\n  const dispatch = useDispatch()\n\n  const tabIndex = useSelector(selectedTabulation)\n  const json = useSelector(selectJson)\n\n  // const tabs = (json.Sections) ? json.Sections.map((item, index) => <div key={index}>{item.Title}</div>) : ''\n  const tabLength = (json.Sections) ? json.Sections.length : 0\n  const tabTitle = (json.Sections) ? json.Sections[tabIndex].Title : ''\n\n  // React.useEffect(() => {\n  //   console.log('TabulationUpdated! : ',json);\n  // })\n\n  function onFirstSectionHandler(e) {\n    dispatch(callSection(0))\n  }\n  function onPrevSectionHandler(e) {\n    if (tabIndex > 0) dispatch(prevSection())\n  }\n  function onNextSectionHandler(e) {\n    if (tabIndex < tabLength - 1) dispatch(nextSection())\n  }\n  function onLastSectionHandler(e) {\n    dispatch(callSection(tabLength - 1))\n  }\n\n  return (\n    <nav className={styles.row}>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onFirstSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastBackward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onPrevSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepBackward} />\n      </button>\n      <div className={styles.title}>\n        <h2>{tabTitle}</h2>\n      </div>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onNextSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepForward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onLastSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastForward} />\n      </button>\n    </nav>\n  )\n}\n\nexport default Tabulation\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setErrorMsg,\n  clearErrorMsg\n} from '../features/display/displaySlice'\n\nimport { normalizeJson, getElementFromElementId, getDocumentExport } from '../app/utilities'\n\nfunction ApiInterface() {\n\n  const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  const apiURL = 'https://api-uat.extrack.com/'\n\n  const [token, setToken] = useState({})\n  const [user, setUser] = useState({})\n  const [projects, setProjects] = useState([])\n  const [templates, setTemplates] = useState([])\n  const [documents, setDocuments] = useState([])\n  const [selectedProjectId, setSelectedProjectID] = useState({})\n  const [selectedTemplateId, setSelectedTemplateID] = useState({})\n  const [selectedTemplate, setSelectedTemplate] = useState({})\n  const [selectedDocument, setSelectedDocument] = useState({})\n\n  const [isFetchingTemplates, setIsFetchingTemplates] = useState(false)\n  const [isFetchingDocuments, setIsFetchingDocuments] = useState()\n  const [loadingAnim, setLoadingAnim] = useState('')\n\n  // const [errorMsg, setErrorMsg] = useState('')\n\n  const username = 'red.marble'\n  const password = 'Welcome01!'\n  const member = 'downer'\n\n\n  // useEffect(() => {\n  //   console.log('---> user set: ', user)\n  // }, [user])\n\n  useEffect(() => {\n    if (documentStatus === 'tosend') {\n      // console.log(`---> Sending document: ${JSON.stringify(getDocumentExport())} for project: ${selectedProjectId} and template: ${selectedTemplateId}`)\n\n      let metadata = JSON.stringify([getDocumentExport()])\n      console.log(`----> metadata`, metadata)\n\n\n      const headers = new Headers()\n      // headers.append(\"Content-Type\", \"application/json\")\n      headers.append(\"Authorization\", `Bearer ${token.access_token}`)\n\n      // JSON.stringify triple metadata backslashes\n      const documentBody = JSON.stringify({\n        \"ID\": 0,\n        \"ProjectID\": selectedProjectId,\n        \"Description\": \"\",\n        \"Title\": \"Test-NewDoc\",\n        \"DocumentTypeId\": 1088,\n        \"DocumentFormTemplateID\": selectedTemplateId,\n        \"UserRevisionNumber\": \"0\",\n        \"UserRevisionDate\": \"2020-09-25\",\n        \"MetaData\": metadata,\n        \"OpenClosedStatus\": \"O\",\n        \"CreatedByContactID\": 1059,\n        \"CreatedByCompanyID\": 1009\n      })\n\n      const documentBodyString = JSON.stringify(documentBody)\n\n      let formdata = new FormData()\n      formdata.append(\"Document\", documentBody)\n\n\n      console.log(`--->: sendind with body ------>  :   `, documentBodyString)\n\n\n      const requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: formdata\n        // body: JSON.stringify(requestBody)\n        // body: JSON.stringify({\n        //   \"ID\": 0,\n        //   \"ProjectID\": 1249,\n        //   \"Description\": \"\",\n        //   \"Title\": \"Test-NewDoc\",\n        //   \"DocumentTypeId\": 1088,\n        //   \"DocumentFormTemplateID\": 25,\n        //   \"UserRevisionNumber\": \"0\",\n        //   \"UserRevisionDate\": \"2020-09-10\",\n        //   \"MetaData\": \"[{\\\"Elements\\\":[{\\\"Type\\\":\\\"Trilean\\\",\\\"Value\\\":\\\"N\\\",\\\"Id\\\":\\\"S032\\\",\\\"CommentValue\\\":\\\"TrileanCommentvaluefromdocument\\\"}]}]\",\n        //   \"OpenClosedStatus\": \"O\",\n        //   \"CreatedByContactID\": 1059,\n        //   \"CreatedByCompanyID\": 1009\n        // })\n      }\n\n      fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/Template/${selectedTemplateId}/Create`, requestOptions)\n        .then(res => res.text())\n        .then(result => console.log('response: ', result))\n        .catch(error => console.log('error', error))\n\n\n\n\n    }\n    // dispatch(setDocumentStatus('sent'))\n  }, [documentStatus])\n\n  useEffect(() => {\n    // console.log('---> template set: ', selectedTemplate)\n    if (selectedTemplate.Config !== undefined) {\n      const configJson = selectedTemplate.Config\n      // console.log(`------------------>: configJson: `, configJson)\n      // const configJsonNormalized = normalizeJson(configJson)\n\n      localStorage.setItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n      dispatch(setJson(normalizeJson(JSON.parse(configJson))))\n      // console.log('-=--> ', normalizeJson(configJson))\n\n    }\n    // dispatch(setJson(decodeURI()))\n  }, [selectedTemplate])\n\n  // useEffect(() => {\n  //   if (selectedDocument.MetaData !== undefined) {\n  //     const metaDataJson = selectedDocument.MetaData\n  //     console.log('-=--> ', JSON.parse(metaDataJson))\n  //   }\n  //   dispatch(setJson(decodeURI()))\n  // }, [selectedDocument])\n\n\n  const getTokenHandler = () => {\n    const headers = new Headers()\n    headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    let urlencoded = new URLSearchParams()\n    urlencoded.append(\"username\", username)\n    urlencoded.append(\"password\", password)\n    urlencoded.append(\"MemberCode\", member)\n    urlencoded.append(\"grant_type\", \"password\")\n    urlencoded.append(\"timezone\", \"Australia/Sydney\")\n    // console.log('params: ', urlencoded.toString())\n\n    fetch(`${apiURL}oAuth/Token`, {\n      method: 'POST',\n      headers: headers,\n      body: urlencoded\n    })\n      .then(res => res.text())\n      .then(result => {\n        const receivedToken = JSON.parse(result)\n        // console.log('receivedToken: ', receivedToken)\n        getUser(receivedToken.access_token)\n        setToken(receivedToken)\n        localStorage.setItem('dynFormToken', JSON.stringify(receivedToken))\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  const getUser = (pToken) => {\n    const userHeaders = new Headers()\n    userHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n\n    const requestOptions = {\n      method: 'GET',\n      headers: userHeaders\n    }\n\n    fetch(`${apiURL}V1.0/User`, requestOptions)\n      .then(response => response.text())\n      .then(result => setUser(JSON.parse(result)))\n      .catch(error => console.log('error', error))\n  }\n\n  function getProjectsHandler() {\n    const projectsHeaders = new Headers()\n    projectsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    projectsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: projectsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('projects: ', JSON.parse(result))\n        setProjects(JSON.parse(result))\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  function getTemplates(pProjectID) {\n    setIsFetchingTemplates(true)\n\n    const templatesHeaders = new Headers()\n    templatesHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templatesHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templatesHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Document/Form/Templates`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('templates: ', JSON.parse(result))\n        setTemplates(JSON.parse(result))\n        setIsFetchingTemplates(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  function getTemplateById(pTemplateID) {\n    const currentTemplate = templates.filter((template) => template.Id === pTemplateID)\n    // console.log(`--->: template: `, JSON.parse(currentTemplate[0].Config))\n    return JSON.parse(currentTemplate[0].Config)\n  }\n\n  function getDocuments(pProjectID) {\n    setIsFetchingDocuments(true)\n\n    const documentsHeaders = new Headers()\n    documentsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    documentsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: documentsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Documents?offset=0&limit=40&orderBy=Id desc`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(' ====> doucments: ', JSON.parse(result))\n        setDocuments(JSON.parse(result))\n        setIsFetchingDocuments(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  function selectProjectHandler(pEvent) {\n    if (pEvent.target.selectedIndex !== 0) {\n      const projectID = projects[pEvent.target.selectedIndex - 1].Id\n      // console.log(`--->: selectProjectHandler -> projectID`, projectID)\n\n      setSelectedProjectID(projectID)\n      getTemplates(projectID)\n      getDocuments(projectID)\n    }\n    else setTemplates([])\n\n  }\n\n  function selectTemplateHandler(pEvent) {\n    document.getElementById('documents').selectedIndex = 0\n    dispatch(clearErrorMsg())\n    // console.log('---> ', templates[pEvent.target.selectedIndex - 1])\n    // normalizeJson(templates[pEvent.target.selectedIndex])\n    // const templateJson = templates[pEvent.target.selectedIndex].Config\n    if (pEvent.target.selectedIndex !== 0) {\n      dispatch(callSection(0))\n      setSelectedTemplate(templates[pEvent.target.selectedIndex - 1])\n      setSelectedTemplateID(templates[pEvent.target.selectedIndex - 1].Id)\n    }\n  }\n\n  function selectDocumentHandler(pEvent) {\n    document.getElementById('templates').selectedIndex = 0\n    dispatch(clearErrorMsg())\n    // console.log('---> Document: ', documents[pEvent.target.selectedIndex - 1])\n    // normalizeJson(templates[pEvent.target.selectedIndex])\n    // const templateJson = templates[pEvent.target.selectedIndex].Config\n    if (pEvent.target.selectedIndex !== 0) {\n      // dispatch(callSection(0))\n      const document = documents[pEvent.target.selectedIndex - 1]\n      setSelectedDocument(document)\n      // setSelectedTemplate(templates[pEvent.target.selectedIndex - 1])\n\n      const template = getTemplateById(document.DocumentFormTemplateId)\n      aggregateJson(template, JSON.parse(document.MetaData)[0])\n      // console.log('--__-> Need template: ', document.DocumentFormTemplateId)\n\n    }\n    // setSelectedProjectID(projects[pEvent.target.selectedIndex - 1].Id)\n  }\n\n  function aggregateJson(pTemplate, pDocument) {\n    const templateToUpdate = normalizeJson(pTemplate)\n    // console.log(pTemplate, templateToUpdate, pDocument)\n    console.log('templateToUpdate :', templateToUpdate, ' on document: ', pDocument)\n\n    pDocument.Elements.forEach(item => {\n      const itemPath = getElementFromElementId(pTemplate, item.Id)\n      console.log(`--->: aggregateJson -> itemPath`, itemPath)\n\n\n      if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n      if (itemPath.length === 0) return\n      const firstFoundedPath = itemPath[0]\n      console.log('item value: ', item, ' to update: ', firstFoundedPath)\n\n      switch (itemPath[0].length) {\n        case 2:\n          const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n          templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]] = { ...templateValues, ...item }\n          // console.log('---> valuesToInsert', templateValues)\n          break\n        case 3:\n          console.log('---> two levels')\n          break\n        case 4:\n          console.log('---> three levels')\n          break\n        default:\n          break\n      }\n    })\n    console.log('Json updated: ', templateToUpdate)\n    dispatch(setJson(templateToUpdate))\n  }\n\n\n\n  const projectsList = projects.map((project, index) => <option value={project.Id} key={index}>{project.Abbr}</option>)\n  const templatesList = templates.map((template, index) => <option value={template.Id} key={index}>{template.Title1}</option>)\n  const documentsList = documents.map((document, index) => <option value={document.Id} key={index}>{document.DocumentNumber}</option>)\n\n\n  useEffect(() => {\n    let trail = ''\n    setInterval(() => {\n      trail = (trail.length > 3) ? '' : trail\n      trail += '.'\n      setLoadingAnim(trail)\n    }\n      , 200)\n  }, [])\n\n\n\n  const fetchingTemplates = isFetchingTemplates ? <div className=\"spinner\">Fetching Templates{loadingAnim}</div> : ''\n  const fetchingDocuments = isFetchingDocuments ? <div className=\"spinner\">Fetching Documents{loadingAnim}</div> : ''\n  return (\n    <div className=\"bloc\">\n      <button className={`btn btn-ternary ${user.NameFirst ? 'hidden' : ''}`} onClick={getTokenHandler}>LOGIN</button>\n      <button className={`btn btn-ternary ${user.NameFirst === undefined || projectsList.length > 0 ? 'hidden' : ''}`} onClick={getProjectsHandler}>GET PROJECTS</button>\n\n      <div className={`bloc-menu ${projects.length > 0 ? '' : 'hidden'}`}>\n        <label htmlFor=\"projects\">SELECT Project</label>\n        <select name=\"projects\" id=\"projects\" onChange={selectProjectHandler}>\n          <option value=\"-1\">-----</option>\n          {projectsList}</select>\n      </div>\n\n      {fetchingTemplates}\n      <div className={`${templates.length > 0 ? '' : 'hidden'} bloc-menu bloc-menu__separator`}>\n        <label htmlFor=\"templates\">SELECT Template</label>\n        <select name=\"templates\" id=\"templates\" onChange={selectTemplateHandler}>\n          <option value=\"\">-----</option>\n          {templatesList}</select>\n      </div>\n\n      <div className='bloc-spacer'>\n        <span className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          OR\n        </span>\n      </div>\n\n\n      {fetchingDocuments}\n      <div className={`${documents.length > 0 ? '' : 'hidden'} bloc-menu`}>\n        <label htmlFor=\"documents\">SELECT Document</label>\n        <select name=\"documents\" id=\"documents\" onChange={selectDocumentHandler}>\n          <option value=\"\">-----</option>\n          {documentsList}</select>\n      </div>\n\n      {/* <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div> */}\n    </div>\n  )\n}\n\nexport default ApiInterface","import React from 'react'\r\n\r\n\r\nimport JsonOptions from './components/JsonOptions'\r\nimport JsonReader from './features/json/JsonReader'\r\nimport Tabulation from './components/Tabulation'\r\nimport ApiInterface from './components/ApiInterface'\r\n\r\n\r\nimport './App.scss'\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <h1>\r\n          DYNAMIC FORM\r\n        </h1>\r\n        <ApiInterface />\r\n      </header>\r\n      <div className=\"options-container\">\r\n        <JsonOptions />\r\n      </div>\r\n      <Tabulation />\r\n      <main>\r\n        <JsonReader />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport jsonReducer from '../features/json/jsonSlice';\r\nimport tabulationReducer from '../features/tabulation/tabulationSlice';\r\nimport displayReducer from '../features/display/displaySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    json: jsonReducer,\r\n    tabulation: tabulationReducer,\r\n    display: displayReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\n\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}