{"version":3,"sources":["components/SelectSearchable.module.scss","components/Modal.module.scss","components/Login.module.scss","components/DateTimeInput.module.scss","components/DateInput.module.scss","components/TimeInput.module.scss","components/Figure.module.scss","components/Tabulation.module.scss","features/json/JsonReader.module.scss","features/json/jsonSlice.js","features/tabulation/tabulationSlice.js","features/display/displaySlice.js","components/JsonOptions.js","components/controls/DocumentTableOfContents.js","components/controls/ListMulticontrol.js","components/controls/Label.js","components/Modal.js","components/controls/Text.js","app/utilities.js","components/controls/Repeatable.js","components/controls/ButtonSubmitPurchase.js","components/controls/ButtonAddDocketNumber.js","components/controls/API.js","components/DateInput.js","components/controls/Date.js","components/Figure.js","components/controls/Image.js","components/controls/ImageSingle.js","components/controls/ButtonAddReportDate.js","components/controls/QRScanner.js","components/controls/QRScannerList.js","components/controls/Signature.js","components/controls/SignatureDateTime.js","components/controls/SignatureDate.js","components/controls/Matrix.js","components/controls/Checkbox.js","components/controls/Boolean.js","components/controls/Trilean.js","components/controls/TrileanLabel.js","components/controls/ListSingle.js","components/controls/ListMultiple.js","components/TimeInput.js","components/controls/Time.js","components/DateTimeInput.js","components/controls/DateTime.js","components/controls/TimeLabel.js","components/controls/DateLabel.js","components/controls/ButtonAddSignature.js","components/controls/RegisterSignatures.js","components/controls/SearchableListEntryDialogSMS.js","components/controls/ButtonAddSMS.js","components/controls/SearchableSMSListView.js","components/controls/SearchableListEntryDialogEmail.js","components/controls/ButtonAddEmail.js","components/controls/SearchableEmailListView.js","components/controls/MatrixButton.js","components/controls/DocumentSummaryGrid.js","components/controls/ButtonSubmitRegister.js","components/controls/ButtonCloseout.js","components/controls/ButtonViewDocument.js","features/json/JsonReader.js","components/Tabulation.js","components/Login.js","components/SelectSearchable.js","components/ApiInterface.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","jsonSlice","createSlice","name","initialState","value","JSON","parse","localStorage","getItem","documentStatus","repeaterValue","reducers","setJson","state","action","payload","setItem","stringify","setDocumentStatus","setRepeaterValue","actions","selectJson","json","selectDocumentStatus","selectRepeaterValue","tabulationSlice","callSection","prevSection","nextSection","selectedTabulation","tabulation","displaySlice","debugMode","errorMsg","setControls","setDebugMode","setOpenListId","openListId","setErrorMsg","clearErrorMsg","selectOptionedControls","display","selectDebugMode","selectOpenListId","selectErrorMsg","JsonOptions","dispatch","useDispatch","useSelector","loadedJSON","id","className","onClick","pEvent","icon","faRedo","style","transform","marginLeft","faTrash","htmlFor","type","checked","onChange","target","DocumentTableOfContents","props","sections","Sections","length","map","element","index","Elements","Type","key","Title","faChevronRight","ListMulticontrol","controlJson","Id","Data","IsVisible","options","option","cols","rows","disabled","selectedIndex","Number","visibleControls","undefined","OptionedControls","Controls","hiddenControls","forEach","controlId","push","Label","FontAttributes","FontSize","Margin","HasUnderLine","fontSize","fontWeight","fontStyle","borderBottom","padding","Modal","visibility","toggleVisibility","message","css","backdrop","springBackdropProps","useSpring","opacity","from","zIndex","config","gentle","springModalProps","top","stiff","backdropStyle","backgroundColor","div","styles","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","faTimes","modalHeader","faExclamationTriangle","modalContent","modalFooter","modalBtn","Text","IsEnabled","Value","Format","Warning","WarningMessage","Mandatory","ValidationMessage","useState","isModalVisible","setIsModalVisible","bgColor","modalOptions","setModalOptions","emailAddressTester","phoneNumberRestrictCodes","onChangeHandler","newJson","updateJson","onBlurHandler","focus","Keyboard","test","toLowerCase","useEffect","textfield","Lines","min","Min","max","Max","size","Decimal","maxLength","onKeyDown","includes","keyCode","preventDefault","VarChar","onBlur","warningMarker","mandatoryMarker","getControlName","pControlType","split","part","toUpperCase","slice","join","getElementFromElementId","pJson","pElementID","currentJson","normalizeJson","foundPath","section","sectionIndex","item","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","getCurrentDate","pDate","Date","now","camelcaseKeys","deep","pascalCase","exportMetaData","addToDocumentExport","pValue","controlIndex","findIndex","console","log","prevValue","table","Repeatable","components","ButtonSubmitPurchase","ButtonAddDocketNumber","API","Image","ImageSingle","ButtonAddReportDate","QRScanner","QRScannerList","Signature","SignatureDateTime","SignatureDate","Matrix","Checkbox","Boolean","Trilean","TrileanLabel","ListSingle","ListMultiple","Time","DateTime","TimeLabel","DateLabel","ButtonAddSignature","RegisterSignatures","SearchableListEntryDialogSMS","ButtonAddSMS","SearchableSMSListView","SearchableListEntryDialogEmail","ButtonAddEmail","SearchableEmailListView","MatrixButton","DocumentSummaryGrid","ButtonSubmitRegister","ButtonCloseout","ButtonViewDocument","children","repeaterIndex","controls","control","repeaterControl","componentName","Component","pRepeaterIndex","repeaterControlIndex","newRepeaterValues","updateJsonHandler","e","pIndex","filter","faPlusSquare","Api","IncludePhoneNumber","IncludeEmail","IncludeTitle","IncludeBusinessNumber","IncludeAbbreviation","IncludeCode","targetedApi","String","collapsed","setCollapsed","keyword","setKeyword","list","setList","filteredList","setFilteredList","constructor","selectedValues","setSelectedValues","animatedListProps","height","trailPills","useTrail","marginTop","to","apiUrl","getEndpoint","token","apiHeaders","Headers","append","access_token","requestOptions","method","headers","redirect","listItemClickHandler","currentItem","updateJSON","fetch","then","response","text","result","listItems","phoneNumber","emailAddress","title","abn","abbr","code","spacer","Contact","Email","NameFirst","NameLast","Company","Name","CompanyName","Abn","Abbr","Code","catch","error","itemList","isSelected","iconCheck","faCheck","selectedPills","targetText","parentNode","innerText","faAngleDown","faAngleUp","placeholder","DateInput","dateformatConverted","format","replace","dateValue","setDateValue","dateString","addMonths","addDays","toTimeString","modifiers","AddDay","AddMonth","dateContainer","datePicker","defaultValue","onDateChange","btnClear","FormatDateTime","IsBlank","DateValue","defaultDate","toDateString","onDateChangeHandler","Figure","container","src","source","alt","btnClose","onClose","Images","onCloseHandler","images","image","faImage","figure","imageData","fileReader","FileReader","onload","readAsDataURL","files","signature","width","DateTimeValue","Columns","Rows","matrixLayout","i","j","controlComponent","substring","ElementId","gridTemplateColumns","gridTemplateRows","ShowComment","Collapsible","IsCollapsed","EntryTitle","Details","CommentValue","comment","commentText","details","entryTitle","defaultChecked","checkboxValue","booleanValue","HideNa","trileanValue","Buttons","buttons","button","computedBackground","Button","BackgroundColorSelected","BackgroundColor","Fragment","underline","SelectedValue","mass","tension","friction","newValues","TimeInput","timeformatConverted","timeValue","setTimeValue","pTime","timeString","addHours","AddHour","timeContainer","timePicker","onTimeChange","TimeValue","defaultTime","getHours","getMinutes","onTimeChangeHandler","DateTimeInput","dateFormatConverted","dateTimeValue","toLocaleTimeString","dateTimeStringValue","dateTimeContainer","onDateTimeChange","defaultDateTime","setDateTimeValue","pDateTime","onDateTimeChangeHandler","Selection","XAxisName","YAxisName","Legend","showLegend","ShowLegend","buttonClickHandler","pButtonId","buttonPath","buttonValue","LegendValuesY","Values","LegendValuesX","legendValuesX","legendValuesY","legend","JsonReader","optionedControls","activeSectionId","currentJsonToEdit","getControlPathById","pControlId","currentSection","itemPath","controlPath","jsonToUpdate","controlsFromElements","skeleton","Array","fill","fixed","Tabulation","tabIndex","tabLength","tabTitle","row","faFastBackward","faStepBackward","faStepForward","faFastForward","Login","errormsg","springloginProps","username","setUsername","password","setPassword","member","setMember","loginBackdrop","loginBackdrop_freeze","loginContainer","loginClose","loginHeader","faUser","loginContent","onFocus","clearError","loginFooter","onSubmit","SelectSearchable","input","useRef","items","allowMultiple","label","initialIsVisible","isVisible","setIsVisible","ref","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useVisible","onClickItemHandler","pItem","stopPropagation","currentTarget","onSelectItem","selectedItems","cssWidth","ListSmall","ListMedium","ListLarge","selectSearchable_Container","selectSearchable_Header","selectSearchable_SelectedContainer","selectSearchable_SelectedItem","selectedItem_delete","selectSearchable_Trigger","position","selectSearchable_List","selectSearchable_SearchContainer","selectSearchable_ItemsContainer","selectItem","selectedItem","selectSearchable_SelectedItem_Selected","ApiInterface","apiURL","setToken","user","setUser","projects","setProjects","templates","setTemplates","documents","setDocuments","selectedProject","setSelectedProject","selectedProjectId","setSelectedProjectId","setSelectedTemplate","selectedTemplateRef","setSelectedTemplateRef","selectedDocumentRef","setSelectedDocumentRef","isFetchingTemplates","setIsFetchingTemplates","isFetchingDocuments","setIsFetchingDocuments","isPopinLoginVisible","setIsPopinLoginVisible","loginErrorMsg","setLoginErrorMsg","projectId","pProjectID","templatesHeaders","getTemplates","documentsHeaders","getDocuments","getTemplateById","template","getDocumentById","DocumentFormTemplateId","pTemplate","pDocument","templateToUpdate","Config","firstFoundedPath","templateValues","RepeaterValue","aggregateJson","MetaData","metadata","documentBody","documentBodyString","formdata","FormData","body","res","getUser","pToken","userHeaders","pTemplateId","a","templateHeaders","pDocumentId","Document","templateLabel","documentLabel","Title1","urlencoded","URLSearchParams","resultJSON","error_description","projectsHeaders","getProjects","App","configureStore","reducer","jsonReducer","tabulationReducer","displayReducer","window","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,WAAa,qCAAqC,oBAAsB,8CAA8C,iBAAmB,2CAA2C,2BAA6B,qDAAqD,iCAAmC,2DAA2D,gCAAkC,0DAA0D,wBAA0B,kDAAkD,mCAAqC,6DAA6D,yBAA2B,mDAAmD,8BAAgC,wDAAwD,uCAAyC,iEAAiE,sBAAwB,gDAAgD,cAAgB,wCAAwC,UAAY,oCAAoC,WAAa,qCAAqC,UAAY,sC,mBCA9nCD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,qBAAuB,oCAAoC,eAAiB,8BAA8B,YAAc,2BAA2B,aAAe,4BAA4B,YAAc,2BAA2B,SAAW,wBAAwB,WAAa,4B,mBCAtVD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,qBAAuB,oCAAoC,eAAiB,8BAA8B,YAAc,2BAA2B,aAAe,4BAA4B,YAAc,2BAA2B,WAAa,4B,mBCAnTD,EAAOC,QAAU,CAAC,WAAa,kCAAkC,WAAa,kCAAkC,kBAAoB,yCAAyC,SAAW,kC,mBCAxLD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,cAAgB,iCAAiC,SAAW,8B,mBCAzHD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,cAAgB,iCAAiC,SAAW,8B,mBCAzHD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,SAAW,2B,mBCAnED,EAAOC,QAAU,CAAC,IAAM,wBAAwB,MAAQ,4B,mBCAxDD,EAAOC,QAAU,CAAC,MAAQ,4B,iLCCbC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CAKZC,MAAOC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,GACnDC,eAAgB,SAChBC,cAAe,IAEjBC,SAAU,CACRC,QAAS,SAACC,EAAOC,GAOfD,EAAMT,MAAQU,EAAOC,QAIrBR,aAAaS,QAAQ,OAAQX,KAAKY,UAAUH,EAAOC,WAErDG,kBAAmB,SAACL,EAAOC,GAEzBD,EAAMJ,eAAiBK,EAAOC,SAEhCI,iBAAkB,SAACN,EAAOC,GAExBD,EAAMH,cAAgBI,EAAOC,Y,EAK6Bf,EAAUoB,QAA3DR,E,EAAAA,QAASM,E,EAAAA,kBAAmBC,E,EAAAA,iBAK9BE,EAAa,SAAAR,GAAK,OAAIA,EAAMS,KAAKlB,OACjCmB,EAAuB,SAAAV,GAAK,OAAIA,EAAMS,KAAKb,gBAC3Ce,EAAsB,SAAAX,GAAK,OAAIA,EAAMS,KAAKZ,eAExCV,IAAf,QC7CayB,EAAkBxB,YAAY,CACzCC,KAAM,aACNC,aAAc,CACZC,MAAO,GAETO,SAAU,CACRe,YAAa,SAACb,EAAOC,GACnBD,EAAMT,MAAQU,EAAOC,SAEvBY,YAAa,SAAAd,GACXA,EAAMT,OAAS,GAEjBwB,YAAa,SAAAf,GACXA,EAAMT,OAAS,M,EAQfqB,EAAgBL,QAHPM,E,EAAAA,YACbC,E,EAAAA,YACAC,E,EAAAA,YAMWC,EAAqB,SAAAhB,GAAK,OAAIA,EAAMiB,WAAW1B,OAG7CqB,IAAf,QC7BaM,EAAe9B,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GACP4B,WAAW,EACXC,SAAU,IAEZtB,SAAU,CACRuB,YAAa,SAACrB,EAAOC,GACnBD,EAAMT,MAAQU,EAAOC,SAEvBoB,aAAc,SAACtB,EAAOC,GACpBD,EAAMmB,UAAYlB,EAAOC,SAE3BqB,cAAe,SAACvB,EAAOC,GACrBD,EAAMwB,WAAavB,EAAOC,SAE5BuB,YAAa,SAACzB,EAAOC,GACnBD,EAAMoB,SAAWnB,EAAOC,SAG1BwB,cAAe,SAAA1B,GACbA,EAAMoB,SAAW,O,EAKiEF,EAAaX,QAAtFc,E,EAAAA,YAAaC,E,EAAAA,aAAcC,E,EAAAA,cAAeE,E,EAAAA,YAE5CE,G,EAFyDD,cAEhC,SAAA1B,GAAK,OAAIA,EAAM4B,QAAQrC,QAChDsC,EAAkB,SAAA7B,GAAK,OAAIA,EAAM4B,QAAQT,WACzCW,EAAmB,SAAA9B,GAAK,OAAIA,EAAM4B,QAAQJ,YAC1CO,EAAiB,SAAA/B,GAAK,OAAIA,EAAM4B,QAAQR,UAEtCF,IAAf,Q,cCnBe,SAASc,IAEtB,IAAMC,EAAWC,cACXf,EAAYgB,YAAYN,GAExBjC,EAAiBuC,YAAYzB,GAE/B0B,EAAa5C,KAAKC,MAAMC,aAAaC,QAAQ,iBAAmB,GAyCpE,OACE,yBAAK0C,GAAG,cAAcC,UAAS,UAAyB,aAAnB1C,EAAiC,kBAAoB,mBAExF,4BAAQ0C,UAAU,sCAAsCC,QA1C5D,SAAmCC,GACjCP,EAASpB,EAAY,IACrBoB,EAASlC,EAAQqC,MAyCb,kBAAC,IAAD,CAAiBK,KAAMC,IAAQC,MAAO,CAAEC,UAAW,aAAcC,WAAY,KAD/E,kBAIA,4BAAQP,UAAU,sCAAsCC,QAzC5D,SAAmCC,GACjCP,EAASlC,EAAQ,OAyCb,kBAAC,IAAD,CAAiB0C,KAAMK,IAASH,MAAO,CAAEE,WAAY,KADvD,kBAKA,yBAAKP,UAAU,SACb,2BAAOS,QAAQ,SAAf,SACA,2BAAOC,KAAK,WAAW3D,KAAK,QAAQgD,GAAG,QAAQC,UAAU,cAAcW,QAAS9B,EAAW+B,SA1DpE,SAACV,GAAD,OAAYP,EAASX,EAAakB,EAAOW,OAAOF,e,WCqBhEG,MA9Bf,SAAiCC,GAC/B,IAAM5C,EAAO0B,YAAY3B,GACnByB,EAAWC,cASXoB,EAAW7C,EAAK8C,UAAY9C,EAAK8C,SAASC,OAAS,EAAI/C,EAAK8C,SAASE,KAAI,SAACC,EAASC,GACvF,MAAiC,6BAA7BD,EAAQE,SAAS,GAAGC,KAA4C,KAElE,wBAAIC,IAAKH,GACP,4BAAQrB,UAAU,kDAAkDC,QAAS,WAPjFN,EAASpB,EAOkG8C,MACpGD,EAAQK,MACT,kBAAC,IAAD,CAAiBtB,KAAMuB,WAI1B,GAEL,OACE,wBAAI1B,UAAU,YACXgB,ICwCQW,MApEf,SAA0BZ,GAExB,IAAM5C,EAAO4C,EAAMa,YAEXL,EAA4CpD,EAA5CoD,KAAME,EAAsCtD,EAAtCsD,MAAOI,EAA+B1D,EAA/B0D,GAAIC,EAA2B3D,EAA3B2D,KAJM,EAIqB3D,EAArB4D,iBAJA,SAMzBlD,EAAYgB,YAAYN,GACxBI,EAAWC,cAsCXoC,EAAUF,EAAKX,KAAI,SAACc,EAAQZ,GAAT,OAAmB,4BAAQG,IAAKH,EAAOpE,MAAOoE,GAAQY,MAE/E,OACEF,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,2BAAOS,QAAQ,oBAAoBgB,GACnC,4BAAQ1E,KAAK,mBAAmBgD,GAAG,mBAAmBa,SA/C9D,SAAyBV,GACvB,IAAMmC,EAAgBC,OAAOpC,EAAOW,OAAO5D,OAE3C,GAAIoF,GAAiB,EAAG,CACtB,IAAME,OAAoEC,IAAlDrE,EAAKsE,iBAAiBJ,GAAeK,SAAyBvE,EAAKsE,iBAAiBJ,GAAeK,SAAW,GAChIC,EAAiB,GAEvBxE,EAAKsE,iBAAiBG,SAAQ,SAACX,EAAQZ,QAGbmB,IAApBP,EAAOS,UAA0BrB,IAAUgB,GAC7CJ,EAAOS,SAASE,SAAQ,SAAAC,GAAS,OAAIF,EAAeG,KAAKD,SAQ7DlD,EAASZ,EAAY,CAAE4D,iBAAgBJ,wBA6BjC,4BAAQtF,MAAM,MAAd,SACC+E,KAKP,IChCSe,MAlCf,SAAehC,GAEb,IAAM5C,EAAO4C,EAAMa,YACXL,EAAuGpD,EAAvGoD,KAAME,EAAiGtD,EAAjGsD,MAAOI,EAA0F1D,EAA1F0D,GAHD,EAG2F1D,EAAtF4D,iBAHL,SAGuBiB,EAAoE7E,EAApE6E,eAHvB,EAG2F7E,EAApD8E,gBAHvC,MAGkD,GAHlD,IAG2F9E,EAArC+E,cAHtD,MAG+D,EAH/D,IAG2F/E,EAAzBgF,oBAHlE,SAKdtE,EAAYgB,YAAYN,GAE9B,OACEwC,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WAEb,yBAAKA,UAAU,UAAUK,MAAO,CAC9B+C,SAAUH,EAAW,EAAI,KACzBI,WAA+B,SAAnBL,EAA4B,OAAS,GACjDM,UAA8B,WAAnBN,EAA8B,SAAW,GACpDO,aAAcJ,EAAe,kBAAoB,GACjDK,QAASN,EAASA,EAAS,KAAO,KAChCzB,KAMR,I,wBC3BS,SAASgC,EAAM1C,GAAQ,IAE5B2C,EAAyD3C,EAAzD2C,WAAYC,EAA6C5C,EAA7C4C,iBAAkBC,EAA2B7C,EAA3B6C,QAASC,EAAkB9C,EAAlB8C,IAAKC,EAAa/C,EAAb+C,SAC9CC,EAAsBC,YAC1B,CACEC,QAASP,EAAa,EAAI,EAC1BQ,KAAM,CAAED,QAAS,EAAGE,OAAQ,IAC5BC,OAAQA,IAAOC,SAGbC,EAAmBN,YACvB,CACEC,QAASP,EAAa,EAAI,EAC1Ba,IAAKb,EAAa,GAAK,GACvBQ,KAAM,CAAED,QAAS,GACjBG,OAAQA,IAAOI,QAQnB,IAAMC,EAAgBX,EAAW,CAAEY,gBAAiBZ,GAAa,GAEjE,OACE,kBAAC,IAASa,IAAV,CAActE,MAAO0D,GACnB,yBACEhE,GAAG,WACHC,UAAS,UAAK4E,IAAOC,cAAZ,YAA6BnB,EAAa,GAAKkB,IAAOE,sBAC/D7E,QAXN,SAAgCC,GACL,aAArBA,EAAOW,OAAOd,IAAmB4D,KAWjCtD,MAAOoE,GACP,kBAAC,IAASE,IAAV,CAActE,MAAOiE,GACnB,yBACEtE,UAAW4E,IAAOG,eAClB1E,MAAOwD,GACP,yBAAK7D,UAAW4E,IAAOI,WAAY/E,QAAS0D,GAC1C,kBAAC,IAAD,CAAiBxD,KAAM8E,OAEzB,yBAAKjF,UAAW4E,IAAOM,aACrB,kBAAC,IAAD,CAAiB/E,KAAMgF,OAEzB,yBAAKnF,UAAW4E,IAAOQ,cACpBxB,GAEH,yBAAK5D,UAAW4E,IAAOS,aACrB,4BAAQrF,UAAW4E,IAAOU,SAAUrF,QAAS0D,GAA7C,WCkDC4B,MAhGf,SAAcxE,GAEZ,IAAM5C,EAAO4C,EAAMa,YACXL,EAA2IpD,EAA3IoD,KAAME,EAAqItD,EAArIsD,MAAOI,EAA8H1D,EAA9H0D,GAHF,EAGgI1D,EAA1H4D,iBAHN,WAGgI5D,EAAxGqH,iBAHxB,WAGgIrH,EAAtFsH,aAH1C,MAGkD,GAHlD,EAGsDC,EAA0EvH,EAA1EuH,OAHtD,EAGgIvH,EAAlEwH,eAH9D,SAG+EC,EAAiDzH,EAAjDyH,eAAgBC,EAAiC1H,EAAjC0H,UAAWC,EAAsB3H,EAAtB2H,kBAGvHjH,EAAYgB,YAAYN,GANX,EAQyBwG,oBAAS,GARlC,mBAQZC,EARY,KAQIC,EARJ,OASqBF,mBAASF,EAAY,CAAEjC,QAASkC,EAAmBI,QAAS,WAAc,CAAEtC,QAASgC,EAAgBM,QAAS,YATnI,mBASZC,EATY,KASEC,EATF,KAYbC,EAAqB,kIACrBC,EAA2B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,IAG3G,SAASC,EAAgBrG,GAIvB,IAAMsG,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQf,MAAQvF,EAAOW,OAAO5D,MAE9B8D,EAAM0F,WAAWD,GAGnB,SAASE,EAAcxG,GACrB,IAAMW,EAASX,EAAOW,OAElB8E,GAA4B,KAAjB9E,EAAO5D,OACpBgJ,GAAkB,GAEhBJ,GAA8B,KAAjBhF,EAAO5D,QACtB4D,EAAO8F,QACPV,GAAkB,SAELzD,IAAXkD,GAA4C,UAApBA,EAAOkB,WAC5BP,EAAmBQ,KAAM3G,EAAOW,OAAO5D,MAAO6J,iBAEjDV,EAAgB,CAAExC,QAAS,qDAAsDsC,QAAS,YAC1FD,GAAkB,KAYxBc,qBAAU,cAEP,CAAC5I,IAEJ,IAAM6I,OAAuBxE,IAAXkD,OACClD,IAAjBkD,EAAOuB,MAAsB,8BAAUlH,GAAI8B,EAAIM,KAAMuD,EAAOuB,MAAOrG,SAAU2F,IAEvD,YAApBb,EAAOkB,SAAyB,2BAAOlG,KAAK,SAASwG,IAAKxB,EAAOyB,IAAKC,IAAK1B,EAAO2B,IAAKC,KAAM5B,EAAO6B,QAAS3G,SAAU2F,IAEjG,cAApBb,EAAOkB,SAA2B,2BAAOlG,KAAK,OAAO8G,UAAU,KAAKC,UAhB1E,SAA0BvH,GAEA,cAApBwF,EAAOkB,WACJN,EAAyBoB,SAASxH,EAAOyH,UAAUzH,EAAO0H,mBAaoChH,SAAU2F,IAEzG,2BAAOxG,GAAI8B,EAAInB,KAAK,OAAOzD,MAAOwI,EAAO+B,UAAW9B,EAAOmC,UAAY,EAAGzF,UAAWoD,EAAWsC,OAAQpB,EAAe9F,SAAU2F,IAEvI,2BAAOxG,GAAI8B,EAAInB,KAAK,OAAOzD,MAAOwI,EAAOrD,UAAWoD,EAAWsC,OAAQpB,EAAe9F,SAAU2F,IAE5FwB,EAAgBnC,EAAiB,IAAM,GACvCoC,EAAkBnC,EAAY,0BAAM7F,UAAU,eAAhB,KAAyC,GAG7E,OACE+B,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,2BAAOS,QAAQ,SAASgB,EAAxB,IAAgCsG,EAAeC,GAC9ChB,GAEH,kBAACvD,EAAD,CACEC,WAAYsC,EACZrC,iBAAkB,kBAAMsC,GAAmBD,IAC3CpC,QAAO,UAAK/B,EAAL,aAAYsE,EAAavC,SAChCC,IAAK,CAAEa,gBAAiByB,EAAaD,SACrCpC,SAAU,qBAId,I,iCCnGC,SAASmE,EAAeC,GAC7B,OAAOA,EAAaC,MAAM,KAAKhH,KAAI,SAAAiH,GAAI,OAAIA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,MAAIC,KAAK,IAGlF,SAASC,EAAwBC,EAAOC,GAG7C,IAAMC,EAAcC,GAAcH,GAAOxH,SAErC4H,EAAY,GAsChB,MApCmB,cAAfH,GACFC,EAAY/F,SAAQ,SAACkG,EAASC,GAC5BD,EAAQxH,SAASsB,SAAQ,SAACoG,EAAM3H,GAC1B2H,EAAKC,eAAe,aAEtBD,EAAK1H,SAASsB,SAAQ,SAACsG,EAASC,GAC1BD,EAAQD,eAAe,aAEzBC,EAAQ5H,SAASsB,SAAQ,SAACwG,EAAYC,QACd7G,IAAlB4G,EAAWvH,IAAoBuH,EAAWvH,KAAO6G,GAEnDG,EAAU/F,KAAK,CAACiG,EAAc1H,EAAO8H,EAAUE,YAMlC7G,IAAf0G,EAAQrH,IAAoBqH,EAAQrH,KAAO6G,GAE7CG,EAAU/F,KAAK,CAACiG,EAAc1H,EAAO8H,YAM3B3G,IAAZwG,EAAKnH,IAAoBmH,EAAKnH,KAAO6G,GAEvCG,EAAU/F,KAAK,CAACiG,EAAc1H,UAS/BwH,EAIF,SAASS,KAAoC,IAArBC,EAAoB,uDAAZC,KAAKC,MAK1C,OAAO,IAAID,KAAKD,GAiBX,SAASX,GAAcH,GAE5B,OAAOiB,IAAcjB,EAAO,CAAEkB,MAAM,EAAMC,YAAY,IAIxD,IAAMC,GAAiB,GAChB,SAASC,GAAoBC,GAElC,IAAMC,EAAeH,GAAeI,WAAU,SAAAjB,GAAI,OAAIA,EAAKnH,KAAOkI,EAAOlI,MAEzE,GADAqI,QAAQC,IAAR,+CAAyDH,IACnC,IAAlBA,EAAqBH,GAAe/G,KAAKiH,OACxC,CACH,IAAMK,EAAS,eAAQP,GAAeG,IACtCH,GAAeG,GAAf,eAAoCI,EAApC,GAAkDL,GAGpDG,QAAQC,IAAR,oBACAD,QAAQG,MAAMR,ICkIDS,OAjKf,SAASA,EAAWvJ,GAElB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAgDpD,EAAhDoD,KAAME,EAA0CtD,EAA1CsD,MAAOI,EAAmC1D,EAAnC0D,GAAIP,EAA+BnD,EAA/BmD,SAHA,EAG+BnD,EAArB4D,iBAHV,SAMnBpC,EAAWC,cAEXrC,EAAgBsC,YAAYxB,GAC5BQ,EAAYgB,YAAYN,GAIxBgL,EAAa,CACjBzJ,0BACAa,mBACAoB,QACAwC,OACA+E,aACAE,wBACAC,yBACAC,OACAlB,QACAmB,SACAC,eACAC,uBACAC,aACAC,iBACAC,aACAC,qBACAC,iBACAC,UACAC,YACAC,WACAC,WACAC,gBACAC,cACAC,gBACAC,QACAC,YACAC,aACAC,aACAC,sBACAC,sBACAC,gCACAC,gBACAC,yBACAC,kCACAC,kBACAC,2BACAC,gBACAC,uBACAC,wBACAC,kBACAC,uBA8CIC,EAAWpP,EAAc4D,KAAI,SAAClE,EAAO2P,GAGzC,IAAMC,EAAWvL,EAASH,KAAI,SAAC2L,EAASzL,GAGtCpE,EAAM2F,SAAQ,SAACmK,EAAiB1L,GAC1ByL,EAAQjL,KAAOkL,EAAgBlL,KAAIiL,EAAO,aAAKA,WAAYC,OAGjE,IAAMC,EAAgB/E,EAAe6E,EAAQvL,MACvC0L,EAAY1C,EAAWyC,GAC7B,OAAO,kBAACC,EAAD,CAAWzL,IAAKH,EAAOO,YAAakL,EAASrG,WAAY,SAACgC,GAAD,OAtDpE,SAA2BA,EAAOyE,GAIhC,IAAMC,EAAuB5P,EAAc2P,GAAgBjD,WAAU,SAACjB,GAAD,OAAUA,EAAKnH,KAAO4G,EAAM5G,MAE3FuL,EAAiB,YAAO7P,GAC9B2M,QAAQC,IAAR,kDAA4DiD,GAC5DlD,QAAQC,IAAR,wFAAkGiD,EAAkBF,GAAgBC,IAEpIC,EAAkBF,GAAlB,sBAAwCE,EAAkBF,IAA1D,CAA2EzE,IAG3E9I,EAAS3B,EAAiBoP,IAyCmDC,CAAkB5E,EAAOmE,SAGtG,OAAQ,yBAAK5M,UAAU,aAAawB,IAAG,cAASoL,IAC9C,yBAAK5M,UAAU,qBACb,wBAAIA,UAAU,oBAAd,IAAmC4M,EAAgB,EAAnD,KAAwDnL,GACxD,4BAAQzB,UAAU,8BAA8BC,QAAS,SAAAqN,GAAC,OAhC/BC,EAgC2DX,OA9B1FjN,EAAS3B,EAAiB,YAAIT,EAAciQ,QAAO,SAACxE,EAAM3H,GAAP,OAAiBA,IAAUkM,QAFhF,IAAiCA,IAgC3B,SAEA,kBAAC,IAAD,CAAiBpN,KAAM8E,QAGxB4H,MAIL,OACE9K,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAU,WAUZ2M,EAGD,4BAAQ3M,UAAU,kBAAkBC,QAlE5C,WACEN,EAAS3B,EAAiB,GAAD,mBAAKT,GAAL,CAAoB+D,QAkErC,kBAAC,IAAD,CAAiBnB,KAAMsN,SAM7B,ICxLSjD,OAhCf,SAA8BzJ,GAE5B,IAAM5C,EAAO4C,EAAMa,YACXH,EAAiCtD,EAAjCsD,MAAOI,EAA0B1D,EAA1B0D,GAHoB,EAGM1D,EAAtB4D,iBAHgB,WAWDgE,oBAAS,GAXR,mBAW5BlH,EAX4B,KAWjBG,EAXiB,KAanC,OACE+C,EACA,yBAAK/B,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCjB,GAAcH,KASZ,uBACsB,6BACpB,0BAAMmB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWnB,EAAY,GAAK,SAAU9B,KAAK,GAAGgD,GAAG,GAAGmC,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,IACtH,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICIWgJ,OAhCf,SAA+B1J,GAE7B,IAAM5C,EAAO4C,EAAMa,YACXH,EAAiCtD,EAAjCsD,MAAOI,EAA0B1D,EAA1B0D,GAHqB,EAGK1D,EAAtB4D,iBAHiB,WAWFgE,oBAAS,GAXP,mBAW7BlH,EAX6B,KAWlBG,EAXkB,KAapC,OACE+C,EACA,yBAAK/B,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCjB,GAAcH,KASZ,wBACuB,6BACrB,0BAAMmB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWnB,EAAY,GAAK,SAAU9B,KAAK,GAAGgD,GAAG,GAAGmC,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,IACtH,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICkPWiJ,OApQf,SAAa3J,GAEX,IAAM5C,EAAO4C,EAAMa,YAEXH,EACsGtD,EADtGsD,MAAOF,EAC+FpD,EAD/FoD,KAAMM,EACyF1D,EADzF0D,GAJH,EAK4F1D,EADrF4D,iBAJP,WAK4F5D,EADnEsH,aAJzB,MAIiC,GAJjC,EAIqCiI,EACuDvP,EADvDuP,IACrDC,EAA4GxP,EAA5GwP,mBAAoBC,EAAwFzP,EAAxFyP,aAAcC,EAA0E1P,EAA1E0P,aAAcC,EAA4D3P,EAA5D2P,sBAAuBC,EAAqC5P,EAArC4P,oBAAqBC,EAAgB7P,EAAhB6P,YACxFC,EAAcC,OAAOR,GAAK5G,cAE1BnH,EAAWC,cAEXf,EAAYgB,YAAYN,GAVZ,EAYgBwG,oBAAS,GAZzB,mBAYXoI,EAZW,KAYAC,EAZA,OAaYrI,mBAAS,IAbrB,mBAaXsI,EAbW,KAaFC,EAbE,OAcMvI,mBAAS,IAdf,mBAcXwI,EAdW,KAcLC,EAdK,OAesBzI,mBAAS,IAf/B,mBAeX0I,EAfW,KAeGC,EAfH,OAgB0B3I,mBAAUN,EAAMkJ,cAAgBT,OAAU,CAACzI,GAASA,GAhB9E,mBAgBXmJ,EAhBW,KAgBKC,EAhBL,KAkBZ3P,EAAaW,YAAYL,GAEzBsP,EAAoB9K,YAAU,CAAE+K,OAAQZ,EAAY,EAAI,MAExDa,EAAaC,YAASL,EAAe1N,OAAQ,CACjDgD,KAAM,CAAED,QAAS,EAAG1D,YAAa,GAAI2O,WAAY,EAAG5O,UAAW,2BAC/D6O,GAAI,CAAElL,QAAS,EAAG1D,WAAY,EAAG2O,UAAW,EAAG5O,UAAW,uBAE1D8D,OAAQA,IAAOI,QAeX4K,EAAM,UAHQ,qCAGR,OAeZ,WACE,OAAQnB,GACN,IAAK,iBACH,MAAM,WAAN,OApBY,KAoBZ,wBACF,IAAK,kBACH,MAAM,WAAN,OAtBY,KAsBZ,uBACF,IAAK,iBACH,MAAM,eACR,IAAK,cACH,MAAM,gBACR,IAAK,MACH,MAAM,WAAN,OA5BY,KA4BZ,QACF,IAAK,MACH,MAAM,WAAN,OA9BY,KA8BZ,QACF,IAAK,MACH,MAAM,WAAN,OAhCY,KAgCZ,UACF,IAAK,MACH,MAAM,WAAN,OAlCY,KAkCZ,QACF,IAAK,MACH,MAAM,WAAN,OApCY,KAoCZ,QACF,IAAK,MACH,MAAM,WAAN,OAtCY,KAsCZ,QACF,IAAK,OACH,MAAM,WAAN,OAxCY,KAwCZ,SACF,IAAK,MACH,MAAM,WAAN,OA1CY,KA0CZ,SAxC0BoB,IAE1BC,EAAQpS,KAAKC,MAAMC,aAAaC,QAAQ,iBAGxCkS,GAAa,IAAIC,QACvBD,GAAWE,OAAO,gBAAlB,iBAA6CH,EAAMI,eACnDH,GAAWE,OAAO,eAAgB,qCAElC,IAAME,GAAiB,CACrBC,OAAQ,MACRC,QAASN,GACTO,SAAU,UAyIZ,SAASC,GAAqB7P,GAC5B,IAAM8P,EAAc9P,EAAOW,OAAOd,GAE9B6O,EAAe,KAAOoB,EAAanB,EAAkB,CAACmB,IACrDnB,EAAkB,IACvBoB,GAAWD,GAEb,SAASC,GAAWlG,GAElB,IAAMvD,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IACtCqI,EAAQf,QAAUsE,EAAQvD,EAAQf,MAAQ,IAE5Ce,EAAQf,MAAQsE,EAChBqE,GAAa,IAGfrN,EAAM0F,WAAWD,GAvHnBO,qBAAU,WACRmJ,MAAMd,EAAQO,IACXQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ,IAGMC,EAHkBrT,KAAKC,MAAMmT,GAGDnP,KAAI,SAAC6H,EAAM3H,GAC3C,IAAIY,EAAQuO,EAAaC,EAAcC,EAAOC,EAAKC,EAAMC,EAAMC,EAC/D,OAAQpD,GAEN,IAAK,kBACH8C,EAAc7C,EAAkB,aAAS3E,EAAK+H,QAAQzO,QAAb,OAAT,GAChCmO,EAAe7C,EAAY,aAAS5E,EAAK+H,QAAQC,OAAb,OAAT,GAC3B/O,EAAM,UAAM+G,EAAK+H,QAAQE,UAAnB,YAAgCjI,EAAK+H,QAAQG,SAA7C,cAA2DlI,EAAKmI,QAAQC,MAAxE,OAA+EZ,GAA/E,OAA6FC,GACnG,MAEF,IAAK,iBACHD,EAAc7C,EAAkB,aAAS3E,EAAK1G,QAAL,OAAT,GAChCmO,EAAe7C,EAAY,aAAS5E,EAAKgI,OAAL,OAAT,GAC3B/O,EAAM,UAAM+G,EAAKiI,UAAX,YAAwBjI,EAAKkI,SAA7B,cAA2ClI,EAAKqI,aAAhD,OAA8Db,GAA9D,OAA4EC,GAClF,MAEF,IAAK,iBAGHC,EAAQ7C,EAAY,aAAS7E,EAAKvH,OAAL,OAAT,GACpBkP,EAAM7C,EAAqB,aAAS9E,EAAKmI,QAAQG,KAAb,OAAT,GAC3BV,EAAO7C,EAAmB,aAAS/E,EAAKmI,QAAQI,MAAb,OAAT,GAC1BtP,EAAM,UAAM+G,EAAKmI,QAAQC,MAAnB,OAA0BV,GAA1B,OAAkCC,GAAlC,OAAwCC,GAE9C,MAEF,IAAK,cACH3O,EAAM,UAAM+G,EAAKvH,OAEjB,MACF,QACEiP,EAAQ7C,EAAY,UAAM7E,EAAKvH,OAAL,OAAN,GACpBoP,EAAO7C,EAAW,UAAMhF,EAAKwI,MAAL,OAAN,GAClBV,EAAU9C,GAAeH,EAAhB,SACT5L,EAAM,UAAMyO,GAAN,OAAcI,GAAd,OAAuBD,GAejC,OAAO5O,KAETuM,EAAQ+B,MAITkB,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,QACtC,IAOH3K,qBAAU,WACHoH,GAAWxO,EAASV,EAAc4C,MACtC,CAACsM,EAAWtM,EAAIlC,IAEnBoH,qBAAU,WACJ7H,IAAe2C,GAAIuM,GAAa,KACnC,CAAClP,EAAY2C,IAIhBkF,qBAAU,WACR2H,EAAgBH,EAAKf,QAAO,SAAAxE,GAAI,OAAIA,EAAKlC,cAAcY,SAAS2G,EAAQvH,qBACvE,CAACyH,EAAMF,IAwCV,IAAMsD,GAAWxD,EAAY,GAC3BM,EAAatN,KAAI,SAAC6H,EAAMxH,GACtB,IAAMoQ,EAAc5I,IAASvD,EACvBoM,EAAYD,EAAa,kBAAC,IAAD,CAAiBzR,KAAM2R,MAAc,GACpE,OAAO,yBAAKtQ,IAAKA,EAAKzB,GAAIiJ,EAAMhJ,UAAS,0BAAqB4R,EAAa,qBAAuB,IAAM3R,QAAS8P,IAC9G8B,EACA7I,MAMD+I,GAAgB/C,EAAW7N,KAAI,SAACJ,EAAOM,GAC3C,IAAM2H,EAAO4F,EAAevN,GAC5B,MAAa,KAAT2H,EAAoB,kBAAC,IAASrE,IAAV,CAAc3E,UAAU,oBAAoBK,MAAOU,EAAOS,IAAKH,GAAQ2H,EAAK,4BAAQjJ,GAAIiJ,EAAMhJ,UAAU,iBACzH,MAGT,OACE+B,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WAEb,4BAAKyB,GACL,yBAAKzB,UAAU,eAAeC,QAjEtC,SAA0BC,GACxB,IAAMW,EAASX,EAAOW,OACtB,GAAyB,iBAArBA,EAAOb,WAAqD,uBAArBa,EAAOb,UAAoCoO,GAAcD,QAC/F,GAAyB,gBAArBtN,EAAOb,UAA6B,CAC3C,IAAMgS,EAAanR,EAAOoR,WAAWC,UAClB,KAAfF,IACF/B,GAAW,IACXpB,EAAkBD,EAAepB,QAAO,SAAAxE,GAAI,OAAIA,IAASgJ,UA2DrD,yBAAKhS,UAAU,sBACZ+R,IAEH,kBAAC,IAAD,CAAiB5R,KAAMgO,EAAYgE,IAAcC,IAAWnS,QA1DtE,SAA8BC,GAC5BkO,GAAcD,OA2DR,kBAAC,IAASxJ,IAAV,CAActE,MAAOyO,EAAmB9O,UAAU,cAChD,yBAAKA,UAAU,wBACb,2BAAOU,KAAK,OAAO2R,YAAY,SAASrS,UAAU,oBAAoB/C,MAAOoR,EAASzN,SAAU,SAAA0M,GAAC,OAAIgB,EAAWhB,EAAEzM,OAAO5D,UACzH,kBAAC,IAAD,CAAiBkD,KAAM8E,IAAShF,QAAS,SAAAqN,GAAC,OAAIgB,EAAW,QAE3D,yBAAKtO,UAAU,oBAAoB2R,OAMzC,I,+CC9PS,SAASW,GAAUvR,GAEhC,IAAMwR,EAAsBxR,EAAMyR,OAAOC,QAAQ,OAAQ,OAFlB,EAGL1M,mBAAShF,EAAM2R,WAHV,mBAGhCA,EAHgC,KAGrBC,EAHqB,KAgBvC,IAAMC,EAA2B,KAAdF,EAAmBA,EAAYF,aAAOK,aAAUC,aL+BnD,IAAItJ,KK/B0EkJ,EL+B7D,KAAM,IAAIlJ,MAAOuJ,gBK/BwDhS,EAAMiS,UAAUC,QAASlS,EAAMiS,UAAUE,UAAWX,GAG9J,OACE,yBAAKvS,UAAW4E,KAAOuO,eACrB,2BACEzS,KAAK,OACL3D,KAAK,GACLgD,GAAG,GACHC,UAAW4E,KAAOwO,WAClBC,aAAcX,EACd9R,SAAU,SAAC0M,GAAD,OAhBSvD,EAgBcuD,EAAEzM,OAAO5D,MAf9C0V,EAAa5I,QACbhJ,EAAMuS,aAAavJ,GAFrB,IAAyBA,KAkBpB6I,EACD,kBAAC,IAAD,CACE5S,UAAW4E,KAAO2O,SAClBpT,KAAM8E,IACNhF,QA3BN,WACE0S,EAAa,IACb5R,EAAMuS,aAAa,QC+BR9J,OA3Cf,SAAczI,GAEZ,IAAM5C,EAAO4C,EAAMa,YACbL,EAA2HpD,EAA3HoD,KAAME,EAAqHtD,EAArHsD,MAAOI,EAA8G1D,EAA9G0D,GAHA,EAG8G1D,EAA1GqV,sBAHJ,MAGqB,aAHrB,IAG8GrV,EAA3EsV,eAHnC,WAG8GtV,EAA1D4D,iBAHpD,WAG8G5D,EAAxC8U,cAHtE,MAG+E,EAH/E,IAG8G9U,EAA5B+U,gBAHlF,MAG6F,EAH7F,EAGgGQ,EAAcvV,EAAduV,UAE7G7U,EAAYgB,YAAYN,GAExBoU,EAA6B,KAAdD,QAAkClR,IAAdkR,EAArB,UACfpK,KAAiBsK,gBAEpBF,EAViB,EAae3N,mBAAU0N,EAAwB,GAAdE,GAbnC,mBAaZjB,EAbY,KAaDC,EAbC,KAyBnB,OACE5Q,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,kBAAC6Q,GAAD,CAAWE,OAAQgB,EAAgBd,UAAWA,EAAWM,UAAW,CAAEC,SAAQC,YAAYI,aAAc,SAACrW,GAAD,OApBhH,SAA6BsM,GAC3BoJ,EAAapJ,GAEb,IAAM/C,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC5B,KAAVoL,EAAc/C,EAAQkN,UAAYnK,SAC1B/C,EAAQkN,UACpBlN,EAAQiN,QAAqB,KAAVlK,EACnBxI,EAAM0F,WAAWD,GAawGqN,CAAoB5W,QAI3I,I,oBCzCS,SAAS6W,GAAO/S,GAS7B,OACE,yBAAKf,UAAW4E,KAAOmP,WACrB,yBAAKC,IAAKjT,EAAMkT,OAAQC,IAAI,WAC5B,yBAAKlU,UAAW4E,KAAOuP,SAAUlU,QAVrC,SAAwBC,GAGtBa,EAAMqT,QAAQlU,KAO8C,kBAAC,IAAD,CAAiBC,KAAM8E,QCoDxE0F,OA5Df,SAAe5J,GAEb,IAAM5C,EAAO4C,EAAMa,YACXL,EAAyDpD,EAAzDoD,KAAME,EAAmDtD,EAAnDsD,MAAOI,EAA4C1D,EAA5C0D,GAHD,GAG6C1D,EAAxC2D,KAAwC3D,EAAlC4D,kBAHX,WAG6C5D,EAAhBkW,cAH7B,MAGsC,GAHtC,EAOdxV,EAAYgB,YAAYN,GAPV,EASoBwG,mBAAS,IAT7B,mBAoBpB,SAASuO,EAAepU,GACtBgK,QAAQC,IAAI,WAASjK,GArBH,UAyBpB6G,qBAAU,cAEP,CAAC5I,IAEJ,IAAMoW,EAASF,EAAOlT,KAAI,SAACqT,EAAOnT,GAAR,OACxB,yBAAKrB,UAAU,cAAcwB,IAAG,eAAUH,IACxC,kBAACyS,GAAD,CAAQG,OAAM,kCAA6BO,GAASJ,QAASE,QAIjE,OACEvS,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,yBAAKA,UAAU,eACb,wBAAIS,QAAQ,SAASgB,GACrB,2BAAOhB,QAAQ,OAAOT,UAAU,6BAC9B,kBAAC,IAAD,CAAiBG,KAAMsU,MADzB,mBAIA,2BAAO/T,KAAK,OAAOX,GAAG,OAAOhD,KAAK,OAAOiD,UAAU,WAAWY,SAtCxE,SAAyBV,GAIvBgK,QAAQC,IAAI,WAAYjK,OAoCjBqU,IAIL,ICUS3J,OAlEf,SAAqB7J,GAEnB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAwDpD,EAAxDoD,KAAME,EAAkDtD,EAAlDsD,MAAOI,EAA2C1D,EAA3C0D,GAHK,GAGsC1D,EAAvC2D,KAAuC3D,EAAjC4D,kBAHL,WAGsC5D,EAAfsH,aAHvB,MAG+B,GAH/B,EAOpB5G,EAAYgB,YAAYN,GAyB9BwH,qBAAU,cAEP,CAAC5I,IAEJ,IAAMuW,EAAmB,KAAVjP,EAAe,kBAACqO,GAAD,CAAQG,OAAM,kCAA6BxO,GAAS2O,QAblF,SAAwBlU,GACtBgK,QAAQC,IAAI,WAASjK,GAErB,IAAMsG,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,WACnCqI,EAAQf,MACf1E,EAAM0F,WAAWD,MAQ6F,GAEhH,OACEzE,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,yBAAKA,UAAU,eACb,wBAAIS,QAAQ,SAASgB,GACrB,2BAAOhB,QAAQ,OAAOT,UAAU,6BAC9B,kBAAC,IAAD,CAAiBG,KAAMsU,MADzB,mBAIA,2BAAO/T,KAAK,OAAOX,GAAG,OAAOhD,KAAK,OAAOiD,UAAU,WAAWY,SA5CxE,SAAyBV,GAEvB,IAAIyU,EACEC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAACxH,GACnBqH,EAAYrH,EAAEzM,OAAOyP,OAAOmC,QAAQ,yBAA0B,IAE9D,IAAMjM,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQf,MAAQkP,EAChB5T,EAAM0F,WAAWD,IAEnBoO,EAAWG,cAAc7U,EAAOW,OAAOmU,MAAM,QAmCvC,yBAAKhV,UAAU,eACZ0U,KAKP,ICvCS7J,OAhCf,SAA6B9J,GAE3B,IAAM5C,EAAO4C,EAAMa,YACXH,EAAiCtD,EAAjCsD,MAAOI,EAA0B1D,EAA1B0D,GAHmB,EAGO1D,EAAtB4D,iBAHe,WAWAgE,oBAAS,GAXT,mBAW3BlH,EAX2B,KAWhBG,EAXgB,KAalC,OACE+C,EACA,yBAAK/B,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCjB,GAAcH,KASZ,sBACqB,6BACnB,0BAAMmB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWnB,EAAY,GAAK,SAAU9B,KAAK,GAAGgD,GAAG,GAAGmC,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,IACtH,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICpBWqJ,OARf,WACE,OACE,2CCMWC,OARf,WACE,OACE,+CCoCWC,OAjCf,SAAmBjK,GAEjB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAsDpD,EAAtDoD,KAAME,EAAgDtD,EAAhDsD,MAAOI,EAAyC1D,EAAzC0D,GAHG,EAGsC1D,EAArC4D,iBAHD,WAGsC5D,EAAnB6M,iBAHnB,MAG+B,GAH/B,EAKlBnM,EAAYgB,YAAYN,GAExB0V,EAAY,yBAAKjB,IAAG,gCAA2BhJ,GAAakJ,IAAI,GAAGgB,MAAM,QAE/E,OACEnT,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGgD,GAAG,GAAGmC,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAElF,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,qBACZiV,MAOT,ICOShK,OAnCf,SAA2BlK,GAEzB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAgEpD,EAAhEoD,KAAME,EAA0DtD,EAA1DsD,MAAOI,EAAmD1D,EAAnD0D,GAHW,EAGwC1D,EAA/C4D,iBAHO,SAGWiJ,EAA6B7M,EAA7B6M,UAAWmK,EAAkBhX,EAAlBgX,cAEhDtW,EAAYgB,YAAYN,GAExB0V,EAAY,yBAAKjB,IAAG,iCAA4BhJ,GAAakJ,IAAI,GAAGgB,MAAM,QAEhF,OACEnT,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGgD,GAAG,GAAGmC,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAElF,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,qBACZiV,EACD,yBAAKjV,UAAU,uBACZmV,OASX,ICGSjK,OAnCf,SAAuBnK,GAErB,IAAM5C,EAAO4C,EAAMa,YACXL,EAA4DpD,EAA5DoD,KAAME,EAAsDtD,EAAtDsD,MAAOI,EAA+C1D,EAA/C0D,GAHO,EAGwC1D,EAA3C4D,iBAHG,SAGeiJ,EAAyB7M,EAAzB6M,UAAW0I,EAAcvV,EAAduV,UAEhD7U,EAAYgB,YAAYN,GAExB0V,EAAY,yBAAKjB,IAAG,iCAA4BhJ,GAAakJ,IAAI,GAAGgB,MAAM,QAEhF,OACEnT,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGgD,GAAG,GAAGmC,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAElF,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,qBACZiV,EACD,yBAAKjV,UAAU,uBACZ0T,OASX,ICIS,SAASvI,GAAOpK,GAE7B,IAAM5C,EAAO4C,EAAMa,YAGXL,EAA+DpD,EAA/DoD,KAAMM,EAAyD1D,EAAzD0D,GAAIJ,EAAqDtD,EAArDsD,MAAO2T,EAA8CjX,EAA9CiX,QAASC,EAAqClX,EAArCkX,KAAM/T,EAA+BnD,EAA/BmD,SALJ,EAKmCnD,EAArB4D,iBALd,SAOpCmI,QAAQC,IAAR,8BAAwC7I,GAuCxC,IArCA,IAAMzC,EAAYgB,YAAYN,GAKxBgL,EAAa,CACjB5I,mBACAoB,QACAwC,OACA+E,cACAE,wBACAC,yBACAC,OACAlB,QACAmB,SACAC,eACAC,uBACAC,aACAC,iBACAC,aACAC,qBACAC,iBACAE,YACAC,WACAC,WACAC,gBACAC,cACAC,gBACAC,QACAC,YACAC,aACAC,aACAC,sBACAC,uBAGEuJ,EAAe,GACVC,EAAI,EAAGA,EAAIjU,EAASJ,OAAQqU,IAEnC,IAAK,IAAIC,EAAI,EAAGA,EAAIlU,EAASiU,GAAGjU,SAASJ,OAAQsU,IAAK,CAEpD,IAAMpU,EAAUE,EAASiU,GAAGjU,SAASkU,GAE/BxI,EAAgB/E,EAAe7G,EAAQG,MAGvC0L,EAAY1C,EAAWyC,GACvByI,EAAmB,kBAACxI,EAAD,CAAWzL,IAAG,UAAKwL,EAAc0I,UAAU,EAAG,GAAG5O,cAAnC,YAAoD1F,EAAQuU,WAAa/T,YAAaR,EAASqF,WAAY4G,IAElJiI,EAAaxS,KAAK,yBAAKtB,IAAG,UAAK+T,EAAL,YAAUC,GAAKxV,UAAU,aAAaK,MAAO,CAAEqE,gBAAiB6Q,EAAI,EAAI,EAAI,qBAAuB,GAAIhS,aAAcgS,EAAI,EAAI,EAAI,iBAAmB,KAAOE,IAUzL,SAASpI,EAAkB5E,GACzByB,QAAQC,IAAR,sCAAgD1B,GAkBlD,OACE1G,EACE,yBAAK/B,UAAU,8CACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKK,MAAO,CAAEf,QAAS,OAAQsW,oBAAoB,UAAD,OAAYR,EAAZ,UAA6BS,iBAAiB,UAAD,OAAYR,EAAZ,YAC5FC,MAMT,GC7DSlK,OA3Ef,SAAkBrK,GAEhB,IAAM5C,EAAO4C,EAAMa,YACXL,EAA+IpD,EAA/IoD,KAAME,EAAyItD,EAAzIsD,MAAOI,EAAkI1D,EAAlI0D,GAAIiU,EAA8H3X,EAA9H2X,YAAaC,EAAiH5X,EAAjH4X,YAAaC,EAAoG7X,EAApG6X,YAAaC,EAAuF9X,EAAvF8X,WAAYC,EAA2E/X,EAA3E+X,QAAS/S,EAAkEhF,EAAlEgF,aAH9D,EAGgIhF,EAApD4D,iBAH5E,WAGgI5D,EAAlCsH,aAH9F,MAGsG,GAHtG,IAGgItH,EAAtBgY,oBAH1G,MAGyH,GAHzH,IAMWpQ,mBAASiQ,GANpB,mBAMhB7H,EANgB,KAMLC,EANK,KAQjBvP,EAAYgB,YAAYN,GA8B9BwH,qBAAU,cAEP,CAAC5I,IAMJ,IAAMiY,EAAUN,EAAc,2BAAOpV,KAAK,OAAO2R,YAAa4D,EAAYhZ,MAAOkZ,EAAcvV,SArB/F,SAAgCV,GAG9B,IAAMmW,EAAcnW,EAAOW,OAAO5D,MAGlC6M,GAFuB,CAAEjI,KAAIsU,aAAcE,IAI3C,IAAM7P,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQ2P,aAAeE,EACvBtV,EAAM0F,WAAWD,MAWyH,GAEtI8P,EAAUP,EAAc,yBAAK/V,UAAU,6BAA4B,yBAAKA,UAAU,yBAAyBC,QANjH,SAA8BC,GAC5BkO,GAAcD,KAKgI,kBAAC,IAAD,CAAiBhO,KAAMgO,EAAYgE,IAAcC,OAAmB,yBAAKrS,GAAG,iBAAiBC,UAAS,UAAKmO,EAAY,SAAW,GAA5B,6BAA2D+H,IAAuB,GAElUK,EAAaN,EAAa,2BAAOxV,QAAQ,YAAYwV,GAAsB,GAEjF,OACElU,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAS,kBAAamD,EAAe,oBAAsB,KAC9D,4BAAK1B,GACJ6U,EACD,2BAAO5V,KAAK,WAAW8V,eAA0B,MAAV/Q,EAAe7E,SAtD9D,SAAyBV,GAGvB,IAAMuW,GAA0C,IAA1BvW,EAAOW,OAAOF,QAAmB,IAAM,IAG7DmJ,GAFuB,CAAEvI,OAAMM,KAAI4D,MAAOgR,IAK1C,IAAMjQ,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQf,MAAQgR,EAEhB1V,EAAM0F,WAAWD,MA2CV+P,EACAH,IAKL,ICOS/K,OA9Ef,SAAiBtK,GAEf,IAAM5C,EAAO4C,EAAMa,YACXL,EAA+IpD,EAA/IoD,KAAME,EAAyItD,EAAzIsD,MAAOI,EAAkI1D,EAAlI0D,GAAIiU,EAA8H3X,EAA9H2X,YAAaC,EAAiH5X,EAAjH4X,YAAaC,EAAoG7X,EAApG6X,YAAa7S,EAAuFhF,EAAvFgF,aAAc8S,EAAyE9X,EAAzE8X,WAAYC,EAA6D/X,EAA7D+X,QAHpE,EAGiI/X,EAApD4D,iBAH7E,WAGiI5D,EAAlCsH,aAH/F,MAGuG,GAHvG,IAGiItH,EAAtBgY,oBAH3G,MAG0H,GAH1H,IAKYpQ,mBAASiQ,GALrB,mBAKf7H,EALe,KAKJC,EALI,KAOhBvP,EAAYgB,YAAYN,GAG9B,SAASgH,EAAgBrG,GAEvB,IAAMwW,EAAexW,EAAOW,OAAO5D,MAEnC6M,GADuB,CAAEvI,OAAMM,KAAI4D,MAAOiR,IAG1C,IAAMlQ,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQf,MAAQiR,EAChB3V,EAAM0F,WAAWD,GAenB,IAAM4P,EAAUN,EAAc,2BAAOpV,KAAK,OAAO2R,YAAa4D,EAAYhZ,MAAOkZ,EAAcvV,SAZ/F,SAAgCV,GAC9BgK,QAAQC,IAAI,wBAAyBjK,EAAOW,OAAO5D,OAEnD,IAAMuJ,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQ2P,aAAejW,EAAOW,OAAO5D,MACrC8D,EAAM0F,WAAWD,MAOyH,GAEtI8P,EAAUP,EAAc,yBAAK/V,UAAU,6BAA4B,yBAAKA,UAAU,yBAAyBC,QANjH,SAA8BC,GAC5BkO,GAAcD,KAKgI,kBAAC,IAAD,CAAiBhO,KAAMgO,EAAYgE,IAAcC,OAAmB,yBAAKrS,GAAG,iBAAiBC,UAAS,UAAKmO,EAAY,SAAW,GAA5B,6BAA2D+H,IAAuB,GAElUK,EAAaN,EAAa,2BAAOxV,QAAQ,YAAYwV,GAAsB,GAEjF,OACElU,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAI5E,yBAAKpC,UAAU,WACZyB,EACD,yBAAKzB,UAAU,kBACZsW,GAEH,yBAAKtW,UAAS,yBAAoBmD,EAAe,oBAAsB,KACrE,yBAAKnD,UAAU,oBACb,2BAAOS,QAAQ,OAAf,OACA,2BAAOC,KAAK,QAAQX,GAAG,MAAMhD,KAAM8E,EAAI5E,MAAM,IAAI0D,QAAmB,MAAV8E,EAAe7E,SAAU2F,KAErF,yBAAKvG,UAAU,oBACb,2BAAOS,QAAQ,MAAf,MACA,2BAAOC,KAAK,QAAQX,GAAG,KAAKhD,KAAM8E,EAAI5E,MAAM,IAAI0D,QAAmB,MAAV8E,EAAe7E,SAAU2F,MAGtF,yBAAKvG,UAAU,kBACZuW,GAEH,yBAAKvW,UAAU,kBACZoW,KAMP,ICSS9K,OAnFf,SAAiBvK,GAEf,IAAM5C,EAAO4C,EAAMa,YACXL,EAAyIpD,EAAzIoD,KAAME,EAAmItD,EAAnIsD,MAAOI,EAA4H1D,EAA5H0D,GAAIiU,EAAwH3X,EAAxH2X,YAAaa,EAA2GxY,EAA3GwY,OAHhB,EAG2HxY,EAAnG4D,iBAHxB,SAG0CgU,EAAiF5X,EAAjF4X,YAAaC,EAAoE7X,EAApE6X,YAAaC,EAAuD9X,EAAvD8X,WAAYC,EAA2C/X,EAA3C+X,QAHhF,EAG2H/X,EAAlCsH,aAHzF,MAGiG,GAHjG,IAG2HtH,EAAtBgY,oBAHrG,MAGoH,GAHpH,IAMYpQ,mBAASiQ,GANrB,mBAMf7H,EANe,KAMJC,EANI,KAQhBvP,EAAYgB,YAAYN,GAE9B,SAASgH,EAAgBrG,GAEvB,IAAM0W,EAAe1W,EAAOW,OAAO5D,MAEnC6M,GADuB,CAAEvI,OAAMM,KAAI4D,MAAOmR,IAG1C,IAAMpQ,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQf,MAAQmR,EAChB7V,EAAM0F,WAAWD,GAgBnBO,qBAAU,cAEP,CAAC5I,IAEJ,IAAMiY,EAAUN,EAAc,2BAAOpV,KAAK,OAAO2R,YAAa4D,EAAYhZ,MAAOkZ,EAAcvV,SAjB/F,SAAgCV,GAG9B,IAAMsG,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQ2P,aAAejW,EAAOW,OAAO5D,MACrC8D,EAAM0F,WAAWD,MAYyH,GAEtI8P,EAAUP,EAAc,yBAAK/V,UAAU,6BAA4B,yBAAKA,UAAU,yBAAyBC,QAXjH,SAA8BC,GAC5BkO,GAAcD,KAUgI,kBAAC,IAAD,CAAiBhO,KAAMgO,EAAYgE,IAAcC,OAAmB,yBAAKrS,GAAG,iBAAiBC,UAAS,UAAKmO,EAAY,SAAW,GAA5B,6BAA2D+H,IAAuB,GAExU,OACEnU,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAI5E,yBAAKpC,UAAU,WACZyB,EACD,yBAAKzB,UAAU,eACZsW,GAEH,yBAAKtW,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,2BAAOS,QAAQ,OAAf,OACA,2BAAOC,KAAK,QAAQX,GAAG,MAAMhD,KAAM8E,EAAI5E,MAAM,IAAI0D,QAAmB,MAAV8E,EAAe7E,SAAU2F,KAErF,yBAAKvG,UAAU,oBACb,2BAAOS,QAAQ,MAAf,MACA,2BAAOC,KAAK,QAAQX,GAAG,KAAKhD,KAAM8E,EAAI5E,MAAM,IAAI0D,QAAmB,MAAV8E,EAAe7E,SAAU2F,KAEpF,yBAAKvG,UAAS,UAAK2W,EAAS,SAAW,GAAzB,sBACZ,2BAAOlW,QAAQ,MAAf,OACA,2BAAOC,KAAK,QAAQX,GAAG,KAAKhD,KAAM8E,EAAI5E,MAAM,KAAK0D,QAAmB,OAAV8E,EAAgB7E,SAAU2F,OAI1F,yBAAKvG,UAAU,eACZoW,KAKP,IC3BS7K,OAzDf,SAAsBxK,GAEpB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAuGpD,EAAvGoD,KAAME,EAAiGtD,EAAjGsD,MAAOI,EAA0F1D,EAA1F0D,GAHM,EAGoF1D,EAAtF4D,iBAHE,SAGgB8U,EAAoE1Y,EAApE0Y,QAASV,EAA2DhY,EAA3DgY,aAAchT,EAA6ChF,EAA7CgF,aAAc2S,EAA+B3X,EAA/B2X,YAAaa,EAAkBxY,EAAlBwY,OAAQlR,EAAUtH,EAAVsH,MAE/F5G,EAAYgB,YAAYN,GAE9B,SAASgH,EAAgBrG,GAGvB,IAAMsG,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQf,MAAQvF,EAAOW,OAAO5D,MAC9B8D,EAAM0F,WAAWD,GAInB,IAAMsQ,OAAsBtU,IAAZqU,EAAwBA,EAAQ1V,KAAI,SAAC4V,EAAQ1V,GAC3D,IAAM2V,EAAqBvR,IAAUsR,EAAOE,OAASF,EAAOG,wBAA0BH,EAAOI,gBAC7F,IAAMR,GAA4B,OAAlBI,EAAOE,OAAkB,OAEvC,kBAAC,IAAMG,SAAP,CAAgB5V,IAAG,UAAKK,GAAL,OAAUR,IAE3B,2BAAOX,KAAK,QAAQ3D,KAAM8E,EAAI9B,GAAE,UAAK8B,GAAL,OAAUkV,EAAOhU,OAAS9F,MAAO8Z,EAAOE,OAAQjX,UAAU,oBAAoBY,SAAU2F,IACxH,2BAAO9F,QAAO,UAAKoB,GAAL,OAAUkV,EAAOhU,OAAS/C,UAAU,oBAAoBK,MAAO,CAAEqE,gBAAiBsS,IAC7FD,EAAOhU,WAKX,GAECqT,EAAUN,EAAc,yBAAK9V,UAAU,eAAemW,GAAsB,GAC5EkB,EAAYlU,EAAe,6BAAS,GAE1C,OACEpB,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGgD,GAAG,GAAGmC,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAElF,yBAAKpC,UAAU,WACb,4BAAKyB,GACJ2U,EACD,yBAAKpW,UAAU,eACZ8W,EACAO,KAMP,IC2ES7L,OA1Hf,SAAoBzK,GAElB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAwDpD,EAAxDoD,KAAME,EAAkDtD,EAAlDsD,MAAOI,EAA2C1D,EAA3C0D,GAAIC,EAAuC3D,EAAvC2D,KAHA,EAGuC3D,EAAjCsH,aAHN,MAGc,GAHd,IAGuCtH,EAArB4D,iBAHlB,SAInBpC,EAAWC,cAEXf,EAAYgB,YAAYN,GANL,EAQSwG,oBAAS,GARlB,mBAQlBoI,EARkB,KAQPC,EARO,OASKrI,mBAAS,IATd,mBASlBsI,EATkB,KASTC,EATS,OAUevI,mBAAS,IAVxB,mBAUlB0I,EAVkB,KAUJC,EAVI,OAWmB3I,mBAAUN,EAAMkJ,cAAgBT,OAAU,CAACzI,GAASA,GAXvE,mBAWlBmJ,EAXkB,KAWFC,EAXE,KAanB3P,EAAaW,YAAYL,GAEzBsP,EAAoB9K,YAAU,CAAE+K,OAAQZ,EAAY,EAAI,MAExDa,EAAaC,YAASL,EAAe1N,OAAQ,CACjDgD,KAAM,CAAED,QAAS,EAAG1D,YAAa,GAAI2O,WAAY,EAAG5O,UAAW,2BAC/D6O,GAAI,CAAElL,QAAS,EAAG1D,WAAY,EAAG2O,UAAW,EAAG5O,UAAW,uBAE1D8D,OAAQA,IAAOI,QAoCjB,SAASuL,EAAqB7P,GACxB0O,EAAe,KAAO1O,EAAOW,OAAOd,GAAI8O,EAAkB,CAAC3O,EAAOW,OAAOd,KACxE8O,EAAkB,IACvBoB,EAAW/P,EAAOW,OAAOd,IAE3B,SAASkQ,EAAWlG,GAClB,IAAMvD,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IACtCqI,EAAQf,QAAUsE,EAAQvD,EAAQf,MAAQ,IAE5Ce,EAAQf,MAAQsE,EAChBqE,GAAa,IAEfrN,EAAM0F,WAAWD,GA5CnBO,qBAAU,WACHoH,GAAWxO,EAASV,EAAc4C,MACtC,CAACsM,EAAWtM,EAAIlC,IAEnBoH,qBAAU,WACJ7H,IAAe2C,GAAIuM,GAAa,KACnC,CAAClP,EAAY2C,IAIhBkF,qBAAU,WACR2H,EAAgB5M,EAAK0L,QAAO,SAAAxE,GAAI,OAAIA,EAAKlC,cAAcY,SAAS2G,EAAQvH,qBACvE,CAAChF,EAAMuM,IAoCV,IAAMsD,EAAWxD,EAAY,GAC3BM,EAAatN,KAAI,SAAC6H,EAAMxH,GACtB,IAAMoQ,EAAahD,EAAe3E,WAAU,SAAAhN,GAAK,OAAI+L,IAAS/L,MAAU,EAClE4U,EAAYD,EAAa,kBAAC,IAAD,CAAiBzR,KAAM2R,MAAc,GACpE,OAAO,yBAAKtQ,IAAKA,EAAKzB,GAAIiJ,EAAMhJ,UAAS,0BAAqB4R,EAAa,qBAAuB,IAAM3R,QAAS8P,GAC9G8B,EACA7I,MAMD+I,EAAgB/C,EAAW7N,KAAI,SAACJ,EAAOM,GAC3C,IAAM2H,EAAO4F,EAAevN,GAC5B,MAAa,KAAT2H,EAAoB,kBAAC,IAASrE,IAAV,CAAc3E,UAAU,oBAAoBK,MAAOU,EAAOS,IAAKH,GAAQ2H,EAAK,4BAAQjJ,GAAIiJ,EAAMhJ,UAAU,iBACzH,MAGT,OACE+B,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WAEb,4BAAKyB,GACL,yBAAKzB,UAAU,eAAeC,QA7DtC,SAA0BC,GACxB,IAAMW,EAASX,EAAOW,OACtB,GAAyB,iBAArBA,EAAOb,WAAqD,uBAArBa,EAAOb,UAAoCoO,GAAcD,QAC/F,GAAyB,gBAArBtN,EAAOb,UAA6B,CAC3C,IAAMgS,EAAanR,EAAOoR,WAAWC,UAClB,KAAfF,IACF/B,EAAW,IACXpB,EAAkBD,EAAepB,QAAO,SAAAxE,GAAI,OAAIA,IAASgJ,UAuDrD,yBAAKhS,UAAU,sBACZ+R,GAEH,kBAAC,IAAD,CAAiB5R,KAAMgO,EAAYgE,IAAcC,IAAWnS,QAtDtE,SAA8BC,GAC5BkO,GAAcD,OAuDR,kBAAC,IAASxJ,IAAV,CAActE,MAAOyO,EAAmB9O,UAAU,cAChD,yBAAKA,UAAU,wBACb,2BAAOU,KAAK,OAAO2R,YAAY,SAASrS,UAAU,oBAAoB/C,MAAOoR,EAASzN,SAAU,SAAA0M,GAAC,OAAIgB,EAAWhB,EAAEzM,OAAO5D,UACzH,kBAAC,IAAD,CAAiBkD,KAAM8E,IAAShF,QAAS,SAAAqN,GAAC,OAAIgB,EAAW,QAE3D,yBAAKtO,UAAU,oBAAoB2R,MAMzC,ICGSlG,OA3Hf,SAAsB1K,GAEpB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAgEpD,EAAhEoD,KAAME,EAA0DtD,EAA1DsD,MAAOI,EAAmD1D,EAAnD0D,GAAIC,EAA+C3D,EAA/C2D,KAHE,EAG6C3D,EAAzCmZ,qBAHJ,MAGoB,GAHpB,IAG6CnZ,EAArB4D,iBAHxB,SAIrBpC,EAAWC,cAEXf,EAAYgB,YAAYN,GANH,EAQOwG,oBAAS,GARhB,mBAQpBoI,EARoB,KAQTC,EARS,OASGrI,mBAAS,IATZ,mBASpBsI,EAToB,KASXC,EATW,OAUavI,mBAAS,IAVtB,mBAUpB0I,EAVoB,KAUNC,EAVM,OAWiB3I,mBAASuR,GAAiB,IAX3C,mBAWpB1I,EAXoB,KAWJC,EAXI,KAarB3P,EAAaW,YAAYL,GAEzBsP,EAAoB9K,YAAU,CAAE+K,OAAQZ,EAAY,EAAI,MAExDa,EAAaC,YAASL,EAAe1N,OAAQ,CACjDgD,KAAM,CAAED,QAAS,EAAG1D,YAAa,GAAI2O,WAAY,EAAG5O,UAAW,2BAC/D6O,GAAI,CAAElL,QAAS,EAAG1D,WAAY,EAAG2O,UAAW,EAAG5O,UAAW,uBAE1D8D,OAAQ,CAAEmT,KAAM,EAAGC,QAAS,IAAKC,SAAU,MAqC7C,SAAS1H,EAAqB7P,GAC5B,IAAM8P,EAAc9P,EAAOW,OAAOd,GAE5B2X,EAAa9I,EAAe3E,WAAU,SAAAjB,GAAI,OAAIA,IAASgH,KAAe,EAA1D,sBAAmEpB,GAAnE,CAAmFoB,IACjGpB,EAAepB,QAAO,SAAAxE,GAAI,OAAIA,IAASgH,KAC3CnB,EAAkB6I,GAClBzH,EAAWyH,GAEb,SAASzH,EAAWlG,GAClB,IAAMvD,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC1CqI,EAAQ8Q,cAAgBvN,EACxBhJ,EAAM0F,WAAWD,GA5CnBO,qBAAU,WACHoH,GAAWxO,EAASV,EAAc4C,MACtC,CAACsM,EAAWtM,EAAIlC,IAEnBoH,qBAAU,WACJ7H,IAAe2C,GAAIuM,GAAa,KACnC,CAAClP,EAAY2C,IAIhBkF,qBAAU,WACR2H,EAAgB5M,EAAK0L,QAAO,SAAAxE,GAAI,OAAIA,EAAKlC,cAAcY,SAAS2G,EAAQvH,qBACvE,CAAChF,EAAMuM,IAoCV,IAAMsD,EAAWxD,EAAY,GAC3BM,EAAatN,KAAI,SAAC6H,EAAMxH,GACtB,IAAMoQ,EAAahD,EAAe3E,WAAU,SAAAhN,GAAK,OAAI+L,IAAS/L,MAAU,EAClE4U,EAAYD,EAAa,kBAAC,IAAD,CAAiBzR,KAAM2R,MAAc,GACpE,OAAO,yBAAKtQ,IAAKA,EAAKzB,GAAIiJ,EAAMhJ,UAAS,0BAAqB4R,EAAa,qBAAuB,IAAM3R,QAAS8P,GAC9G8B,EACA7I,MAMD+I,EAAgB/C,EAAW7N,KAAI,SAACJ,EAAOM,GAC3C,IAAM2H,EAAO4F,EAAevN,GAC5B,MAAa,KAAT2H,EAAoB,kBAAC,IAASrE,IAAV,CAAc3E,UAAU,oBAAoBK,MAAOU,EAAOS,IAAKH,GAAQ2H,EAAK,4BAAQjJ,GAAIiJ,EAAMhJ,UAAU,iBACzH,MAGT,OACE+B,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WAEb,4BAAKyB,GACL,yBAAKzB,UAAU,eAAeC,QA7DtC,SAA0BC,GACxB,IAAMW,EAASX,EAAOW,OACtB,GAAyB,iBAArBA,EAAOb,WAAqD,uBAArBa,EAAOb,UAAoCoO,GAAcD,QAC/F,GAAyB,gBAArBtN,EAAOb,UAA6B,CAC3C,IAAMgS,EAAanR,EAAOoR,WAAWC,UACrC,GAAmB,KAAfF,EAAmB,CACrB,IAAM0F,EAAY9I,EAAepB,QAAO,SAAAxE,GAAI,OAAIA,IAASgJ,KACzDnD,EAAkB6I,GAClBzH,EAAWyH,OAsDP,yBAAK1X,UAAU,sBACZ+R,GAEH,kBAAC,IAAD,CAAiB5R,KAAMgO,EAAYgE,IAAcC,IAAWnS,QArDtE,SAA8BC,GAC5BkO,GAAcD,OAsDR,kBAAC,IAASxJ,IAAV,CAActE,MAAOyO,EAAmB9O,UAAU,cAChD,yBAAKA,UAAU,wBACb,2BAAOU,KAAK,OAAO2R,YAAY,SAASrS,UAAU,oBAAoB/C,MAAOoR,EAASzN,SAAU,SAAA0M,GAAC,OAAIgB,EAAWhB,EAAEzM,OAAO5D,UACzH,kBAAC,IAAD,CAAiBkD,KAAM8E,IAAShF,QAAS,SAAAqN,GAAC,OAAIgB,EAAW,QAE3D,yBAAKtO,UAAU,oBAAoB2R,MAMzC,I,6BCxHS,SAASgG,GAAU5W,GAIhC,IAAM6W,EAAsB7W,EAAMyR,OAAOC,QAAQ,KAAM,KAJhB,EAKL1M,mBAAShF,EAAM8W,WALV,mBAKhCA,EALgC,KAKrBC,EALqB,KAiBvC,IvBqCiCC,EuBrC3BC,EAA2B,KAAdH,EAAmBrF,aAAOyF,cvBqCZF,EuBrCwCF,EvBsCzD,IAAIrO,MAAK,IAAIA,MAAOoK,eAAiB,IAAMmE,IuBtC0BhX,EAAMiS,UAAUkF,SAAUN,GAE7G,GAEF,OACE,yBAAK5X,UAAW4E,KAAOuT,eACrB,2BACEzX,KAAK,OACL3D,KAAK,GACLgD,GAAG,GACHC,UAAW4E,KAAOwT,WAClBnb,MAAO4a,EACPjX,SAAU,SAAC0M,GAAD,OAjBSvD,EAiBcuD,EAAEzM,OAAO5D,MAhB9C6a,EAAa/N,QACbhJ,EAAMsX,aAAatO,GAFrB,IAAyBA,KAmBpBiO,EACD,kBAAC,IAAD,CACEhY,UAAW4E,KAAO2O,SAClBpT,KAAM8E,IACNhF,QA5BN,SAAwBC,GACtB4X,EAAa,IACb/W,EAAMsX,aAAa,QCuCR3M,OAlDf,SAAc3K,GAEZ,IAAM5C,EAAO4C,EAAMa,YACXL,EAA4GpD,EAA5GoD,KAAME,EAAsGtD,EAAtGsD,MAAOI,EAA+F1D,EAA/F0D,GAHF,EAGiG1D,EAA3FqV,sBAHN,MAGuB,WAHvB,IAGiGrV,EAA9DsV,eAHnC,WAGiGtV,EAA7C4D,iBAHpD,WAGiG5D,EAA3B+Z,eAHtE,MAGgF,EAHhF,EAGmFI,EAAcna,EAAdma,UAEhGzZ,EAAYgB,YAAYN,GAExBgZ,EAA6B,KAAdD,QAAkC9V,IAAd8V,EAArB,WACf,IAAI9O,MAAOgP,WAAa,GACzB,KAAM,IAAIhP,MAAOgP,YAEjB,IAAIhP,MAAOgP,WAJK,aAIS,IAAIhP,MAAOiP,aAAe,GACjD,KAAM,IAAIjP,MAAOiP,cAEjB,IAAIjP,MAAOiP,cAEfH,EAhBiB,EAmBevS,mBAAU0N,EAAwB,GAAd8E,GAnBnC,mBAmBZV,EAnBY,KAmBDC,EAnBC,KAgCnB,OACE/V,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,kBAACkW,GAAD,CAAWnF,OAAQgB,EAAgBqE,UAAWA,EAAW7E,UAAW,CAAEkF,WAAWG,aAAc,SAACpb,GAAD,OArBvG,SAA6B8a,GAC3B7N,QAAQC,IAAR,wCAAkD4N,GAClDD,EAAaC,GAEb,IAAMvR,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAC5B,KAAV4Z,EAAcvR,EAAQ8R,UAAYP,SAC1BvR,EAAQ8R,UACpB9R,EAAQiN,QAAqB,KAAVsE,EACnBhX,EAAM0F,WAAWD,GAa+FkS,CAAoBzb,QAIlI,I,oBC5CS,SAAS0b,GAAc5X,GAEpC,IAAM6X,EAAsB7X,EAAMyR,OAAOC,QAAQ,OAAQ,OAAOA,QAAQ,KAAM,KAGxEoG,EAAgB9X,EAAM8X,cAGxBnG,EAA+B,KAAlBmG,EAAD,UAA4BrG,aAAO,IAAIhJ,KAAKqP,GAAgB,eAAkBrG,aAAO,IAAIhJ,KAAQ,cAC7GqO,EAA+B,KAAlBgB,EAAD,UAA4B,IAAIrP,KAAKqP,GAAeC,uBAAyB,IAAItP,MAAOsP,qBAmBxG,IAAMC,EAAyC,KAAlBF,EAAwBrG,aAAO,IAAIhJ,KAAKqP,GAAgBD,GAAuB,GAE5G,OACE,yBAAK5Y,UAAW4E,KAAOoU,mBACrB,6BACE,2BAAOtY,KAAK,OAAOV,UAAW4E,KAAOwO,WAAYrW,KAAK,GAAGgD,GAAG,GAAGa,SAtBrE,SAA6BV,GAE3BwS,EAAYxS,EAAOW,OAAO5D,MAC1B8D,EAAMkY,iBAAiB/Y,EAAOW,OAAO5D,MAAQ,IAAM4a,MAoB/C,2BAAOnX,KAAK,OAAOV,UAAW4E,KAAOwT,WAAYrb,KAAK,GAAGgD,GAAG,GAAGa,SAlBrE,SAA6BV,GAE3B2X,EAAY3X,EAAOW,OAAO5D,MAC1B8D,EAAMkY,iBAAiBvG,EAAY,IAAMxS,EAAOW,OAAO5D,WAiBpD8b,EACD,kBAAC,IAAD,CACE/Y,UAAW4E,KAAO2O,SAClBpT,KAAM8E,IACNhF,QAlBN,WACEyS,EAAY,GACZmF,EAAY,GACZ9W,EAAMkY,iBAAiB,QCsBZtN,OA/Cf,SAAkB5K,GAEhB,IAAM5C,EAAO4C,EAAMa,YACXL,EAA8GpD,EAA9GoD,KAAME,EAAwGtD,EAAxGsD,MAAOI,EAAiG1D,EAAjG0D,GAHE,EAG+F1D,EAA7FqV,sBAHF,MAGmB,sBAHnB,IAG+FrV,EAArDsV,eAH1C,WAG+FtV,EAApC4D,iBAH3D,SAG6EoT,EAAkBhX,EAAlBgX,cAE9FtW,EAAYgB,YAAYN,GAExB2Z,EAAqC,KAAlB/D,QAA0C3S,IAAlB2S,EAAzB,UACnB7L,KAAiBsK,eAAiB,IAAMtK,KAAiBwP,sBAE5D3D,EAVqB,EAYmBpP,mBAAU0N,EAA4B,GAAlByF,GAZvC,mBAYhBL,EAZgB,KAYDM,EAZC,KA6BvB,OACEpX,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,kBAACkX,GAAD,CAAenG,OAAQgB,EAAgBqF,cAAeA,EAAeI,iBAAkB,SAAChc,GAAD,OAtB/F,SAAiCmc,GAG/BD,EAAiBC,GAEjB,IAAM5S,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IACxB,KAAdib,EAAkB5S,EAAQ2O,cAAgBiE,SAClC5S,EAAQ2O,cACpB3O,EAAQiN,QAAyB,KAAd2F,EACnBrY,EAAM0F,WAAWD,GAauF6S,CAAwBpc,QAI9H,IC5CS2O,OARf,WACE,OACE,2CCMWC,OARf,WACE,OACE,2CCgCWC,OA7Bf,SAA4B/K,GAE1B,IAAM5C,EAAO4C,EAAMa,YACXL,EAAsCpD,EAAtCoD,KAAME,EAAgCtD,EAAhCsD,MAAOI,EAAyB1D,EAAzB0D,GAHY,EAGa1D,EAArB4D,iBAHQ,SAM3BlD,EAAYgB,YAAYN,GAE9B,OACEwC,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAMP,ICtBSsK,OARf,WACE,OACE,oDCMWC,OARf,WACE,OACE,8DCgCWC,OA7Bf,SAAsBlL,GAEpB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAsCpD,EAAtCoD,KAAME,EAAgCtD,EAAhCsD,MAAOI,EAAyB1D,EAAzB0D,GAHM,EAGmB1D,EAArB4D,iBAHE,SAMrBlD,EAAYgB,YAAYN,GAE9B,OACEwC,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAMP,ICtBSyK,OARf,WACE,OACE,uDCMWC,OARf,WACE,OACE,gECgCWC,OA7Bf,SAAwBrL,GAEtB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAsCpD,EAAtCoD,KAAME,EAAgCtD,EAAhCsD,MAAOI,EAAyB1D,EAAzB0D,GAHQ,EAGiB1D,EAArB4D,iBAHI,SAMvBlD,EAAYgB,YAAYN,GAE9B,OACEwC,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAMP,ICtBS4K,OARf,WACE,OACE,yDCGW,SAASC,GAAavL,GACnC,IAAM5C,EAAO4C,EAAMa,YAGXC,EAAwG1D,EAAxG0D,GAAIJ,EAAoGtD,EAApGsD,MAAOF,EAA6FpD,EAA7FoD,KAJuB,EAIsEpD,EAAvF4D,iBAJiB,SAICuX,EAAqEnb,EAArEmb,UAAWC,EAA0Dpb,EAA1Dob,UAAWC,EAA+Crb,EAA/Cqb,UAAWC,EAAoCtb,EAApCsb,OAAQrE,EAA4BjX,EAA5BiX,QAASC,EAAmBlX,EAAnBkX,KAAM/T,EAAanD,EAAbmD,SAE7FzC,EAAYgB,YAAYN,GAExBma,EAAaD,EAAOE,WARgB,EAUE5T,mBAAS,IAVX,6BAe1C,SAAS6T,EAAmBC,GAC1B,IAAMC,EAAaD,EAAU1R,MAAM,KAI7B3B,EAAUtJ,KAAKC,MAAMD,KAAKY,UAAUK,IAE1C,GAAkB,WAAdmb,EACF,IAAK,IAAI/D,EAAI,EAAGA,EAAI/O,EAAQlF,SAASJ,OAAQqU,IAC3C,IAAK,IAAIC,EAAI,EAAGA,EAAIhP,EAAQlF,SAASiU,GAAGjU,SAASJ,OAAQsU,IACnDhP,EAAQlF,SAASiU,GAAGjU,SAASkU,GAAG/P,QAAOe,EAAQlF,SAASiU,GAAGjU,SAASkU,GAAG/P,OAAQ,GAIzF,IAAMsU,OAAwEvX,IAA1DlB,EAASwY,EAAW,IAAIxY,SAASwY,EAAW,IAAIrU,OAAsBnE,EAASwY,EAAW,IAAIxY,SAASwY,EAAW,IAAIrU,MAE1Ie,EAAQlF,SAASwY,EAAW,IAAIxY,SAASwY,EAAW,IAAIrU,OAASsU,EACjEhZ,EAAM0F,WAAWD,GAInB,IADA,IAAI8O,EAAe,GACVC,EAAI,EAAGA,EAAIjU,EAASJ,OAAQqU,IAEnC,IAFyC,IAAD,WAE/BC,GAEP,IAAMpU,EAAUE,EAASiU,GAAGjU,SAASkU,GAC/BzV,EAAE,UAAMwV,EAAN,YAAWC,GACb9E,EAAK,UAAM+I,EAAOO,cAAc5I,KAA3B,aAAoCqI,EAAOO,cAAcC,OAAO1E,GAAhE,aAAuEkE,EAAOS,cAAc9I,KAA5F,aAAqGqI,EAAOS,cAAcD,OAAOzE,IAE5IF,EAAaxS,KAAK,yBAAKtB,IAAKzB,EAAIA,GAAIA,EAAI2Q,MAAOA,EAAO1Q,UAAU,2BAA2BK,MAAO,CAAEqE,gBAAiBtD,EAAQqE,MAAQrE,EAAQ8V,wBAA0B9V,EAAQ+V,iBAAmBlX,QAAS,kBAAM2Z,EAAmB7Z,KAAMqB,EAAQK,SAN3O+T,EAAI,EAAGA,EAAIlU,EAASiU,GAAGjU,SAASJ,OAAQsU,IAAM,EAA9CA,GAaX,IAAM2E,EAAgBV,EAAOS,cAAcD,OAAO9Y,KAAI,SAAC6H,EAAM3H,GAAP,OAAiB,wBAAIG,IAAKH,GAAQ2H,MAClFoR,EAAgBX,EAAOO,cAAcC,OAAO9Y,KAAI,SAAC6H,EAAM3H,GAAP,OAAiB,wBAAIG,IAAKH,GAAQ2H,MAElFqR,EAASX,EACb,yBAAK1Z,UAAU,iBACb,6BACE,4BAAKyZ,EAAOO,cAAc5I,KAA1B,KACCgJ,GAEH,6BACE,4BAAKX,EAAOS,cAAc9I,KAA1B,KACC+I,IAIL,GAGF,OACEpY,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAE5E,yBAAKpC,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,gBAAgBwZ,GAC9B,yBAAKnZ,MAAO,CAAEf,QAAS,OAAQsW,oBAAoB,UAAD,OAAYR,EAAZ,UAA6BS,iBAAiB,UAAD,OAAYR,EAAZ,YAC5FC,GAEH,wBAAItV,UAAU,gBAAgBuZ,IAEhC,yBAAKvZ,UAAU,iBACZqa,MAMT,GC3FS9N,OARf,WACE,OACE,qDCyCWC,OAnCf,SAA8BzL,GAE5B,IAAM5C,EAAO4C,EAAMa,YACXL,EAAsCpD,EAAtCoD,KAAME,EAAgCtD,EAAhCsD,MAAOI,EAAyB1D,EAAzB0D,GAHc,EAGW1D,EAArB4D,iBAHU,SAM7BpC,EAAWC,cACXf,EAAYgB,YAAYN,GAO9B,OACEwC,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,oBAAoBC,QAf9C,SAAmCC,GAEjCP,EAAS5B,EAAkB,aAclB0D,KAMP,ICLSgL,OA7Bf,SAAwB1L,GAEtB,IAAM5C,EAAO4C,EAAMa,YACXL,EAAsCpD,EAAtCoD,KAAME,EAAgCtD,EAAhCsD,MAAOI,EAAyB1D,EAAzB0D,GAHQ,EAGiB1D,EAArB4D,iBAHI,SAMvBlD,EAAYgB,YAAYN,GAE9B,OACEwC,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAMP,ICISiL,OA7Bf,SAA4B3L,GAE1B,IAAM5C,EAAO4C,EAAMa,YACXL,EAAsCpD,EAAtCoD,KAAME,EAAgCtD,EAAhCsD,MAAOI,EAAyB1D,EAAzB0D,GAHY,EAGa1D,EAArB4D,iBAHQ,SAM3BlD,EAAYgB,YAAYN,GAE9B,OACEwC,EACE,yBAAK/B,UAAU,qBACb,yBAAKA,UAAS,cAASnB,EAAY,GAAK,WACrC0C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU9E,KAAK,GAAGmF,KAAK,KAAKC,KAAK,IAAIlF,MAAOC,KAAKY,UAAUK,GAAOiE,UAAQ,KAG5E,yBAAKpC,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAMP,I,oBCkCS,SAAS6Y,KAEtB,IAAM/P,EAAa,CACjBzJ,0BACAa,mBACAoB,QACAwC,OACA+E,cACAE,wBACAC,yBACAC,OACAlB,QACAmB,SACAC,eACAC,uBACAC,aACAC,iBACAC,aACAC,qBACAC,iBACAC,UACAC,YACAC,WACAC,WACAC,gBACAC,cACAC,gBACAC,QACAC,YACAC,aACAC,aACAC,sBACAC,sBACAC,gCACAC,gBACAC,yBACAC,kCACAC,kBACAC,2BACAC,gBACAC,uBACAC,wBACAC,kBACAC,uBAGIvO,EAAO0B,YAAY3B,GACnBW,EAAYgB,YAAYN,GACxBT,EAAWe,YAAYJ,GACvB8a,EAAmB1a,YAAYR,GAC/B/B,EAAiBuC,YAAYzB,GAC7BuB,EAAWC,cAEX4a,EAAkB3a,aAAY,SAAAnC,GAAK,OAAIA,EAAMiB,WAAW1B,SACxDwd,OAAuCjY,IAAlBrE,EAAK8C,SAA0B9C,EAAK8C,SAASuZ,GAAmB,GAE5ElZ,GAAamZ,EAApBhZ,MAAoBgZ,EAAbnZ,UAxDoB,EA0DHyE,mBAAS,IA1DN,mBA0D5B8G,EA1D4B,KA0DlB9N,EA1DkB,KAkJnC,SAAS2b,EAAmBC,GAE1B,IAAMC,EAAiBzc,EAAK8C,SAASuZ,GAEjCK,EAAW,GAiCf,OA/BAD,EAAetZ,SAASsB,SAAQ,SAACoG,EAAM3H,GACjC2H,EAAKC,eAAe,aAEtBD,EAAK1H,SAASsB,SAAQ,SAACsG,EAASC,GAC1BD,EAAQD,eAAe,aAEzBC,EAAQ5H,SAASsB,SAAQ,SAACwG,EAAYC,GAChCD,EAAWvH,KAAO8Y,IAEpBE,EAAW,CAAE/R,QAAS0R,EAAiBnZ,QAAO8H,WAAUE,eAC5CD,MAKdF,EAAQrH,KAAO8Y,IAEjBE,EAAW,CAAE/R,QAAS0R,EAAiBnZ,QAAO8H,YAClCD,MAKdF,EAAKnH,KAAO8Y,IAEdE,EAAW,CAAE/R,QAAS0R,EAAiBnZ,SAC3BlD,EAAK8C,SAASuZ,GAAiBlZ,SAASD,OAKjDwZ,EAOT,SAASxN,EAAkB5E,GACzByB,QAAQC,IAAI,eAAgB7M,GACL,WAAnBA,GAA6BqC,EAAS5B,EAAkB,aAE5D,IAAM+c,EAAcJ,EAAmBjS,EAAM5G,IAGzCkZ,EAAe7d,KAAKC,MAAMD,KAAKY,UAAUK,IAG7C4c,EAAa9Z,SAAS6Z,EAAYhS,SAASxH,SAASwZ,EAAYzZ,OAASoH,EACzE9I,EAASlC,EAAQsd,IA7InBhU,qBAAU,WAGR,QAAiBvE,IAAblB,EAAwB,CAC1B,IAAM0Z,EAAuB1Z,EAASH,KAAI,SAACC,EAASC,GAClD,IAEIoU,EAFEzI,EAAgB/E,EAAe7G,EAAQG,MAG7C,QAAkCiB,IAA9B+H,EAAWyC,GAA8B,CAC3C,IAAMC,EAAY1C,EAAWyC,GAC7ByI,EAAmB,kBAACxI,EAAD,CAAWzL,IAAG,UAAKwL,EAAc0I,UAAU,EAAG,GAAG5O,cAAnC,YAAoD1F,EAAQuU,WAAa/T,YAAaR,EAASqF,WAAY4G,IAE9I,OAAOoI,KAET1W,EAAYic,QAETjc,EAAY,MAChB,CAACuC,IAGJyF,qBAAU,WAGR,IAAIgU,EAAe7d,KAAKC,MAAMD,KAAKY,UAAUK,SAELqE,IAApC+X,EAAiB5X,gBAA8B4X,EAAiB5X,eAAeC,SAAQ,SAAAC,GACzF,IAAMiY,EAAcJ,EAAmB7X,GAInCiY,EAAY7R,eAAe,gBAGtB6R,EAAY7R,eAAe,YAFlC8R,EAAa9Z,SAAS6Z,EAAYhS,SAASxH,SAASwZ,EAAYzZ,OAAOC,SAASwZ,EAAY3R,UAAU7H,SAASwZ,EAAYzR,aAAatH,WAAY,EAMpJgZ,EAAa9Z,SAAS6Z,EAAYhS,SAASxH,SAASwZ,EAAYzZ,OAAOU,WAAY,UAU9CS,IAArC+X,EAAiBhY,iBAA+BgY,EAAiBhY,gBAAgBK,SAAQ,SAAAC,GAC3F,IAAMiY,EAAcJ,EAAmB7X,GAInCiY,EAAY7R,eAAe,gBAGtB6R,EAAY7R,eAAe,YAFlC8R,EAAa9Z,SAAS6Z,EAAYhS,SAASxH,SAASwZ,EAAYzZ,OAAOC,SAASwZ,EAAY3R,UAAU7H,SAASwZ,EAAYzR,aAAatH,WAAY,EAMpJgZ,EAAa9Z,SAAS6Z,EAAYhS,SAASxH,SAASwZ,EAAYzZ,OAAOU,WAAY,KAgBvFpC,EAASlC,EAAQsd,MAChB,CAACR,IAuEJ,IAAMU,EAA8B,YAAnB3d,EACf,yBAAK0C,UAAU,YACZkb,MAAM,IAAIC,KAAK,IAAIha,KAAI,SAAC6H,EAAM3H,GAAP,OAAiB,yBAAKG,IAAKH,EAAOrB,UAAS,UAAKqB,EAAQ,IAAM,EAAI,uBAAyB,GAAhD,wBAGrE,GAEF,OACE,yBAAKrB,UAAU,SAEb,yBAAKA,UAAS,UAAKlB,EAASoC,OAAS,EAAI,GAAK,SAAhC,eACXpC,GAGFmc,EAEApO,EAED,8BACE9P,KAAK,aACLgD,GAAG,aACHC,UAAWnB,EAAS,UAAM+F,KAAOwW,OAAU,SAE3CjZ,KAAK,KACLlF,MAAOC,KAAKY,UAAUwD,GACtBV,SAAU,SAAA0M,GAAC,OAAI3N,EAASlC,EAAQP,KAAKC,MAAMmQ,EAAEzM,OAAO5D,a,wBC1O7Coe,OAjDf,WAEE,IAAM1b,EAAWC,cAEX0b,EAAWzb,YAAYnB,GACvBP,EAAO0B,YAAY3B,GAGnBqd,EAAapd,EAAK8C,SAAY9C,EAAK8C,SAASC,OAAS,EACrDsa,EAAYrd,EAAK8C,SAAY9C,EAAK8C,SAASqa,GAAU7Z,MAAQ,GAmBnE,OACE,yBAAKzB,UAAW4E,KAAO6W,KACrB,4BAAQzb,UAAU,kBAAkBoC,SAAwB,IAAdmZ,GAAgC,IAAbD,EAAgBrb,QAAS,SAACqN,GAd7F3N,EAASpB,EAAY,MAejB,kBAAC,IAAD,CAAiB4B,KAAMub,OAEzB,4BAAQ1b,UAAU,kBAAkBoC,SAAwB,IAAdmZ,GAAgC,IAAbD,EAAgBrb,QAAS,SAACqN,GAdzFgO,EAAW,GAAG3b,EAASnB,OAevB,kBAAC,IAAD,CAAiB2B,KAAMwb,OAEzB,yBAAK3b,UAAW4E,KAAO8L,OACrB,4BAAK8K,IAEP,4BAAQxb,UAAU,kBAAkBoC,SAAwB,IAAdmZ,GAAmBD,IAAaC,EAAY,EAAGtb,QAAS,SAACqN,GAjBrGgO,EAAWC,EAAY,GAAG5b,EAASlB,OAkBnC,kBAAC,IAAD,CAAiB0B,KAAMyb,OAEzB,4BAAQ5b,UAAU,kBAAkBoC,SAAwB,IAAdmZ,GAAmBD,IAAaC,EAAY,EAAGtb,QAAS,SAACqN,GAjBzG3N,EAASpB,EAAYgd,EAAY,MAkB7B,kBAAC,IAAD,CAAiBpb,KAAM0b,S,iDCjDhB,SAASC,GAAM/a,GAAQ,IAE5B2C,EAA0D3C,EAA1D2C,WAAYC,EAA8C5C,EAA9C4C,iBAAkBE,EAA4B9C,EAA5B8C,IAAKC,EAAuB/C,EAAvB+C,SAAUiY,EAAahb,EAAbgb,SAC/ChY,EAAsBC,YAC1B,CACEC,QAASP,EAAa,EAAI,EAC1BQ,KAAM,CAAED,QAAS,EAAGE,OAAQ,IAC5BC,OAAQA,IAAOC,SAGb2X,EAAmBhY,YACvB,CACEC,QAASP,EAAa,EAAI,EAC1Ba,IAAKb,EAAa,GAAK,GACvBQ,KAAM,CAAED,QAAS,GACjBG,OAAQA,IAAOI,QAQnB,IAAMC,EAAgBX,EAAW,CAAEY,gBAAiBZ,GAAa,GAvB9B,EAyBHiC,mBAAS,IAzBN,mBAyB5BkW,EAzB4B,KAyBlBC,EAzBkB,OA0BHnW,mBAAS,IA1BN,mBA0B5BoW,EA1B4B,KA0BlBC,EA1BkB,OA2BPrW,mBAAS,IA3BF,mBA2B5BsW,EA3B4B,KA2BpBC,EA3BoB,KA6BnC,OACE,kBAAC,IAAS3X,IAAV,CAActE,MAAO0D,GACnB,yBACEhE,GAAG,WACHC,UAAS,UAAK4E,KAAO2X,cAAZ,YAA6B7Y,EAAa,GAAKkB,KAAO4X,sBAC/Dvc,QAfN,SAAgCC,GACL,aAArBA,EAAOW,OAAOd,IAAmB4D,KAejCtD,MAAOoE,GACP,kBAAC,IAASE,IAAV,CAActE,MAAO2b,GACnB,yBACEhc,UAAW4E,KAAO6X,eAClBpc,MAAOwD,GACP,yBAAK7D,UAAW4E,KAAO8X,WAAYzc,QAAS0D,GAC1C,kBAAC,IAAD,CAAiBxD,KAAM8E,OAEzB,yBAAKjF,UAAW4E,KAAO+X,aACrB,kBAAC,IAAD,CAAiBxc,KAAMyc,OAEzB,yBAAK5c,UAAW4E,KAAOiY,cACrB,8BACE,2BAAOpc,QAAQ,YAAf,YACA,2BAAOC,KAAK,OAAO3D,KAAK,WAAWgD,GAAG,WAAWa,SAAU,SAAA0M,GAAC,OAAI4O,EAAY5O,EAAEzM,OAAO5D,QAAQ6f,QAAS,kBAAM/b,EAAMgc,gBAClH,2BAAOtc,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAW3D,KAAK,WAAWgD,GAAG,WAAWa,SAAU,SAAA0M,GAAC,OAAI8O,EAAY9O,EAAEzM,OAAO5D,QAAQ6f,QAAS,kBAAM/b,EAAMgc,gBACtH,2BAAOtc,QAAQ,UAAf,UACA,2BAAOC,KAAK,OAAO3D,KAAK,SAASgD,GAAG,SAASa,SAAU,SAAA0M,GAAC,OAAIgP,EAAUhP,EAAEzM,OAAO5D,QAAQ6f,QAAS,kBAAM/b,EAAMgc,kBAGhH,yBAAK/c,UAAW4E,KAAOoY,aACrB,4BAAQhd,UAAU,kBAAkBC,QAAS,SAAAqN,GAAC,OAAIvM,EAAMkc,SAAShB,EAAUE,EAAUE,KAArF,UACCN,O,wBCvCA,SAASmB,GAAiBnc,GAAQ,IAAD,EAEhBgF,mBAAS,IAFO,mBAEvCsI,EAFuC,KAE9BC,EAF8B,KAGxC6O,EAAQC,iBAAO,MAEfC,EAAQtc,EAAMsc,MACdC,EAAgBvc,EAAMuc,cACtBpI,EAAQnU,EAAMmU,MAGdzG,EAAeJ,EAAQnN,OAAS,EAAImc,EAAM7P,QAAO,SAAAxE,GAAI,OAAIkF,OAAOlF,EAAKuU,OAAOzW,cAAcY,SAAS2G,EAAQvH,kBAAkBuW,EAVrF,EArBhD,SAAoBG,GAAmB,IAAD,EACFzX,mBAASyX,GADP,mBAC7BC,EAD6B,KAClBC,EADkB,KAE9BC,EAAMP,iBAAO,MAGbQ,EAAqB,SAACC,GACtBF,EAAIG,UAAYH,EAAIG,QAAQC,SAASF,EAAMhd,SAC7C6c,GAAa,IAUjB,OANA3W,qBAAU,WAER,OADAiX,SAASC,iBAAiB,QAASL,GAAoB,GAChD,WACLI,SAASE,oBAAoB,QAASN,GAAoB,MAE3D,IACI,CAAED,MAAKF,YAAWC,gBAgBgBS,EAAW,GAA5CR,EAZsC,EAYtCA,IAAKF,EAZiC,EAYjCA,UAAWC,EAZsB,EAYtBA,aAExB,SAASU,EAAmBle,EAAQme,IAClCne,EAAOoe,kBAIHpe,EAAOqe,cAAcve,UAAU0H,SAAS,WAC1C3G,EAAMyd,aAAa,IAIjBlB,EACuBvc,EAAM0d,cAAcxU,WAAU,SAAAjB,GAAI,OAAIA,IAASqV,MAEhD,EACtBtd,EAAMyd,aAAazd,EAAM0d,cAAcjR,QAAO,SAAAxE,GAAI,OAAIA,IAASqV,MAE5Dtd,EAAMyd,aAAN,sBAAuBzd,EAAM0d,eAA7B,CAA4CJ,MAGjDtd,EAAMyd,aAAa,CAACH,IACpBX,GAAa,IAIjB3W,qBAAU,WACJoW,EAAMW,SAASX,EAAMW,QAAQnX,UAChC,CAAC8W,IAEJ,IAAMiB,EAAqB,MAAVxJ,EAAgBtQ,KAAO+Z,UAAsB,MAAVzJ,EAAgBtQ,KAAOga,WAAaha,KAAOia,UAE/F,OACE,yBAAK7e,UAAW4E,KAAOka,4BACrB,yBAAK9e,UAAW4E,KAAOma,wBAAyB9e,QAAS,SAAAqN,GAAC,OAAIoQ,GAAcD,KAC1E,yBAAKzd,UAAW4E,KAAOoa,oCACpBje,EAAM0d,cAActd,KAAI,SAAC6H,EAAM3H,GAAP,OAAiB,yBAAKG,IAAKH,EAAOrB,UAAW4E,KAAOqa,+BAC1EjW,EAAKuU,MACN,0BAAMvd,UAAW4E,KAAOsa,oBAAqBjf,QAAS,SAACqN,GAAD,OAAO8Q,EAAmB9Q,EAAGtE,KACjF,kBAAC,IAAD,CAAiB7I,KAAM8E,YAI7B,yBAAKjF,UAAW4E,KAAOua,0BACrB,kBAAC,IAAD,CAAiBhf,KAAMsd,EAAYtL,IAAcC,QAGpDqL,GAAa,yBAAKpd,MAAO,CAAE+e,SAAU,YAAcpf,UAAS,UAAK4E,KAAOya,sBAAZ,YAAqCX,GAAYf,IAAKA,GACjH,yBAAK3d,UAAW4E,KAAO0a,kCACrB,2BAAO5e,KAAK,OAAOzD,MAAOoR,EAASzN,SAAU,SAAA0M,GAAC,OAAIgB,EAAWhB,EAAEzM,OAAO5D,QAAQ0gB,IAAKR,IACnF,kBAAC,IAAD,CAAiBhd,KAAM8E,IAAShF,QAAS,SAAAqN,GAAC,OAAIgB,EAAW,QAE3D,yBAAKtO,UAAW4E,KAAO2a,iCACpB9Q,EAAatN,KAAI,SAAC6H,EAAM3H,GAAP,OAAiB,0BAAMG,IAAKH,EAAOrB,UAAS,UAAK4E,KAAO4a,WAAZ,YAA0Bze,EAAM0d,cAAcxU,WAAU,SAAAwV,GAAY,OAAIzW,EAAKuU,QAAUkC,EAAalC,UAAU,EAAI3Y,KAAO8a,uCAAyC,IAAMzf,QAAS,SAACqN,GAAD,OAAO8Q,EAAmB9Q,EAAGtE,KAAQA,EAAKuU,aCuZpRoC,OA3df,WAGE,IAAMhgB,EAAWC,cACXtC,EAAiBuC,YAAYzB,GAG7BwhB,GAFgB/f,YAAYxB,GAEnB,gCAPO,EASI0H,mBAAS,IATb,mBASfuJ,EATe,KASRuQ,EATQ,OAUE9Z,mBAAS,IAVX,mBAUf+Z,EAVe,KAUTC,EAVS,OAYUha,mBAAS,IAZnB,mBAYfia,EAZe,KAYLC,EAZK,OAaYla,mBAAS,IAbrB,mBAafma,EAbe,KAaJC,EAbI,OAcYpa,mBAAS,IAdrB,mBAcfqa,EAde,KAcJC,EAdI,OAgBwBta,mBAAS,IAhBjC,mBAgBfua,EAhBe,KAgBEC,EAhBF,OAiB4Bxa,mBAAS,IAjBrC,mBAiBfya,EAjBe,KAiBIC,EAjBJ,OAmB0B1a,mBAAS,IAnBnC,mBAmBG2a,GAnBH,aAoBgC3a,mBAAS,IApBzC,mBAoBf4a,EApBe,KAoBMC,EApBN,OAsBgC7a,mBAAS,IAtBzC,mBAsBf8a,EAtBe,KAsBMC,EAtBN,QAwBgC/a,oBAAS,GAxBzC,qBAwBfgb,GAxBe,MAwBMC,GAxBN,SAyBgCjb,qBAzBhC,qBAyBfkb,GAzBe,MAyBMC,GAzBN,SA6BgCnb,oBAAS,GA7BzC,qBA6Bfob,GA7Be,MA6BMC,GA7BN,SA8BoBrb,mBAAS,IA9B7B,qBA8Bfsb,GA9Be,MA8BAC,GA9BA,MAmCtBva,qBAAU,WACR,IAAMwa,EAAYjB,EAAgBpf,OAAS,EAAIof,EAAgB,GAAGvgB,GAAK,GAEnEwhB,EAAY,IACdd,EAAqBc,GAgRzB,SAAsBC,GAEpBR,IAAuB,GAEvB,IAAMS,EAAmB,IAAIjS,QAC7BiS,EAAiBhS,OAAO,gBAAxB,iBAAmDH,EAAMI,eACzD+R,EAAiBhS,OAAO,eAAgB,qCAExC,IAAME,EAAiB,CACrBC,OAAQ,MACRC,QAAS4R,EACT3R,SAAU,UAGZI,MAAM,GAAD,OAAI0P,EAAJ,wBAA0B4B,EAA1B,uDAA2F7R,GAC7FQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ6P,EAAajjB,KAAKC,MAAMmT,IACxB0Q,IAAuB,MAExBvP,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,MApSrCgQ,CAAaH,GAuUjB,SAAsBC,GACpBN,IAAuB,GAEvB,IAAMS,EAAmB,IAAInS,QAC7BmS,EAAiBlS,OAAO,gBAAxB,iBAAmDH,EAAMI,eACzDiS,EAAiBlS,OAAO,eAAgB,qCAExC,IAAME,EAAiB,CACrBC,OAAQ,MACRC,QAAS8R,EACT7R,SAAU,UAGZI,MAAM,GAAD,OAAI0P,EAAJ,wBAA0B4B,EAA1B,4FAAgI7R,GAClIQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ+P,EAAanjB,KAAKC,MAAMmT,IACxB4Q,IAAuB,MAExBzP,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,MA1VrCkQ,CAAaL,MAEd,CAACjB,IAGJvZ,qBAAU,WAEJ4Z,EAAoBzf,OAAS,GAC/B2gB,GAAgBlB,EAAoB,GAAG9e,IACpCsO,MAAK,SAAA2R,GACJ5X,QAAQC,IAAR,mCAA6C2X,GAC7CpB,EAAoBoB,GACpBniB,EAAS5B,EAAkB,gBAGhC,CAAC4iB,IAaJ5Z,qBAAU,WAKN,IAAIiX,EAHF6C,EAAoB3f,OAAS,IAC/BvB,EAAS5B,EAAkB,YAxET,4CA2ElBgkB,CAAgBlB,EAAoB,GAAGhf,IACpCsO,MAAK,SAAAlT,GAAK,OAAI+gB,EAAW/gB,KAEzBkT,MAAK,SAAAlT,GAAK,OACT4kB,GAAgB5kB,EAAM+kB,wBACnB7R,MAAK,SAAA2R,IAgIhB,SAAuBG,EAAWC,GAEhC,IAAMC,EAAmBvZ,GAAc1L,KAAKC,MAAM8kB,EAAUG,SAK5DF,EAAU5gB,SAASsB,SAAQ,SAAAoG,GAEzB,IAAI6R,EAAWrS,EAAwB2Z,EAAkBnZ,EAAKnH,IAC1DwgB,EAAmBxH,EAAS,GAEhC,GAAkB,WAAd7R,EAAKzH,KACPyH,EAAK1H,SAASsB,SAAQ,SAACsG,EAAS7H,GAG9B,IAFAwZ,EAAWrS,EAAwBtL,KAAKC,MAAM8kB,EAAUG,QAASlZ,EAAQrH,KAC5DX,OAAS,GAAGvB,EAASR,EAAY,gBAAD,OAAiB6J,EAAKnH,GAAtB,6BACrB,IAApBgZ,EAAS3Z,OAAb,CAEAmhB,EAAmBxH,EAAS,GAE5B,IAAMyH,EAAiBH,EAAiBlhB,SAASohB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAC5JF,EAAiBlhB,SAASohB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAArI,eAAgJC,EAAhJ,GAAmKpZ,YAMlK,GAAkB,eAAdF,EAAKzH,KAWZ5B,EAAS3B,EAAiBgL,EAAKuZ,oBAG5B,CAIH,GADI1H,EAAS3Z,OAAS,GAAGvB,EAASR,EAAY,gBAAD,OAAiB6J,EAAKnH,GAAtB,6BACrB,IAApBgZ,EAAS3Z,OAAc,OAI3B,IAAMohB,EAAiBH,EAAiBlhB,SAASohB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAChGF,EAAiBlhB,SAASohB,EAAiB,IAAI/gB,SAAS+gB,EAAiB,IAAzE,eAAoFC,EAApF,GAAuGtZ,OAuB3GrJ,EAASlC,EAAQ0kB,IAvMPK,CAAcV,EAAU5kB,KAAKC,MAAM6gB,EAASyE,UAAU,IACtD9iB,EAAS5B,EAAkB,oBAIpC,CAAC8iB,IAGJ9Z,qBAAU,WACR,GAAuB,WAAnBzJ,EAA6B,CAG/B,IAAIolB,EAAWxlB,KAAKY,UAAU,C9CnB3B,CAAEwD,SAAUuI,M8CoBfK,QAAQC,IAAR,oBAA8BuY,GAG9B,IAAM7S,EAAU,IAAIL,QAEpBK,EAAQJ,OAAO,gBAAf,iBAA0CH,EAAMI,eAGhD,IAAMiT,EAAezlB,KAAKY,UAAU,CAClC,GAAM,EACN,UAAa0iB,EACb,YAAe,GACf,MAAS,cACT,eAAkB,KAClB,uBAA0BK,EAAoBhf,GAC9C,mBAAsB,IACtB,iBAAoB,aACpB,SAAY6gB,EACZ,iBAAoB,IACpB,mBAAsB,KACtB,mBAAsB,OAGlBE,EAAqB1lB,KAAKY,UAAU6kB,GAEtCE,EAAW,IAAIC,SACnBD,EAASpT,OAAO,WAAYkT,GAE5BzY,QAAQC,IAAR,8CAAqDyY,GAErD,IAAMjT,EAAiB,CACrBC,OAAQ,OACRC,QAASA,EACTkT,KAAMF,GAkBR3S,MAAM,GAAD,OAAI0P,EAAJ,wBAA0BY,EAA1B,8BAAiEG,EAAoB9e,GAArF,WAAkG8N,GACpGQ,MAAK,SAAA6S,GAAG,OAAIA,EAAI3S,UAChBF,MAAK,SAAAG,GAAM,OAAIpG,QAAQC,IAAI,aAAcmG,MACzCmB,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,SAKxC,CAACpU,IAGJ,IAoCM2lB,GAAU,SAACC,GACf,IAAMC,EAAc,IAAI3T,QACxB2T,EAAY1T,OAAO,gBAAnB,iBAA8CyT,IAE9C,IAAMvT,EAAiB,CACrBC,OAAQ,MACRC,QAASsT,GAGXjT,MAAM,GAAD,OAAI0P,EAAJ,aAAuBjQ,GACzBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIyP,EAAQ7iB,KAAKC,MAAMmT,OAClCmB,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,OA7MnB,SA+UPmQ,GA/UO,mFA+UtB,WAA+BuB,GAA/B,oBAAAC,EAAA,6DAIQC,EAAkB,IAAI9T,SACZC,OAAO,gBAAvB,iBAAkDH,EAAMI,eACxD4T,EAAgB7T,OAAO,eAAgB,qCAEjCE,EAAiB,CACrBC,OAAQ,MACRC,QAASyT,EACTxT,SAAU,UAXd,SAcQI,MAAM,GAAD,OAAI0P,EAAJ,wBAA0BU,EAAgB,GAAGvgB,GAA7C,mCAA0EqjB,GAAezT,GACjGQ,MAAK,SAAAC,GAAQ,OAAIA,EAASjS,UAC1BgS,MAAK,SAAAG,GAGJwR,EAAWxR,KAGZmB,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,MAtBzC,gCAwBSoQ,GAxBT,4CA/UsB,sEAsYtB,WAA+ByB,GAA/B,oBAAAF,EAAA,6DAEMrF,EAAW,IAETsF,EAAkB,IAAI9T,SACZC,OAAO,gBAAvB,iBAAkDH,EAAMI,eACxD4T,EAAgB7T,OAAO,eAAgB,qCAEjCE,EAAiB,CACrBC,OAAQ,MACRC,QAASyT,EACTxT,SAAU,UAXd,SAcQI,MAAM,GAAD,OAAI0P,EAAJ,wBAA0BY,EAA1B,qBAAwD+C,GAAe5T,GAC/EQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAGJ0N,EAAW9gB,KAAKC,MAAMmT,GAAQkT,YAG/B/R,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,MAtBzC,gCAuBSsM,GAvBT,4CAtYsB,sBAmatB,IAAMyF,GAAgB1C,GAAsB,yBAAK/gB,UAAU,WAAf,yBAAuDsgB,EAAgBpf,OAAS,EAAI,oBAAsB,GAChJwiB,GAAgBzC,GAAsB,yBAAKjhB,UAAU,WAAf,yBAAuDsgB,EAAgBpf,OAAS,EAAI,oBAAsB,GAEtJ,OACE,yBAAKlB,UAAU,QAEb,4BAAQA,UAAS,0BAAqB8f,EAAK7O,UAAY,SAAW,IAAMhR,QAAS,kBAAMmhB,IAAuB,KAA9G,SAEA,yBAAKphB,UAAS,oBAAeggB,EAAS9e,OAAS,EAAI,GAAK,WACtD,wBAAIlB,UAAU,kBAAd,oBAGA,kBAACkd,GAAD,CAAkBI,eAAe,EAAOpI,MAAM,IAAImI,MAAO2C,EAAS7e,KAAI,SAAA6H,GAAI,MAAK,CAAEuU,MAAOvU,EAAKuI,KAAMxR,GAAIiJ,EAAKnH,OAAQ4c,cAAe6B,EAAiB9B,aAAc,SAACxV,GAAD,OAAUuX,EAAmBvX,OAIjM,yBAAKhJ,UAAS,oBAA0C,IAA3BsgB,EAAgBpf,OAAe,GAAK,yBAC/D,wBAAIlB,UAAU,kBAAkByjB,IAChC,yBAAKzjB,UAAS,UAAKkgB,EAAUhf,OAAS,EAAI,GAAK,WAC7C,kBAACgc,GAAD,CAAkBI,eAAe,EAAOpI,MAAM,IAAImI,MAAO6C,EAAU/e,KAAI,SAAA6H,GAAI,MAAK,CAAEuU,MAAOvU,EAAK2a,OAAQ9hB,GAAImH,EAAKnH,OAAQ4c,cAAekC,EAAqBnC,aAAc,SAACxV,GAAD,OAAU4X,EAAuB5X,QAI9M,yBAAKhJ,UAAU,eACb,0BAAMA,UAAS,UAAKkgB,EAAUhf,OAAS,EAAI,GAAK,WAAhD,OAMF,yBAAKlB,UAAU,aACb,wBAAIA,UAAU,kBAAkB0jB,IAChC,yBAAK1jB,UAAS,UAAKkgB,EAAUhf,OAAS,EAAI,GAAK,WAC7C,kBAACgc,GAAD,CAAkBI,eAAe,EAAOpI,MAAM,IAAImI,MAAO+C,EAAUjf,KAAI,SAAA6H,GAAI,MAAK,CAAEuU,MAAOvU,EAAKvH,MAAOI,GAAImH,EAAKnH,OAAQ4c,cAAeoC,EAAqBrC,aAAc,SAACxV,GAAD,OAAU8X,EAAuB9X,QAQ7M,kBAAC8S,GAAD,CACEpY,WAAYyd,GACZxd,iBAAkB,kBAAMyd,IAAwBD,KAChDtd,IAAK,CAAEa,gBAAiB,WACxBZ,SAAU,kBACVmZ,SApTkB,SAAChB,EAAUE,EAAUE,GAE3C,IAAMxM,EAAU,IAAIL,QACpBK,EAAQJ,OAAO,eAAgB,qCAG/B,IAAImU,EAAa,IAAIC,gBACrBD,EAAWnU,OAAO,WAAYwM,GAC9B2H,EAAWnU,OAAO,WAAY0M,GAC9ByH,EAAWnU,OAAO,aAAc4M,GAChCuH,EAAWnU,OAAO,aAAc,YAChCmU,EAAWnU,OAAO,WAAY,oBAE9BS,MAAM,GAAD,OAAI0P,EAAJ,eAAyB,CAC5BhQ,OAAQ,OACRC,QAASA,EACTkT,KAAMa,IAELzT,MAAK,SAAA6S,GAAG,OAAIA,EAAI3S,UAChBF,MAAK,SAAAG,GACJ,IAAMwT,EAAa5mB,KAAKC,MAAMmT,GAE1BwT,EAAWpS,MACb4P,GAAiBwC,EAAWC,oBAG5Bd,GAAQa,EAAWpU,cAwG3B,SAAqBwT,GACnB,IAAMc,EAAkB,IAAIxU,QAC5BwU,EAAgBvU,OAAO,gBAAvB,iBAAkDyT,IAClDc,EAAgBvU,OAAO,eAAgB,qCAEvC,IAAME,EAAiB,CACrBC,OAAQ,MACRC,QAASmU,EACTlU,SAAU,UAGZI,MAAM,GAAD,OAAI0P,EAAJ,yCAAmDjQ,GACrDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ2P,EAAY/iB,KAAKC,MAAMmT,OAExBmB,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,MAxHjCuS,CAAYH,EAAWpU,cACvBmQ,EAASiE,GACT1mB,aAAaS,QAAQ,eAAgBX,KAAKY,UAAUgmB,IACpD1C,IAAuB,OAG1B3P,OAAM,SAAAC,GAAK,OAAIxH,QAAQC,IAAI,QAASuH,OAoRnCqK,SAAUsF,GACVtE,WAAY,kBAAMuE,GAAiB,S,MC3c5B4C,OArBf,WAEE,OACE,yBAAKlkB,UAAU,OACb,4BAAQA,UAAU,UAChB,wBAAI0Q,MAAM,aAAV,gBAGA,kBAAC,GAAD,OAEF,yBAAK1Q,UAAU,qBACb,kBAACN,EAAD,OAEF,kBAAC,GAAD,MACA,8BACE,kBAAC4a,GAAD,SCrBO6J,eAAe,CAC5BC,QAAS,CACPjmB,KAAMkmB,EACN1lB,WAAY2lB,EACZhlB,QAASilB,KCEOlZ,QACW,cAA7BmZ,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,GAAD,OAEF9G,SAAS+G,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/U,MAAK,SAAAgV,GACjCA,EAAaC,kB","file":"static/js/main.da98da7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectItem\":\"SelectSearchable_selectItem__ytOvQ\",\"selectedItem_delete\":\"SelectSearchable_selectedItem_delete__DzATU\",\"selectSearchable\":\"SelectSearchable_selectSearchable__12vBI\",\"selectSearchable_Container\":\"SelectSearchable_selectSearchable_Container__fToYi\",\"selectSearchable_SearchContainer\":\"SelectSearchable_selectSearchable_SearchContainer__3eaGr\",\"selectSearchable_ItemsContainer\":\"SelectSearchable_selectSearchable_ItemsContainer__34yKg\",\"selectSearchable_Header\":\"SelectSearchable_selectSearchable_Header__20KCq\",\"selectSearchable_SelectedContainer\":\"SelectSearchable_selectSearchable_SelectedContainer__3HBOF\",\"selectSearchable_Trigger\":\"SelectSearchable_selectSearchable_Trigger__2brz3\",\"selectSearchable_SelectedItem\":\"SelectSearchable_selectSearchable_SelectedItem__ya07B\",\"selectSearchable_SelectedItem_Selected\":\"SelectSearchable_selectSearchable_SelectedItem_Selected__3kePe\",\"selectSearchable_List\":\"SelectSearchable_selectSearchable_List__12txV\",\"listCollapsed\":\"SelectSearchable_listCollapsed__2gYJk\",\"ListSmall\":\"SelectSearchable_ListSmall__24zac\",\"ListMedium\":\"SelectSearchable_ListMedium__3_qlO\",\"ListLarge\":\"SelectSearchable_ListLarge__m6apt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBackdrop\":\"Login_loginBackdrop__2-vXb\",\"loginBackdrop_freeze\":\"Login_loginBackdrop_freeze__30wYs\",\"loginContainer\":\"Login_loginContainer__1-kGp\",\"loginHeader\":\"Login_loginHeader__1dDHJ\",\"loginContent\":\"Login_loginContent__pNQUT\",\"loginFooter\":\"Login_loginFooter__1T3EA\",\"loginClose\":\"Login_loginClose__EEt8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"DateTimeInput_timePicker__g55DG\",\"datePicker\":\"DateTimeInput_datePicker__fMbwV\",\"dateTimeContainer\":\"DateTimeInput_dateTimeContainer__3DJHa\",\"btnClear\":\"DateTimeInput_btnClear__1hSf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"DateInput_datePicker__1qUGn\",\"dateContainer\":\"DateInput_dateContainer__3vsHd\",\"btnClear\":\"DateInput_btnClear__hBuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"TimeInput_timePicker__1bwP3\",\"timeContainer\":\"TimeInput_timeContainer__15bEw\",\"btnClear\":\"TimeInput_btnClear__3Cafn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Figure_container__1bF2w\",\"btnClose\":\"Figure_btnClose__3UDU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Tabulation_row__1qqOd\",\"title\":\"Tabulation_title__2BmpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"JsonReader_fixed__1abV0\"};","import { createSlice } from '@reduxjs/toolkit'\n\nexport const jsonSlice = createSlice({\n  name: 'json',\n  initialState: {\n    // value: {},\n    // documentStatus: 'init',\n\n    // // Persistence\n    value: JSON.parse(localStorage.getItem('json')) || {},\n    documentStatus: 'loaded',\n    repeaterValue: []\n  },\n  reducers: {\n    setJson: (state, action) => {\n      // console.log(`setJson : `, action.payload)\n\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = action.payload\n\n      // Initial JSON to be set if json is not present (new document)\n      // localStorage.se  tItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n      localStorage.setItem('json', JSON.stringify(action.payload))\n    },\n    setDocumentStatus: (state, action) => {\n      // console.log(`setDocumentStatut : `, action.payload)\n      state.documentStatus = action.payload\n    },\n    setRepeaterValue: (state, action) => {\n      // console.log(`setDocumentStatut : `, action.payload)\n      state.repeaterValue = action.payload\n    }\n  },\n})\n\nexport const { setJson, setDocumentStatus, setRepeaterValue } = jsonSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectJson = state => state.json.value\nexport const selectDocumentStatus = state => state.json.documentStatus\nexport const selectRepeaterValue = state => state.json.repeaterValue\n\nexport default jsonSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\n\nexport const tabulationSlice = createSlice({\n  name: 'tabulation',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    callSection: (state, action) => {\n      state.value = action.payload\n    },\n    prevSection: state => {\n      state.value -= 1\n    },\n    nextSection: state => {\n      state.value += 1\n    },\n  },\n});\n\nexport const { callSection,\n  prevSection,\n  nextSection,\n  } = tabulationSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectedTabulation = state => state.tabulation.value;\n\n\nexport default tabulationSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const displaySlice = createSlice({\n  name: 'display',\n  initialState: {\n    value: {},\n    debugMode: false,\n    errorMsg: ''\n  },\n  reducers: {\n    setControls: (state, action) => {\n      state.value = action.payload\n    },\n    setDebugMode: (state, action) => {\n      state.debugMode = action.payload\n    },\n    setOpenListId: (state, action) => {\n      state.openListId = action.payload\n    },\n    setErrorMsg: (state, action) => {\n      state.errorMsg = action.payload\n    },\n    //what's that\n    clearErrorMsg: state => {\n      state.errorMsg = ''\n    }\n  }\n})\n\nexport const { setControls, setDebugMode, setOpenListId, setErrorMsg, clearErrorMsg } = displaySlice.actions\n\nexport const selectOptionedControls = state => state.display.value\nexport const selectDebugMode = state => state.display.debugMode\nexport const selectOpenListId = state => state.display.openListId\nexport const selectErrorMsg = state => state.display.errorMsg\n\nexport default displaySlice.reducer","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setDebugMode,\n  selectDebugMode\n} from '../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport default function JsonOptions() {\n\n  const dispatch = useDispatch()\n  const debugMode = useSelector(selectDebugMode)\n  const onDebugChangeHandler = (pEvent) => dispatch(setDebugMode(pEvent.target.checked))\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  let loadedJSON = JSON.parse(localStorage.getItem('initialJson')) || {}\n\n  function clickRevertChangesHandler(pEvent) {\n    dispatch(callSection(0))\n    dispatch(setJson(loadedJSON))\n  }\n\n  function clickClearDocumentHandler(pEvent) {\n    dispatch(setJson({}))\n  }\n\n  // function clickLoadJSONHandler(pEvent) {\n  //   fileLoaderInput = document.querySelector('#fileLoader')\n  //   fileLoaderInput.click()\n  // }\n  // let fileLoaderInput\n  // function loadJSONHandler(pEvent) {\n  //   const file = pEvent.target.files[0]\n  //   const reader = new FileReader()\n\n  //   reader.onloadend = function () {\n  //     try {\n  //       let source = reader.result\n  //       let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n  //       loadedJSON = JSON.parse(atob(newSource))\n  //       console.log(`--->: reader.onloadend -> newData`, loadedJSON)\n\n  //       localStorage.setItem('initialJson', JSON.stringify(loadedJSON))\n  //       dispatch(setJson(loadedJSON))\n  //     }\n  //     catch (err) {\n  //       console.log('---> ', err)\n  //     }\n  //   }\n  //   if (file) {\n  //     reader.readAsDataURL(file)\n  //   }\n  // }\n\n\n  return (\n    <div id=\"jsonOptions\" className={`${(documentStatus === 'modified') ? 'options-visible' : 'options-hidden'}`}>\n      {/* <button className=\"btn btn-ternary\" onClick={clickLoadJSONHandler}>LOAD JSON FILE</button> */}\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickRevertChangesHandler}>\n        <FontAwesomeIcon icon={faRedo} style={{ transform: 'scaleX(-1)', marginLeft: 0 }} />\n        REVERT CHANGES\n      </button>\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickClearDocumentHandler}>\n        <FontAwesomeIcon icon={faTrash} style={{ marginLeft: 0 }} />\n        CLEAR DOCUMENT\n      </button>\n      {/* <input id=\"fileLoader\" type=\"file\" onChange={loadJSONHandler}></input> */}\n      <div className=\"debug\">\n        <label htmlFor=\"debug\">Debug</label>\n        <input type=\"checkbox\" name=\"debug\" id=\"debug\" className=\"debug-check\" checked={debugMode} onChange={onDebugChangeHandler} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectJson\n} from '../../features/json/jsonSlice';\nimport {\n  callSection\n} from '../../features/tabulation/tabulationSlice';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DocumentTableOfContents(props) {\n  const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n\n  // const { Title, Id, Elements }  = json\n\n  function gotToSectionHanlder(pSectionIndex) {\n    // console.log('pSectionIndex: ', pSectionIndex)\n    dispatch(callSection(pSectionIndex))\n  }\n\n  const sections = json.Sections && json.Sections.length > 0 ? json.Sections.map((element, index) => {\n    if (element.Elements[0].Type === 'Document.TableOfContents') return null\n    return (\n      <li key={index}>\n        <button className=\"btn btn-secondary-outlined btn-link fixed-large\" onClick={() => gotToSectionHanlder(index)}>\n          {element.Title}\n          <FontAwesomeIcon icon={faChevronRight} />\n        </button>\n      </li>\n    )\n  }) : ''\n\n  return (\n    <ul className=\"toc-list\">\n      {sections}\n    </ul>\n  )\n}\n\nexport default DocumentTableOfContents\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { setControls } from '../../features/display/displaySlice'\n\nfunction ListMulticontrol(props) {\n\n  const json = props.controlJson\n\n  const { Type, Title, Id, Data, IsVisible = true } = json\n\n  const debugMode = useSelector(selectDebugMode)\n  const dispatch = useDispatch()\n\n\n  function onChangeHandler(pEvent) {\n    const selectedIndex = Number(pEvent.target.value)\n    // console.log(`--->: onChangeHandler -> selectedIndex`, selectedIndex)\n    if (selectedIndex >= 0) {\n      const visibleControls = json.OptionedControls[selectedIndex].Controls !== undefined ? json.OptionedControls[selectedIndex].Controls : []\n      const hiddenControls = []\n\n      json.OptionedControls.forEach((option, index) => {\n        // console.log('index: ', index, '  selectedIndex: ', selectedIndex)\n\n        if (option.Controls !== undefined && index !== selectedIndex) {\n          option.Controls.forEach(controlId => hiddenControls.push(controlId))\n          // console.log('index: ', index, '  selectedIndex: ', selectedIndex, '   hide: ', option.Controls)\n        }\n\n      })\n\n      // console.log('---> hiddenControls: ', hiddenControls)\n      // console.log('---> visibleControls: ', visibleControls)\n      dispatch(setControls({ hiddenControls, visibleControls }))\n      // displayControls(visibleControls)\n    }\n  }\n\n  function displayControls(pControlList) {\n    // console.log('---> pControlList: ', pControlList)\n\n\n    // dispatch(setControls(pControlList))\n\n    // pControlList.forEach((item, index) => {\n    //   console.log('---> ', item)\n    // })\n  }\n\n  const options = Data.map((option, index) => <option key={index} value={index}>{option}</option>)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <label htmlFor=\"listmulticontrol\">{Title}</label>\n          <select name=\"listmulticontrol\" id=\"listmulticontrol\" onChange={onChangeHandler}>\n            <option value=\"-1\">-----</option>\n            {options}\n          </select>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ListMulticontrol\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Label(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, FontAttributes, FontSize = 14, Margin = 0, HasUnderLine = false } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <div className=\"control\" style={{\n            fontSize: FontSize - 2 + 'px',\n            fontWeight: FontAttributes === 'Bold' ? 'bold' : '',\n            fontStyle: FontAttributes === 'Italic' ? 'italic' : '',\n            borderBottom: HasUnderLine ? '1px solid black' : '',\n            padding: Margin ? Margin + 'px' : ''\n          }}>{Title}\n          </div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default Label","import React from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springModalProps}>\n          <div\n            className={styles.modalContainer}\n            style={css}>\n            <div className={styles.modalClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.modalHeader}>\n              <FontAwesomeIcon icon={faExclamationTriangle} />\n            </div>\n            <div className={styles.modalContent}>\n              {message}\n            </div>\n            <div className={styles.modalFooter}>\n              <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Modal from '../Modal'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Text(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, IsEnabled = true, Value = '', Format, Warning = false, WarningMessage, Mandatory, ValidationMessage } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalOptions, setModalOptions] = useState(Mandatory ? { message: ValidationMessage, bgColor: '#EF643C' } : { message: WarningMessage, bgColor: '#000000' })\n\n\n  const emailAddressTester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/\n  const phoneNumberRestrictCodes = [49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 16, 57, 48, 16, 187, 32, 8, 35]\n\n\n  function onChangeHandler(pEvent) {\n\n    // if ((Format.Keyboard === 'Telephone') && !telephoneTester.test(pEvent.target.value)) return\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    // console.log('value: ', json)\n    props.updateJson(newJson)\n  }\n\n  function onBlurHandler(pEvent) {\n    const target = pEvent.target\n\n    if (Warning && target.value === '') {\n      setIsModalVisible(true)\n    }\n    if (Mandatory && target.value === '') {\n      target.focus()\n      setIsModalVisible(true)\n    }\n    if (Format !== undefined && Format.Keyboard === 'Email') {\n      if (!emailAddressTester.test((pEvent.target.value).toLowerCase())) {\n\n        setModalOptions({ message: \"The email address provided appears not to be valid\", bgColor: '#000000' })\n        setIsModalVisible(true)\n      }\n    }\n  }\n\n  function onKeyDownHandler(pEvent) {\n    // console.log('---> ', pEvent.keyCode)\n    if (Format.Keyboard === 'Telephone') {\n      if (!phoneNumberRestrictCodes.includes(pEvent.keyCode)) pEvent.preventDefault()\n    }\n  }\n\n  useEffect(() => {\n    // console.log('Text set data: ', Value)\n  }, [json])\n\n  const textfield = Format !== undefined ?\n    Format.Lines !== undefined ? <textarea id={Id} rows={Format.Lines} onChange={onChangeHandler}></textarea>\n      :\n      Format.Keyboard === 'Numeric' ? <input type='number' min={Format.Min} max={Format.Max} size={Format.Decimal} onChange={onChangeHandler} />\n        :\n        Format.Keyboard === 'Telephone' ? <input type='text' maxLength=\"20\" onKeyDown={onKeyDownHandler} onChange={onChangeHandler} />\n          :\n          <input id={Id} type=\"text\" value={Value} maxLength={Format.VarChar || -1} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n    :\n    <input id={Id} type=\"text\" value={Value} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n\n  const warningMarker = WarningMessage ? '*' : ''\n  const mandatoryMarker = Mandatory ? <span className=\"warning-red\">*</span> : ''\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <label htmlFor=\"title\">{Title} {warningMarker}{mandatoryMarker}</label>\n          {textfield}\n        </div>\n        <Modal\n          visibility={isModalVisible}\n          toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n          message={`${Id}: ${modalOptions.message}`}\n          css={{ backgroundColor: modalOptions.bgColor }}\n          backdrop={'rgba(0,0,0,0.3)'}\n        />\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Text\n","import camelcaseKeys from 'camelcase-keys'\n\nexport function getControlName(pControlType) {\n  return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n}\n\nexport function getElementFromElementId(pJson, pElementID) {\n  // console.log(`----------------> Looking for pElementID: `, pElementID, ' inside pJson: ', pJson)\n\n  const currentJson = normalizeJson(pJson).Sections\n  // console.log(`--->: getElementFromElementId inside this: `, currentJson)\n  let foundPath = []\n\n  if (pElementID !== 'undefined') {\n    currentJson.forEach((section, sectionIndex) => {\n      section.Elements.forEach((item, index) => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach((subsubitem, subsubindex) => {\n                if (subsubitem.Id !== undefined && subsubitem.Id === pElementID) {\n                  // console.log('--> subsubpath: ', { sectionIndex, index, subindex, subsubindex })\n                  foundPath.push([sectionIndex, index, subindex, subsubindex])\n                }\n              })\n\n            }\n\n            if (subitem.Id !== undefined && subitem.Id === pElementID) {\n              // console.log('--> subpath: ', { sectionIndex, index, subindex })\n              foundPath.push([sectionIndex, index, subindex])\n            }\n\n          })\n        }\n\n        if (item.Id !== undefined && item.Id === pElementID) {\n          // console.log('--> path: ', { sectionIndex, index })\n          foundPath.push([sectionIndex, index])\n        }\n\n      }\n      )\n    }\n    )\n  }\n\n  return foundPath\n}\n\n// Fix conflict with React component 'Date' and Date JS Object\nexport function getCurrentDate(pDate = Date.now()) {\n  // console.log(`--->: getCurrentDate -> pDate`, pDate)\n  // return new Date().toLocaleDateString().split('/').reverse().join('-')\n  // return new Date().toLocaleDateString()\n  // return new Date()\n  return new Date(pDate)\n}\nexport function getDateObjFromDate(pDate) {\n  const dateObj = new Date(pDate + ' ' + new Date().toTimeString())\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromTime(pTime) {\n  const dateObj = new Date(new Date().toDateString() + ' ' + pTime)\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromDateString(pDate) {\n  const dateObj = new Date(pDate)\n  return dateObj\n}\n\nexport function normalizeJson(pJson) {\n  // const json = JSON.parse(pJson)\n  return camelcaseKeys(pJson, { deep: true, pascalCase: true })\n}\n\n//\nconst exportMetaData = []\nexport function addToDocumentExport(pValue) {\n\n  const controlIndex = exportMetaData.findIndex(item => item.Id === pValue.Id)\n  console.log(`--->: addToDocumentExport -> controlIndex`, controlIndex)\n  if (controlIndex === -1) exportMetaData.push(pValue)\n  else {\n    const prevValue = { ...exportMetaData[controlIndex] }\n    exportMetaData[controlIndex] = { ...prevValue, ...pValue }\n  }\n  // console.log(`--->: addToDocumentExport -> pValue`, pValue.Id)\n  console.log(`exportMetaData :`)\n  console.table(exportMetaData)\n\n  // exportMetaData[0].Elements.push(pValue)\n  // console.log('---> addToDocumentExport: ', exportMetaData)\n}\n\nexport function getDocumentExport() {\n  return { Elements: exportMetaData }\n}","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport {\n  setJson,\n  selectJson,\n  setRepeaterValue,\n  selectRepeaterValue\n} from '../../features/json/jsonSlice'\n\n\nimport { getControlName } from '../../app/utilities'\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  // Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from './'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nfunction Repeatable(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Elements, IsVisible = true } = json\n  // console.log(`--->: Repeatable -> props: `, props)\n\n  const dispatch = useDispatch()\n\n  const repeaterValue = useSelector(selectRepeaterValue)\n  const debugMode = useSelector(selectDebugMode)\n\n  // console.log(`--->: Repeatable -> repeaterValue`, repeaterValue)\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n\n  function updateJsonHandler(pJson, pRepeaterIndex) {\n    // console.log('this repeater: ', pRepeaterIndex)\n    // console.log('update this: ', pJson)\n\n    const repeaterControlIndex = repeaterValue[pRepeaterIndex].findIndex((item) => item.Id === pJson.Id)\n\n    const newRepeaterValues = [...repeaterValue]\n    console.log(`--->: updateJsonHandler -> newRepeaterValues`, newRepeaterValues)\n    console.log(`--->: updateJsonHandler -> newRepeaterValues[pRepeaterIndex][repeaterControlIndex]`, newRepeaterValues[pRepeaterIndex][repeaterControlIndex])\n\n    newRepeaterValues[pRepeaterIndex] = [...newRepeaterValues[pRepeaterIndex], pJson]\n\n    // console.log('---> newRepeaterValues[pRepeaterIndex][repeaterControlIndex] ; ', newRepeaterValues[pRepeaterIndex][repeaterControlIndex])\n    dispatch(setRepeaterValue(newRepeaterValues))\n\n    // console.log('in this: ', json.Elements)\n    // const mergedElements = [...json.Elements]\n\n    // const elementIndex = mergedElements.findIndex(element => element.ID === pJson.ID)\n    // mergedElements[elementIndex] = pJson\n    // // console.log('--->elementIndex:  ', elementIndex)\n\n    // props.updateJson({ ...json, Elements: mergedElements })\n  }\n\n  function addRepeatable() {\n    dispatch(setRepeaterValue([...repeaterValue, Elements]))\n  }\n  function removeRepeatableByIndex(pIndex) {\n    // console.log('---> removeRepeatableByIndex: ', pIndex)\n    dispatch(setRepeaterValue([...repeaterValue.filter((item, index) => index !== pIndex)]))\n  }\n\n  // const children = Elements.map((control, index) => {\n  //   const componentName = getControlName(control.Type)\n  //   // console.log(`--->componentName: `, componentName)\n  //   console.log('---> RP create item: ', control)\n\n  //   const Component = components[componentName]\n  //   return <Component key={index} controlJson={control} updateJson={updateJsonHandler} />\n  //   // return <div key={index}>{control.Type}</div>\n  // })\n  const children = repeaterValue.map((value, repeaterIndex) => {\n    // console.log(`--->value: `, value)\n\n    const controls = Elements.map((control, index) => {\n      // console.log('---> ', control)\n\n      value.forEach((repeaterControl, index) => {\n        if (control.Id === repeaterControl.Id) control = { control, ...repeaterControl }\n      })\n\n      const componentName = getControlName(control.Type)\n      const Component = components[componentName]\n      return <Component key={index} controlJson={control} updateJson={(pJson) => updateJsonHandler(pJson, repeaterIndex)} />\n    })\n\n    return (<div className=\"repeatable\" key={`rep-${repeaterIndex}`}>\n      <div className=\"repeatable-header\">\n        <h3 className=\"repeatable-title\">[{repeaterIndex + 1}] {Title}</h3>\n        <button className=\"btn btn-secondary btn-small\" onClick={e => removeRepeatableByIndex(repeaterIndex)}>\n          Remove\n        <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n      {controls}\n    </div>)\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n\n\n          {/* <div className=\"repeatable-header\">\n            <h3 className=\"repeatable-title\">{Title}</h3>\n            <button className=\"btn btn-secondary btn-small\" onClick={e => console.log('ok')}>\n              Remove\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div> */}\n          {children}\n\n\n          <button className=\"btn btn-primary\" onClick={addRepeatable}>\n            <FontAwesomeIcon icon={faPlusSquare} />\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default Repeatable","import React, { useState } from 'react'\n\nfunction ButtonSubmitPurchase(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitPurchase<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitPurchase\n","import React, { useState } from 'react'\n\nfunction ButtonAddDocketNumber(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddDocketNumber<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddDocketNumber\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId, selectDebugMode } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction API(props) {\n\n  const json = props.controlJson\n\n  const { Title, Type, Id, IsVisible = true, Value = '', Api,\n    IncludePhoneNumber, IncludeEmail, IncludeTitle, IncludeBusinessNumber, IncludeAbbreviation, IncludeCode } = json\n  const targetedApi = String(Api).toLowerCase()\n\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [list, setList] = useState([])\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // useEffect(() => {\n  //   // console.log(`API (${Title}) has new json: ${JSON.stringify(json)}`)\n  //   // console.log('API: default data: ', Value)\n  // }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - API                                   -----*\n  *----------------------------------------------------*/\n\n  const environment = 'https://api-uat.extrack.com/V1.0/'\n  const projectID = 1249\n\n  const apiUrl = `${environment}${getEndpoint()}`\n\n  const token = JSON.parse(localStorage.getItem('dynFormToken'))\n  // console.log(`--->: API -> Api`, Api, token.access_token)\n\n  const apiHeaders = new Headers()\n  apiHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n  const requestOptions = {\n    method: 'GET',\n    headers: apiHeaders,\n    redirect: 'follow'\n  }\n\n  function getEndpoint() {\n    switch (targetedApi) {\n      case 'projectcompany':\n        return `Project/${projectID}/Directory/Companies`\n      case 'projectcontacts':\n        return `Project/${projectID}/Directory/Contacts`\n      case 'globalcontacts':\n        return `Org/contacts`\n      case 'dockettypes':\n        return `/Docket/Types`\n      case 'abs':\n        return `Project/${projectID}/ABS`\n      case 'tbs':\n        return `Project/${projectID}/TBS`\n      case 'cbs':\n        return `Project/${projectID}/CbsWo`\n      case 'dbs':\n        return `Project/${projectID}/DBS`\n      case 'fbs':\n        return `Project/${projectID}/FBS`\n      case 'wbs':\n        return `Project/${projectID}/WBS`\n      case 'pcbs':\n        return `Project/${projectID}/PCBS`\n      case 'pbs':\n        return `Project/${projectID}/PBS`\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(targetedApi, JSON.parse(result))\n        const dropdownOptions = JSON.parse(result)\n        // console.log(`--->: API -> dropdownOptions`, dropdownOptions)\n\n        const listItems = dropdownOptions.map((item, index) => {\n          let option, phoneNumber, emailAddress, title, abn, abbr, code, spacer\n          switch (Api) {\n\n            case 'ProjectContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Contact.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Contact.Email || `n/a`}` : ``\n              option = `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}${phoneNumber}${emailAddress}`\n              break\n\n            case 'GlobalContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Email || `n/a`}` : ``\n              option = `${item.NameFirst} ${item.NameLast} | ${item.CompanyName}${phoneNumber}${emailAddress}`\n              break\n\n            case 'ProjectCompany':\n              // console.log(`--->: API ${Api} -> item`, item)\n\n              title = IncludeTitle ? ` | ${item.Title || `n/a`}` : ``\n              abn = IncludeBusinessNumber ? ` | ${item.Company.Abn || `n/a`}` : ``\n              abbr = IncludeAbbreviation ? ` | ${item.Company.Abbr || `n/a`}` : ``\n              option = `${item.Company.Name}${title}${abn}${abbr}`\n              // optionLabel = `${item.Company.Name} - ${item.Company.Abbr}`\n              break\n\n            case 'DocketTypes':\n              option = `${item.Title}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n            default:\n              title = IncludeTitle ? `${item.Title || `n/a`}` : ``\n              code = IncludeCode ? `${item.Code || `n/a`}` : ``\n              spacer = (IncludeCode && IncludeTitle) ? ` | ` : ``\n              option = `${title}${spacer}${code}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n          }\n\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          // console.log('component:', {Type: 'Api', Value, optionLabel})\n          // setSelectedValue(optionValue)\n          // }\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          //   currentValue = Value\n          //   console.log('API ---> DefaultValue: ', Value, '----> optionLabel : ', optionLabel)\n\n          // }\n          // return <option key={index} value={optionValue}>{optionLabel}</option>\n          return option\n        })\n        setList(listItems)\n        // console.log(`--->: API -> dropdownNodes`, dropdownNodes)\n\n      })\n      .catch(error => console.log('error', error))\n  }, [])\n\n\n\n\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(list.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [list, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    if (selectedValues[0] !== currentItem) setSelectedValues([currentItem])\n    else setSelectedValues([])\n    updateJSON(currentItem)\n  }\n  function updateJSON(pValue) {\n    // console.log(`--->: updateJSON with Value: `, pValue)\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    // console.log(`--->: updateJSON -> newJson`, newJson)\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = (item === Value) ? true : false\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default API","import React, { useState } from 'react'\n\nimport { format, addDays, addMonths } from 'date-fns'\n// import DatePicker from \"react-datepicker\"\n// import \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DateInput(props) {\n\n  const dateformatConverted = props.format.replace(/ddd/g, 'eee')\n  const [dateValue, setDateValue] = useState(props.dateValue)\n  // console.log(`--->: DateInput -> props.dateValue received: `, props.dateValue)\n\n  function onClearHandler() {\n    setDateValue('')\n    props.onDateChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setDateValue(pValue)\n    props.onDateChange(pValue)\n  }\n\n  const dateString = dateValue === '' ? dateValue : format(addMonths(addDays(getDateObjFromDate(dateValue), props.modifiers.AddDay), props.modifiers.AddMonth), dateformatConverted)\n\n\n  return (\n    <div className={styles.dateContainer}>\n      <input\n        type=\"date\"\n        name=\"\"\n        id=\"\"\n        className={styles.datePicker}\n        defaultValue={dateValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {dateString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { getCurrentDate, getDateObjFromDate } from '../../app/utilities'\nimport DateInput from '../DateInput'\n\nfunction Date(props) {\n\n  const json = props.controlJson\n  let { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd', IsBlank = false, IsVisible = true, AddDay = 0, AddMonth = 0, DateValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultDate = (DateValue === '' || DateValue === undefined) ?\n    `${getCurrentDate().toDateString()}`\n    :\n    DateValue\n\n\n  const [dateValue, setDateValue] = useState(!IsBlank ? defaultDate : '')\n\n  function onDateChangeHandler(pDate) {\n    setDateValue(pDate)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDate !== '') newJson.DateValue = pDate\n    else delete newJson.DateValue\n    newJson.IsBlank = (pDate !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateInput format={FormatDateTime} dateValue={dateValue} modifiers={{ AddDay, AddMonth }} onDateChange={(value) => onDateChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Date","import React from 'react'\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './Figure.module.scss'\n\n\nexport default function Figure(props) {\n\n  function onClickHandler(pEvent) {\n    // console.log('---> ', pEvent)\n\n    props.onClose(pEvent)\n\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.source} alt=\"figure\" />\n      <div className={styles.btnClose} onClick={onClickHandler}><FontAwesomeIcon icon={faTimes} /></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction Image(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, IsVisible = true, Images = [] } = json\n  // console.log(`--->: Image -> IsVisible`, IsVisible)\n\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [selectedFile, setSelectedFile] = useState('')\n\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    // const newJson = JSON.parse(JSON.stringify(json))\n    // newJson.Value = pEvent.target.value\n    console.log('pEvent: ', pEvent)\n    // props.updateJson(newJson)\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const images = Images.map((image, index) => (\n    <div className=\"control-row\" key={`image${index}`}>\n      <Figure source={`data:image/png; base64, ${image}`} onClose={onCloseHandler} />\n    </div>\n  ))\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          {images}\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Image\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction ImageSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, IsVisible = true, Value = '' } = json\n  // console.log(`--->: ImageSingle -> IsVisible`, IsVisible)\n\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    let imageData\n    const fileReader = new FileReader()\n    fileReader.onload = (e) => {\n      imageData = e.target.result.replace(\"data:image/png;base64,\", \"\")\n\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = imageData\n      props.updateJson(newJson)\n    }\n    fileReader.readAsDataURL(pEvent.target.files[0])\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    delete newJson.Value\n    props.updateJson(newJson)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const figure = Value !== '' ? <Figure source={`data:image/png; base64, ${Value}`} onClose={onCloseHandler} /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          <div className=\"control-row\">\n            {figure}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default ImageSingle\n","import React, { useState } from 'react'\n\nfunction ButtonAddReportDate(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddReportDate<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddReportDate","import React from 'react'\n\nfunction QRScanner() {\n  return (\n    <div>\n      QRScanner\n    </div>\n  )\n}\n\nexport default QRScanner\n","import React from 'react'\n\nfunction QRScannerList() {\n  return (\n    <div>\n      QRScannerList\n    </div>\n  )\n}\n\nexport default QRScannerList\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Signature(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature = '' } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64,${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n            </div>\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\n\nexport default Signature\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateTimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateTimeValue}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDateTime\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDate(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateValue}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDate\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport {\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\n// import { selectDocumentStatus, setDocumentStatus } from '../../features/json/jsonSlice'\n// import { useDispatch } from 'react-redux'\n\nexport default function Matrix(props) {\n\n  const json = props.controlJson\n  // console.log(`-> json`, json)\n\n  const { Type, Id, Title, Columns, Rows, Elements, IsVisible = true } = json\n\n  console.log(`--->: Matrix -> Elements`, Elements)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  const components = {\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures\n  }\n\n  let matrixLayout = []\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j]\n      // console.log(`--->: Matrix -> element`, element)\n      const componentName = getControlName(element.Type)\n      // console.log(`--->: Matrix -> componentName`, componentName)\n\n      const Component = components[componentName]\n      const controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n\n      matrixLayout.push(<div key={`${i}-${j}`} className=\"matrix-box\" style={{ backgroundColor: i % 2 > 0 ? 'rgb(244, 244, 244)' : '', borderBottom: i % 2 > 0 ? '1px solid #CCC' : '' }}>{controlComponent}</div>)\n\n    }\n\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log(`--->: updateJsonHandler -> pJson`, pJson)\n    // console.log('updating... ', documentStatus)\n    // if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n\n    // const controlPath = getControlPathById(pJson.Id)\n    // // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    // let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // // ONLY FIST SUBLEVEL\n    // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    // dispatch(setJson(jsonToUpdate))\n  }\n\n\n  // let layout = Elements.map((item, index) => <div key={index}>boxCol</div>)\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container control-container-matrix\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div style={{ display: 'grid', gridTemplateColumns: `repeat(${Columns}, 1fr)`, gridTemplateRows: `repeat(${Rows}, 1fr)` }}>\n              {matrixLayout}\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Checkbox(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, EntryTitle, Details, HasUnderLine, IsVisible = true, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Checkbox -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n\n    const checkboxValue = pEvent.target.checked === true ? 'Y' : 'N'\n    const valuesToExport = { Type, Id, Value: checkboxValue }\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = checkboxValue\n    // console.log('value: ', newJson.Value, json)\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const commentText = pEvent.target.value\n    const valuesToExport = { Id, CommentValue: commentText }\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = commentText\n    props.updateJson(newJson)\n  }\n\n  useEffect(() => {\n    // console.log('Checkbox set data :', json)\n  }, [json])\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className={`control ${HasUnderLine ? 'control-underline' : ''}`}>\n          <h3>{Title}</h3>\n          {details}\n          <input type=\"checkbox\" defaultChecked={Value === 'Y'} onChange={onChangeHandler} />\n          {entryTitle}\n          {comment}\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Checkbox\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Boolean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, HasUnderLine, EntryTitle, Details, IsVisible = true, Value = '', CommentValue = '' } = json\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n\n  function onChangeHandler(pEvent) {\n\n    const booleanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: booleanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = booleanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-inline\">\n            {details}\n          </div>\n          <div className={`control-inline ${HasUnderLine ? 'control-underline' : ''}`}>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n            </div>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n            </div>\n          </div>\n          <div className=\"control-inline\">\n            {entryTitle}\n          </div>\n          <div className=\"control-inline\">\n            {comment}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Boolean","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Trilean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, HideNa, IsVisible = true, Collapsible, IsCollapsed, EntryTitle, Details, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Trilean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n\n    const trileanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: trileanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = trileanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n\n  useEffect(() => {\n    // console.log('Trilean set data :', json)\n  }, [json])\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-row\">\n            {details}\n          </div>\n          <div className=\"control-row\">\n            <div className=\"control-inline\">\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"yes\">Yes</label>\n                <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n              </div>\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"no\">No</label>\n                <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n              </div>\n              <div className={`${HideNa ? 'hidden' : ''} control-checkbox`}>\n                <label htmlFor=\"na\">N/A</label>\n                <input type=\"radio\" id=\"na\" name={Id} value=\"NA\" checked={Value === 'NA'} onChange={onChangeHandler} />\n              </div>\n            </div>\n          </div>\n          <div className=\"control-row\">\n            {comment}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Trilean\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction TrileanLabel(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Buttons, CommentValue, HasUnderLine, ShowComment, HideNa, Value } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // console.log('---> radio click: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n\n  const buttons = Buttons !== undefined ? Buttons.map((button, index) => {\n    const computedBackground = Value === button.Button ? button.BackgroundColorSelected : button.BackgroundColor\n    if (!(HideNa && button.Button === 'NA')) return (\n\n      <React.Fragment key={`${Id}${index}`}>\n\n        <input type=\"radio\" name={Id} id={`${Id}${button.Label}`} value={button.Button} className=\"radiocheck-hidden\" onChange={onChangeHandler} />\n        <label htmlFor={`${Id}${button.Label}`} className=\"radiocheck-button\" style={{ backgroundColor: computedBackground }}>\n          {button.Label}\n        </label>\n\n      </React.Fragment>\n    )\n  }) : ''\n\n  const comment = ShowComment ? <div className=\"control-row\">{CommentValue}</div> : ''\n  const underline = HasUnderLine ? <hr /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {comment}\n          <div className=\"control-row\">\n            {buttons}\n            {underline}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\nexport default TrileanLabel\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId, selectDebugMode } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction ListSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, Value = '', IsVisible = true } = json\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    if (selectedValues[0] !== pEvent.target.id) setSelectedValues([pEvent.target.id])\n    else setSelectedValues([])\n    updateJSON(pEvent.target.id)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = selectedValues.findIndex(value => item === value) > -1\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\nexport default ListSingle","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId, selectDebugMode } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction ListMultiple(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, SelectedValue = [], IsVisible = true } = json\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState(SelectedValue || [])\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: { mass: 1, tension: 500, friction: 26 }\n  })\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        const newValues = selectedValues.filter(item => item !== targetText)\n        setSelectedValues(newValues)\n        updateJSON(newValues)\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    const newValues = (selectedValues.findIndex(item => item === currentItem) < 0) ? [...selectedValues, currentItem]\n      : selectedValues.filter(item => item !== currentItem)\n    setSelectedValues(newValues)\n    updateJSON(newValues)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.SelectedValue = pValue\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = selectedValues.findIndex(value => item === value) > -1\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ListMultiple\n","import React, { useState } from 'react'\n\nimport { format, addHours } from 'date-fns'\n\nimport { getDateObjFromTime } from '../app/utilities'\n\nimport styles from './TimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function TimeInput(props) {\n\n  // console.log(`--->: TimeInput -> timeValue received: `, props.timeValue, getDateObjFromTime(props.timeValue))\n\n  const timeformatConverted = props.format.replace('tt', 'a')\n  const [timeValue, setTimeValue] = useState(props.timeValue)\n\n  function onClearHandler(pEvent) {\n    setTimeValue('')\n    props.onTimeChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setTimeValue(pValue)\n    props.onTimeChange(pValue)\n  }\n\n  const timeString = timeValue !== '' ? format(addHours(getDateObjFromTime(timeValue), props.modifiers.AddHour), timeformatConverted)\n    :\n    ''\n\n  return (\n    <div className={styles.timeContainer}>\n      <input\n        type=\"time\"\n        name=\"\"\n        id=\"\"\n        className={styles.timePicker}\n        value={timeValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {timeString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport TimeInput from '../../components/TimeInput'\n\nfunction Time(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'hh:mm tt', IsBlank = false, IsVisible = true, AddHour = 0, TimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultTime = (TimeValue === '' || TimeValue === undefined) ?\n    `${new Date().getHours() < 10 ?\n      '0' + new Date().getHours()\n      :\n      new Date().getHours()}:${new Date().getMinutes() < 10 ?\n        '0' + new Date().getMinutes()\n        :\n        new Date().getMinutes()}`\n    :\n    TimeValue\n  // console.log(`TimeValue: ${TimeValue} , defaultTime: ${defaultTime}`)\n\n  const [timeValue, setTimeValue] = useState(!IsBlank ? defaultTime : '')\n\n  function onTimeChangeHandler(pTime) {\n    console.log(`--->: onTimeChangeHandler -> pTime`, pTime)\n    setTimeValue(pTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pTime !== '') newJson.TimeValue = pTime\n    else delete newJson.TimeValue\n    newJson.IsBlank = (pTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <TimeInput format={FormatDateTime} timeValue={timeValue} modifiers={{ AddHour }} onTimeChange={(value) => onTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Time\n","import React, { useState } from 'react'\n\nimport { format } from 'date-fns'\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateTimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function DateTimeInput(props) {\n\n  const dateFormatConverted = props.format.replace(/ddd/g, 'eee').replace('tt', 'a')\n  // console.log(`--->: DateTimeInput -> dateFormatConverted`, dateFormatConverted)\n\n  const dateTimeValue = props.dateTimeValue\n  // console.log(`--->: DateTimeInput -> dateTimeValue: `, dateTimeValue)\n\n  let dateValue = (dateTimeValue !== '') ? `${format(new Date(dateTimeValue), 'yyyy-MM-dd')}` : format(new Date(), 'yyyy-MM-dd')\n  let timeValue = (dateTimeValue !== '') ? `${new Date(dateTimeValue).toLocaleTimeString()}` : new Date().toLocaleTimeString()\n\n  function onDateChangeHandler(pEvent) {\n    // console.log('onDateChangeHandler pEvent.target.value: ', pEvent.target.value, timeValue)\n    dateValue = pEvent.target.value\n    props.onDateTimeChange(pEvent.target.value + ' ' + timeValue)\n  }\n  function onTimeChangeHandler(pEvent) {\n    // console.log('onTimeChangeHandler pEvent.target.value', dateValue, pEvent.target.value)\n    timeValue = pEvent.target.value\n    props.onDateTimeChange(dateValue + ' ' + pEvent.target.value)\n  }\n\n  function onClearHandler() {\n    dateValue = ''\n    timeValue = ''\n    props.onDateTimeChange('')\n  }\n\n  const dateTimeStringValue = (dateTimeValue !== '') ? format(new Date(dateTimeValue), dateFormatConverted) : ''\n\n  return (\n    <div className={styles.dateTimeContainer}>\n      <div>\n        <input type=\"date\" className={styles.datePicker} name=\"\" id=\"\" onChange={onDateChangeHandler} />\n        <input type=\"time\" className={styles.timePicker} name=\"\" id=\"\" onChange={onTimeChangeHandler} />\n      </div>\n      {dateTimeStringValue}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport DateTimeInput from '../../components/DateTimeInput'\n\nimport { getCurrentDate, getDateObjFromDateString } from '../../app/utilities'\n\nfunction DateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd hh:mm tt', IsBlank = false, IsVisible = true, DateTimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultDateTime = (DateTimeValue === '' || DateTimeValue === undefined) ?\n    `${getCurrentDate().toDateString() + ' ' + getCurrentDate().toLocaleTimeString()}`\n    :\n    DateTimeValue\n\n  const [dateTimeValue, setDateTimeValue] = useState(!IsBlank ? defaultDateTime : '')\n  // const dateTimeValue = (typeof DateTimeValue === 'string' && DateTimeValue !== '') ? getDateObjFromDateString(DateTimeValue) : DateTimeValue\n  // console.log(`--->: DateTime -> dateTimeValue: `, dateTimeValue)\n\n\n  function onDateTimeChangeHandler(pDateTime) {\n    // console.log('---> onDateTimeChangeHandler: ', pDateTime)\n\n    setDateTimeValue(pDateTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDateTime !== '') newJson.DateTimeValue = pDateTime\n    else delete newJson.DateTimeValue\n    newJson.IsBlank = (pDateTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateTimeInput format={FormatDateTime} dateTimeValue={dateTimeValue} onDateTimeChange={(value) => onDateTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default DateTime\n","import React from 'react'\n\nfunction TimeLabel() {\n  return (\n    <div>\n      TimeLabel\n    </div>\n  )\n}\n\nexport default TimeLabel\n","import React from 'react'\n\nfunction DateLabel() {\n  return (\n    <div>\n      DateLabel\n    </div>\n  )\n}\n\nexport default DateLabel\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonAddSignature(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddSignature\n","import React from 'react'\n\nfunction RegisterSignatures() {\n  return (\n    <div>\n      RegisterSignatures\n    </div>\n  )\n}\n\nexport default RegisterSignatures\n","import React from 'react'\n\nfunction SearchableListEntryDialogSMS() {\n  return (\n    <div>\n      SearchableListEntryDialogSMS\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogSMS\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonAddSMS(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddSMS","import React from 'react'\n\nfunction SearchableSMSListView() {\n  return (\n    <div>\n      SearchableSMSListView\n    </div>\n  )\n}\n\nexport default SearchableSMSListView\n","import React from 'react'\n\nfunction SearchableListEntryDialogEmail() {\n  return (\n    <div>\n      SearchableListEntryDialogEmail\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogEmail\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonAddEmail(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddEmail\n","import React from 'react'\n\nfunction SearchableEmailListView() {\n  return (\n    <div>\n      SearchableEmailListView\n    </div>\n  )\n}\n\nexport default SearchableEmailListView\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nexport default function MatrixButton(props) {\n  const json = props.controlJson\n  // console.log(`-> json`, json)\n\n  const { Id, Title, Type, IsVisible = true, Selection, XAxisName, YAxisName, Legend, Columns, Rows, Elements } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const showLegend = Legend.ShowLegend\n\n  const [selectedButton, setSelectedButton] = useState([])\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  function buttonClickHandler(pButtonId) {\n    const buttonPath = pButtonId.split('-')\n    // console.log('---> ', buttonPath)\n    // console.log('---> Selection is: ', Selection)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n\n    if (Selection === 'single') {\n      for (let i = 0; i < newJson.Elements.length; i++) {\n        for (let j = 0; j < newJson.Elements[i].Elements.length; j++) {\n          if (newJson.Elements[i].Elements[j].Value) newJson.Elements[i].Elements[j].Value = false\n        }\n      }\n    }\n    const buttonValue = Elements[buttonPath[0]].Elements[buttonPath[1]].Value !== undefined ? Elements[buttonPath[0]].Elements[buttonPath[1]].Value : false\n\n    newJson.Elements[buttonPath[0]].Elements[buttonPath[1]].Value = !buttonValue\n    props.updateJson(newJson)\n  }\n\n  let matrixLayout = []\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j]\n      const id = `${i}-${j}`\n      const title = `${Legend.LegendValuesY.Name}: ${Legend.LegendValuesY.Values[i]}\\n${Legend.LegendValuesX.Name}: ${Legend.LegendValuesX.Values[j]}`\n\n      matrixLayout.push(<div key={id} id={id} title={title} className=\"matrix-box matrix-button\" style={{ backgroundColor: element.Value ? element.BackgroundColorSelected : element.BackgroundColor }} onClick={() => buttonClickHandler(id)}>{element.Title}</div>)\n\n    }\n\n  }\n\n\n  const legendValuesX = Legend.LegendValuesX.Values.map((item, index) => <li key={index}>{item}</li>)\n  const legendValuesY = Legend.LegendValuesY.Values.map((item, index) => <li key={index}>{item}</li>)\n\n  const legend = showLegend ?\n    <div className=\"matrix-legend\">\n      <div>\n        <h5>{Legend.LegendValuesY.Name}:</h5>\n        {legendValuesY}\n      </div>\n      <div>\n        <h5>{Legend.LegendValuesX.Name}:</h5>\n        {legendValuesX}\n      </div>\n    </div>\n    :\n    ''\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"matrix-container\">\n              <h4 className=\"matrix-yaxis\">{YAxisName}</h4>\n              <div style={{ display: 'grid', gridTemplateColumns: `repeat(${Columns}, 1fr)`, gridTemplateRows: `repeat(${Rows}, 1fr)` }}>\n                {matrixLayout}\n              </div>\n              <h4 className=\"matrix-xaxis\">{XAxisName}</h4>\n            </div>\n            <div className=\"matrix-footer\">\n              {legend}\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}","import React from 'react'\n\nfunction DocumentSummaryGrid() {\n  return (\n    <div>\n      DocumentSummaryGrid\n    </div>\n  )\n}\n\nexport default DocumentSummaryGrid\n","import React from 'react'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setDocumentStatus } from '../../features/json/jsonSlice'\n\n\nfunction ButtonSubmitRegister(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\\\n\n  const dispatch = useDispatch()\n  const debugMode = useSelector(selectDebugMode)\n\n  function onSubmitToRegisterHandler(pEvent) {\n    // console.log('onSubmitToRegisterHandler: ', pEvent )\n    dispatch(setDocumentStatus('tosend'))\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\" onClick={onSubmitToRegisterHandler}>\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonSubmitRegister\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonCloseout(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonCloseout\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonViewDocument(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonViewDocument\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus\n} from './jsonSlice'\n\nimport {\n  selectOptionedControls,\n  selectDebugMode,\n  selectErrorMsg,\n} from '../display/displaySlice'\n\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\n// import { useSpring, animated, config } from 'react-spring'\n// import { Keyframes, delay } from 'react-spring/renderprops'\n\nimport styles from './JsonReader.module.scss'\n\nexport default function JsonReader() {\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n  const json = useSelector(selectJson)\n  const debugMode = useSelector(selectDebugMode)\n  const errorMsg = useSelector(selectErrorMsg)\n  const optionedControls = useSelector(selectOptionedControls)\n  const documentStatus = useSelector(selectDocumentStatus)\n  const dispatch = useDispatch()\n\n  const activeSectionId = useSelector(state => state.tabulation.value)\n  const currentJsonToEdit = (json.Sections !== undefined) ? json.Sections[activeSectionId] : {}\n\n  const { Title, Elements } = currentJsonToEdit\n\n  const [controls, setControls] = useState([])\n\n  useEffect(() => {\n    // console.log(`--->: JsonReader -> Section Updated: `, Elements)\n\n    if (Elements !== undefined) {\n      const controlsFromElements = Elements.map((element, index) => {\n        const componentName = getControlName(element.Type)\n        // console.log(`--->componentName: `, componentName)\n        let controlComponent\n        if (components[componentName] !== undefined) {\n          const Component = components[componentName]\n          controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n        }\n        return controlComponent\n      })\n      setControls(controlsFromElements)\n    }\n    else setControls('')\n  }, [Elements])\n\n  // Optioned Controls ------------------------------- //\n  useEffect(() => {\n    // console.log('displayedControls updated... ', optionedControls)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n\n    if (optionedControls.hiddenControls !== undefined) optionedControls.hiddenControls.forEach(controlId => {\n      const controlPath = getControlPathById(controlId)\n      // console.log(`--->: setHidden -> controlPath`, controlPath)\n      // console.log('---> hide: ', controlId)\n\n      if (controlPath.hasOwnProperty('subsubindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = false\n      }\n      else if (controlPath.hasOwnProperty('subindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = false\n      }\n      else {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n      }\n\n      // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n\n      // if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n      //   jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n      // }\n    })\n\n    if (optionedControls.visibleControls !== undefined) optionedControls.visibleControls.forEach(controlId => {\n      const controlPath = getControlPathById(controlId)\n      // console.log(`--->: setVisible -> controlPath`, controlPath)\n      // console.log('---> show: ', controlId)\n\n      if (controlPath.hasOwnProperty('subsubindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = true\n      }\n      else if (controlPath.hasOwnProperty('subindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = true\n      }\n      else {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = true\n      }\n    })\n\n    // if (json.Sections !== undefined) {\n    //   json.Sections[activeSectionId].Elements.forEach(control => {\n    //     // console.log(`--->: JsonReader -> control`, control.Id)\n    //     const controlPath = getControlPathById(control.Id)\n    //     // console.log(`--->: JsonReader -> controlPath`, controlPath)\n    //     if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n    //       jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n    //       console.log('---> reset control visibility ', control.Id, control.isVisible)\n    //     }\n    //   })\n    // }\n\n    dispatch(setJson(jsonToUpdate))\n  }, [optionedControls])\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  // function getControlName(pControlType) {\n  //   return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n  // }\n\n  function getControlPathById(pControlId) {\n    // console.log(`--->: getControlPathById -> pControlId`, pControlId)\n    const currentSection = json.Sections[activeSectionId]\n    let foundItem = {}\n    let itemPath = {}\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.Id === pControlId) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                itemPath = { section: activeSectionId, index, subindex, subsubindex }\n                foundItem = subsubitem\n              }\n            })\n          }\n\n          if (subitem.Id === pControlId) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            itemPath = { section: activeSectionId, index, subindex }\n            foundItem = subitem\n          }\n        })\n      }\n\n      if (item.Id === pControlId) {\n        // console.log('---> Trouvé item: ', item)\n        itemPath = { section: activeSectionId, index }\n        foundItem = json.Sections[activeSectionId].Elements[index]\n      }\n    })\n    // console.log('-- itemPath -> ', itemPath)\n    // return foundItem\n    return itemPath\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log('updating... ', documentStatus)\n    if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n\n    const controlPath = getControlPathById(pJson.Id)\n    // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // ONLY FIST SUBLEVEL\n    jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    dispatch(setJson(jsonToUpdate))\n  }\n\n\n  // RETURN ----------------------------------------------------------------------------------------------------------------/\n\n  const skeleton = documentStatus === 'loading' ?\n    <div className=\"skeleton\">\n      {Array(12).fill('').map((item, index) => <div key={index} className={`${index % 2 === 1 ? 'skeleton-bloc-offset' : ''} skeleton-bloc`}></div>)}\n    </div>\n    :\n    ''\n\n  return (\n    <div className=\"board\">\n\n      <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div>\n\n      {skeleton}\n\n      {controls}\n\n      <textarea\n        name=\"jsonviewer\"\n        id=\"jsonviewer\"\n        className={debugMode ? `${styles.fixed}` : 'hidden'}\n        // className={styles.fixed}\n        rows=\"16\"\n        value={JSON.stringify(Elements)}\n        onChange={e => dispatch(setJson(JSON.parse(e.target.value)))}>\n      </textarea>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  selectedTabulation,\n  callSection,\n  prevSection,\n  nextSection,\n} from '../features/tabulation/tabulationSlice'\nimport { selectJson } from '../features/json/jsonSlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepBackward, faStepForward, faFastBackward, faFastForward } from '@fortawesome/free-solid-svg-icons'\nimport styles from './Tabulation.module.scss'\n\nfunction Tabulation() {\n\n  const dispatch = useDispatch()\n\n  const tabIndex = useSelector(selectedTabulation)\n  const json = useSelector(selectJson)\n\n  // const tabs = (json.Sections) ? json.Sections.map((item, index) => <div key={index}>{item.Title}</div>) : ''\n  const tabLength = (json.Sections) ? json.Sections.length : 0\n  const tabTitle = (json.Sections) ? json.Sections[tabIndex].Title : ''\n\n  // React.useEffect(() => {\n  //   console.log('TabulationUpdated! : ',json);\n  // })\n\n  function onFirstSectionHandler(e) {\n    dispatch(callSection(0))\n  }\n  function onPrevSectionHandler(e) {\n    if (tabIndex > 0) dispatch(prevSection())\n  }\n  function onNextSectionHandler(e) {\n    if (tabIndex < tabLength - 1) dispatch(nextSection())\n  }\n  function onLastSectionHandler(e) {\n    dispatch(callSection(tabLength - 1))\n  }\n\n  return (\n    <nav className={styles.row}>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onFirstSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastBackward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onPrevSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepBackward} />\n      </button>\n      <div className={styles.title}>\n        <h2>{tabTitle}</h2>\n      </div>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onNextSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepForward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onLastSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastForward} />\n      </button>\n    </nav>\n  )\n}\n\nexport default Tabulation\n","import React, { useState } from 'react'\nimport styles from './Login.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faUser } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Login(props) {\n\n  const { visibility, toggleVisibility, css, backdrop, errormsg } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springloginProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [member, setMember] = useState('')\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.loginBackdrop} ${visibility ? '' : styles.loginBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springloginProps}>\n          <div\n            className={styles.loginContainer}\n            style={css}>\n            <div className={styles.loginClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.loginHeader}>\n              <FontAwesomeIcon icon={faUser} />\n            </div>\n            <div className={styles.loginContent}>\n              <form>\n                <label htmlFor=\"username\">username</label>\n                <input type=\"text\" name=\"username\" id=\"username\" onChange={e => setUsername(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"password\">password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"member\">member</label>\n                <input type=\"text\" name=\"member\" id=\"member\" onChange={e => setMember(e.target.value)} onFocus={() => props.clearError()} />\n              </form>\n            </div>\n            <div className={styles.loginFooter}>\n              <button className=\"btn btn-primary\" onClick={e => props.onSubmit(username, password, member)}>SUBMIT</button>\n              {errormsg}\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './SelectSearchable.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction useVisible(initialIsVisible) {\n  const [isVisible, setIsVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  }, [])\n  return { ref, isVisible, setIsVisible }\n}\n\n\nexport default function SelectSearchable(props) {\n\n  const [keyword, setKeyword] = useState('')\n  const input = useRef(null)\n\n  const items = props.items\n  const allowMultiple = props.allowMultiple\n  const width = props.width\n\n\n  const filteredList = keyword.length > 0 ? items.filter(item => String(item.label).toLowerCase().includes(keyword.toLowerCase())) : items\n\n  const { ref, isVisible, setIsVisible } = useVisible(false, input)\n\n  function onClickItemHandler(pEvent, pItem) {\n    pEvent.stopPropagation()\n    // console.log(`--->: onClickItemHandler -> pEvent.target.className: `, pEvent.currentTarget.className)\n    // console.log('---> delete here: ', pEvent.currentTarget.className.includes('delete'))\n\n    if (pEvent.currentTarget.className.includes('delete')) {\n      props.onSelectItem([])\n      return\n    }\n\n    if (allowMultiple) {\n      const clickedItemIndex = props.selectedItems.findIndex(item => item === pItem)\n\n      if (clickedItemIndex > -1) {\n        props.onSelectItem(props.selectedItems.filter(item => item !== pItem))\n      }\n      else props.onSelectItem([...props.selectedItems, pItem])\n    }\n    else {\n      props.onSelectItem([pItem])\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    if (input.current) input.current.focus()\n  }, [isVisible])\n\n  const cssWidth = width === \"s\" ? styles.ListSmall : width === \"m\" ? styles.ListMedium : styles.ListLarge\n\n  return (\n    <div className={styles.selectSearchable_Container}>\n      <div className={styles.selectSearchable_Header} onClick={e => setIsVisible(!isVisible)}>\n        <div className={styles.selectSearchable_SelectedContainer}>\n          {props.selectedItems.map((item, index) => <div key={index} className={styles.selectSearchable_SelectedItem}>\n            {item.label}\n            <span className={styles.selectedItem_delete} onClick={(e) => onClickItemHandler(e, item)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>)}\n        </div>\n        <div className={styles.selectSearchable_Trigger}>\n          <FontAwesomeIcon icon={isVisible ? faAngleDown : faAngleUp} />\n        </div>\n      </div>\n      {isVisible && <div style={{ position: 'absolute' }} className={`${styles.selectSearchable_List} ${cssWidth}`} ref={ref}>\n        <div className={styles.selectSearchable_SearchContainer}>\n          <input type=\"text\" value={keyword} onChange={e => setKeyword(e.target.value)} ref={input}></input>\n          <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n        </div>\n        <div className={styles.selectSearchable_ItemsContainer}>\n          {filteredList.map((item, index) => <span key={index} className={`${styles.selectItem} ${props.selectedItems.findIndex(selectedItem => item.label === selectedItem.label) > -1 ? styles.selectSearchable_SelectedItem_Selected : ''}`} onClick={(e) => onClickItemHandler(e, item)}>{item.label}</span>)}\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus,\n  setRepeaterValue,\n  selectRepeaterValue\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setErrorMsg,\n  clearErrorMsg\n} from '../features/display/displaySlice'\n\n\nimport Login from './Login'\nimport SelectSearchable from './SelectSearchable'\n\nimport { normalizeJson, getElementFromElementId, getDocumentExport } from '../app/utilities'\n\nfunction ApiInterface() {\n\n  // const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n  const documentStatus = useSelector(selectDocumentStatus)\n  const repeaterValue = useSelector(selectRepeaterValue)\n\n  const apiURL = 'https://api-uat.extrack.com/'\n\n  const [token, setToken] = useState({})\n  const [user, setUser] = useState({})\n\n  const [projects, setProjects] = useState([])\n  const [templates, setTemplates] = useState([])\n  const [documents, setDocuments] = useState([])\n\n  const [selectedProject, setSelectedProject] = useState([])\n  const [selectedProjectId, setSelectedProjectId] = useState('')\n\n  const [selectedTemplate, setSelectedTemplate] = useState([])\n  const [selectedTemplateRef, setSelectedTemplateRef] = useState([])\n\n  const [selectedDocumentRef, setSelectedDocumentRef] = useState([])\n\n  const [isFetchingTemplates, setIsFetchingTemplates] = useState(false)\n  const [isFetchingDocuments, setIsFetchingDocuments] = useState()\n\n  // const [errorMsg, setErrorMsg] = useState('')\n\n  const [isPopinLoginVisible, setIsPopinLoginVisible] = useState(false)\n  const [loginErrorMsg, setLoginErrorMsg] = useState('')\n\n\n\n  // PROJECT ---------------------------------------------------------------------//\n  useEffect(() => {\n    const projectId = selectedProject.length > 0 ? selectedProject[0].id : ''\n    // console.log('---> new selected Project: ', projectId)\n    if (projectId > 0) {\n      setSelectedProjectId(projectId)\n      getTemplates(projectId)\n      getDocuments(projectId)\n    }\n  }, [selectedProject])\n\n  // TEMPLATE ---------------------------------------------------------------------//\n  useEffect(() => {\n    // console.log('---> template selected: ', selectedTemplateRef)\n    if (selectedTemplateRef.length > 0) {\n      getTemplateById(selectedTemplateRef[0].Id)\n        .then(template => {\n          console.log(`--->: useEffect -> template: `, template)\n          setSelectedTemplate(template)\n          dispatch(setDocumentStatus('loaded'))\n        })\n    }\n  }, [selectedTemplateRef])\n\n  // OLD LOCAL STORAGE FOR REVERT\n  // useEffect(() => {\n  //   console.log('---> template set: ', selectedTemplate)\n  //   if (selectedTemplate.Config !== undefined) {\n  //     const configJson = selectedTemplate.Config\n  //     localStorage.setItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n  //     dispatch(setJson(normalizeJson(JSON.parse(configJson))))\n  //   }\n  // }, [selectedTemplate])\n\n  // DOCUMENT ---------------------------------------------------------------------//\n  useEffect(() => {\n    // console.log('---> selectedDocumentRef changed: ', selectedDocumentRef)\n    if (selectedDocumentRef.length > 0) {\n      dispatch(setDocumentStatus('loading'))\n\n      let document\n      getDocumentById(selectedDocumentRef[0].Id)\n        .then(value => document = value)\n\n        .then(value =>\n          getTemplateById(value.DocumentFormTemplateId)\n            .then(template => {\n              // console.log(`--->: useEffect -> template: `, template)\n              aggregateJson(template, JSON.parse(document.MetaData)[0])\n              dispatch(setDocumentStatus('loaded'))\n            })\n        )\n    }\n  }, [selectedDocumentRef])\n\n  // SENDING DOCUMENT\n  useEffect(() => {\n    if (documentStatus === 'tosend') {\n      // console.log(`---> Sending document: ${JSON.stringify(getDocumentExport())} for project: ${selectedProjectId} and template: ${selectedTemplateId}`)\n\n      let metadata = JSON.stringify([getDocumentExport()])\n      console.log(`----> metadata`, metadata)\n\n\n      const headers = new Headers()\n      // headers.append(\"Content-Type\", \"application/json\")\n      headers.append(\"Authorization\", `Bearer ${token.access_token}`)\n\n      // JSON.stringify triple metadata backslashes\n      const documentBody = JSON.stringify({\n        \"ID\": 0,\n        \"ProjectID\": selectedProjectId,\n        \"Description\": \"\",\n        \"Title\": \"Test-NewDoc\",\n        \"DocumentTypeId\": 1088,\n        \"DocumentFormTemplateID\": selectedDocumentRef.Id,\n        \"UserRevisionNumber\": \"0\",\n        \"UserRevisionDate\": \"2020-09-25\",\n        \"MetaData\": metadata,\n        \"OpenClosedStatus\": \"O\",\n        \"CreatedByContactID\": 1059,\n        \"CreatedByCompanyID\": 1009\n      })\n\n      const documentBodyString = JSON.stringify(documentBody)\n\n      let formdata = new FormData()\n      formdata.append(\"Document\", documentBody)\n\n      console.log(`--->: sendind with body ------>  :   `, documentBodyString)\n\n      const requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: formdata\n        // body: JSON.stringify(requestBody)\n        // body: JSON.stringify({\n        //   \"ID\": 0,\n        //   \"ProjectID\": 1249,\n        //   \"Description\": \"\",\n        //   \"Title\": \"Test-NewDoc\",\n        //   \"DocumentTypeId\": 1088,\n        //   \"DocumentFormTemplateID\": 25,\n        //   \"UserRevisionNumber\": \"0\",\n        //   \"UserRevisionDate\": \"2020-09-10\",\n        //   \"MetaData\": \"[{\\\"Elements\\\":[{\\\"Type\\\":\\\"Trilean\\\",\\\"Value\\\":\\\"N\\\",\\\"Id\\\":\\\"S032\\\",\\\"CommentValue\\\":\\\"TrileanCommentvaluefromdocument\\\"}]}]\",\n        //   \"OpenClosedStatus\": \"O\",\n        //   \"CreatedByContactID\": 1059,\n        //   \"CreatedByCompanyID\": 1009\n        // })\n      }\n\n      fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/Template/${selectedTemplateRef.Id}/Create`, requestOptions)\n        .then(res => res.text())\n        .then(result => console.log('response: ', result))\n        .catch(error => console.log('error', error))\n\n\n    }\n    // dispatch(setDocumentStatus('sent'))\n  }, [documentStatus])\n\n\n  const getTokenHandler = (username, password, member) => {\n\n    const headers = new Headers()\n    headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n\n    let urlencoded = new URLSearchParams()\n    urlencoded.append(\"username\", username)\n    urlencoded.append(\"password\", password)\n    urlencoded.append(\"MemberCode\", member)\n    urlencoded.append(\"grant_type\", \"password\")\n    urlencoded.append(\"timezone\", \"Australia/Sydney\")\n\n    fetch(`${apiURL}oAuth/Token`, {\n      method: 'POST',\n      headers: headers,\n      body: urlencoded\n    })\n      .then(res => res.text())\n      .then(result => {\n        const resultJSON = JSON.parse(result)\n        // console.log('result: ', resultJSON)\n        if (resultJSON.error) {\n          setLoginErrorMsg(resultJSON.error_description)\n        }\n        else {\n          getUser(resultJSON.access_token)\n          getProjects(resultJSON.access_token)\n          setToken(resultJSON)\n          localStorage.setItem('dynFormToken', JSON.stringify(resultJSON))\n          setIsPopinLoginVisible(false)\n        }\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  const getUser = (pToken) => {\n    const userHeaders = new Headers()\n    userHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n\n    const requestOptions = {\n      method: 'GET',\n      headers: userHeaders\n    }\n\n    fetch(`${apiURL}V1.0/User`, requestOptions)\n      .then(response => response.text())\n      .then(result => setUser(JSON.parse(result)))\n      .catch(error => console.log('error', error))\n  }\n\n  function aggregateJson(pTemplate, pDocument) {\n\n    const templateToUpdate = normalizeJson(JSON.parse(pTemplate.Config))\n\n    // console.log('Document\\'s Elements:', pDocument.Elements)\n    // console.log('Template to update:', templateToUpdate)\n\n    pDocument.Elements.forEach(item => {\n\n      let itemPath = getElementFromElementId(templateToUpdate, item.Id)\n      let firstFoundedPath = itemPath[0]\n\n      if (item.Type === 'Matrix') {\n        item.Elements.forEach((subitem, index) => {\n          itemPath = getElementFromElementId(JSON.parse(pTemplate.Config), subitem.Id)\n          if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n          if (itemPath.length === 0) return\n\n          firstFoundedPath = itemPath[0]\n\n          const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]].Elements[firstFoundedPath[2]].Elements[firstFoundedPath[3]]\n          templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]].Elements[firstFoundedPath[2]].Elements[firstFoundedPath[3]] = { ...templateValues, ...subitem }\n\n          // console.log(`subItem path received: `, itemPath)\n        })\n      }\n\n      else if (item.Type === 'Repeatable') {\n        // console.log('doc item: ', item)\n\n        // itemPath = getElementFromElementId(JSON.parse(pTemplate.Config), item.Id)\n        // if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n        // if (itemPath.length === 0) return\n\n        // firstFoundedPath = itemPath[0]\n        // const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n        // console.log(`--->: template item: `, templateValues)\n\n        dispatch(setRepeaterValue(item.RepeaterValue))\n      }\n\n      else {\n\n\n        if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n        if (itemPath.length === 0) return\n\n        // console.log('item value: ', item, ' --> path:  ', { sectionIndex: firstFoundedPath[0], pos: firstFoundedPath[1] })\n\n        const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n        templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]] = { ...templateValues, ...item }\n\n        // switch (itemPath[0].length) {\n        //   case 2:\n        //     const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n        //     templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]] = { ...templateValues, ...item }\n        //     // console.log('---> valuesToInsert', templateValues)\n        //     break\n        //   case 3:\n        //     console.log('---> two levels')\n        //     break\n        //   case 4:\n        //     console.log('---> three levels')\n        //     break\n        //   default:\n        //     break\n        // }\n\n      }\n\n\n    })\n    // console.log('Json created from Template with Document\\'s data: ', templateToUpdate)\n    dispatch(setJson(templateToUpdate))\n  }\n\n  /**-------------------------------------------------**\n  * @desc - PROJECTS                             -----*\n  *----------------------------------------------------*/\n  function getProjects(pToken) {\n    const projectsHeaders = new Headers()\n    projectsHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n    projectsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: projectsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project?selectorFields=(Id,Abbr)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('projects: ', JSON.parse(result))\n        setProjects(JSON.parse(result))\n      })\n      .catch(error => console.log('error', error))\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - TEMPLATES                             -----*\n  *----------------------------------------------------*/\n  function getTemplates(pProjectID) {\n    // console.log(`--->: getTemplates -> pProjectID: `, pProjectID)\n    setIsFetchingTemplates(true)\n\n    const templatesHeaders = new Headers()\n    templatesHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templatesHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templatesHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Document/Form/Templates?selectorFields=(Id,Title1)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('templates: ', JSON.parse(result))\n        setTemplates(JSON.parse(result))\n        setIsFetchingTemplates(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  async function getTemplateById(pTemplateId) {\n    // console.log('---> getTemplateById: ', pTemplateId)\n    let template\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProject[0].id}/Document/Form/Template/${pTemplateId}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        // console.log('result: ', result)\n        // template = JSON.parse(result)\n        template = result\n        // console.log('template: ', template.Config)\n      })\n      .catch(error => console.log('error', error))\n    // setSelectedTemplate(template)\n    return template\n\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - DOCUMENTS                             -----*\n  *----------------------------------------------------*/\n  function getDocuments(pProjectID) {\n    setIsFetchingDocuments(true)\n\n    const documentsHeaders = new Headers()\n    documentsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    documentsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: documentsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Documents?selectorFields=Id,Title,DocumentNumber,DocumentFormTemplateId&orderBy=Id desc`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(' ====> doucments: ', JSON.parse(result))\n        setDocuments(JSON.parse(result))\n        setIsFetchingDocuments(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  async function getDocumentById(pDocumentId) {\n    // console.log('---> getDocumentById: ', pDocumentId)\n    let document = {}\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/${pDocumentId}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('---> result fron fetch: ', result, JSON.parse(result), JSON.parse(result).Document)\n\n        document = JSON.parse(result).Document\n        // console.log('--> document from fetch: ', document)\n      })\n      .catch(error => console.log('error', error))\n    return document\n  }\n\n\n  // RETURN ----------------------------------------------------------------------------------------------------------------/\n\n  const templateLabel = isFetchingTemplates ? <div className=\"spinner\">Fetching Templates...</div> : selectedProject.length > 0 ? 'Select a template' : ''\n  const documentLabel = isFetchingDocuments ? <div className=\"spinner\">Fetching Documents...</div> : selectedProject.length > 0 ? 'Select a document' : ''\n\n  return (\n    <div className=\"bloc\">\n\n      <button className={`btn btn-ternary ${user.NameFirst ? 'hidden' : ''}`} onClick={() => setIsPopinLoginVisible(true)}>LOGIN</button>\n\n      <div className={`bloc-menu ${projects.length > 0 ? '' : 'hidden'}`}>\n        <h2 className=\"dropdown-label\">\n          Select a project\n        </h2>\n        <SelectSearchable allowMultiple={false} width=\"s\" items={projects.map(item => ({ label: item.Abbr, id: item.Id }))} selectedItems={selectedProject} onSelectItem={(item) => setSelectedProject(item)} />\n      </div>\n\n\n      <div className={`bloc-menu ${selectedProject.length === 0 ? '' : 'bloc-menu__separator'}`}>\n        <h2 className=\"dropdown-label\">{templateLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <SelectSearchable allowMultiple={false} width=\"m\" items={templates.map(item => ({ label: item.Title1, Id: item.Id }))} selectedItems={selectedTemplateRef} onSelectItem={(item) => setSelectedTemplateRef(item)} />\n        </div>\n      </div>\n\n      <div className='bloc-spacer'>\n        <span className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          OR\n        </span>\n      </div>\n\n\n      <div className=\"bloc-menu\">\n        <h2 className=\"dropdown-label\">{documentLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <SelectSearchable allowMultiple={false} width=\"m\" items={documents.map(item => ({ label: item.Title, Id: item.Id }))} selectedItems={selectedDocumentRef} onSelectItem={(item) => setSelectedDocumentRef(item)} />\n        </div>\n      </div>\n\n      {/* <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div> */}\n\n      <Login\n        visibility={isPopinLoginVisible}\n        toggleVisibility={() => setIsPopinLoginVisible(!isPopinLoginVisible)}\n        css={{ backgroundColor: '#007db4' }}\n        backdrop={'rgba(0,0,0,0.3)'}\n        onSubmit={getTokenHandler}\n        errormsg={loginErrorMsg}\n        clearError={() => setLoginErrorMsg('')\n        }\n      />\n\n    </div>\n  )\n}\n\nexport default ApiInterface","import React from 'react'\r\n\r\n\r\nimport JsonOptions from './components/JsonOptions'\r\nimport JsonReader from './features/json/JsonReader'\r\nimport Tabulation from './components/Tabulation'\r\nimport ApiInterface from './components/ApiInterface'\r\n\r\n\r\nimport './App.scss'\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <h1 title=\"v20.11.12\">\r\n          DYNAMIC FORM\r\n        </h1>\r\n        <ApiInterface />\r\n      </header>\r\n      <div className=\"options-container\">\r\n        <JsonOptions />\r\n      </div>\r\n      <Tabulation />\r\n      <main>\r\n        <JsonReader />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport jsonReducer from '../features/json/jsonSlice';\r\nimport tabulationReducer from '../features/tabulation/tabulationSlice';\r\nimport displayReducer from '../features/display/displaySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    json: jsonReducer,\r\n    tabulation: tabulationReducer,\r\n    display: displayReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\n\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}