{"version":3,"sources":["components/SelectSearchable.module.scss","components/Modal.module.scss","components/Login.module.scss","components/DateTimeInput.module.scss","components/DateInput.module.scss","components/TimeInput.module.scss","components/Figure.module.scss","components/Tabulation.module.scss","features/json/JsonReader.module.scss","features/json/jsonSlice.js","features/tabulation/tabulationSlice.js","features/display/displaySlice.js","components/JsonOptions.js","components/controls/DocumentTableOfContents.js","components/controls/ListMulticontrol.js","components/controls/Label.js","components/Modal.js","components/controls/Text.js","app/utilities.js","components/controls/Repeatable.js","components/controls/ButtonSubmitPurchase.js","components/controls/ButtonAddDocketNumber.js","components/controls/API.js","components/DateInput.js","components/controls/Date.js","components/Figure.js","components/controls/Image.js","components/controls/ImageSingle.js","components/controls/ButtonAddReportDate.js","components/controls/QRScanner.js","components/controls/QRScannerList.js","components/controls/Signature.js","components/controls/SignatureDateTime.js","components/controls/SignatureDate.js","components/controls/Matrix.js","components/controls/Checkbox.js","components/controls/Boolean.js","components/controls/Trilean.js","components/controls/TrileanLabel.js","components/controls/ListSingle.js","components/controls/ListMultiple.js","components/TimeInput.js","components/controls/Time.js","components/DateTimeInput.js","components/controls/DateTime.js","components/controls/TimeLabel.js","components/controls/DateLabel.js","components/controls/ButtonAddSignature.js","components/controls/RegisterSignatures.js","components/controls/SearchableListEntryDialogSMS.js","components/controls/ButtonAddSMS.js","components/controls/SearchableSMSListView.js","components/controls/SearchableListEntryDialogEmail.js","components/controls/ButtonAddEmail.js","components/controls/SearchableEmailListView.js","components/controls/MatrixButton.js","components/controls/DocumentSummaryGrid.js","components/controls/ButtonSubmitRegister.js","components/controls/ButtonCloseout.js","components/controls/ButtonViewDocument.js","features/json/JsonReader.js","components/Tabulation.js","components/Login.js","components/SelectSearchable.js","components/ApiInterface.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","jsonSlice","createSlice","name","initialState","value","JSON","parse","localStorage","getItem","documentStatus","reducers","setJson","state","action","payload","setItem","stringify","setDocumentStatus","actions","selectJson","json","selectDocumentStatus","tabulationSlice","callSection","prevSection","nextSection","selectedTabulation","tabulation","displaySlice","debugMode","errorMsg","setControls","setDebugMode","setOpenListId","openListId","setErrorMsg","clearErrorMsg","selectOptionedControls","display","selectDebugMode","selectOpenListId","selectErrorMsg","JsonOptions","dispatch","useDispatch","useSelector","loadedJSON","id","className","onClick","pEvent","icon","faRedo","style","transform","marginLeft","faTrash","htmlFor","type","checked","onChange","target","DocumentTableOfContents","props","sections","Sections","length","map","element","index","Elements","Type","key","Title","faChevronRight","ListMulticontrol","controlJson","Id","Data","IsVisible","options","option","cols","rows","disabled","selectedIndex","Number","visibleControls","undefined","OptionedControls","Controls","hiddenControls","forEach","controlId","push","Label","FontAttributes","FontSize","Margin","HasUnderLine","fontSize","fontWeight","fontStyle","borderBottom","padding","Modal","visibility","toggleVisibility","message","css","backdrop","springBackdropProps","useSpring","opacity","from","zIndex","config","gentle","springModalProps","top","stiff","backdropStyle","backgroundColor","div","styles","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","faTimes","modalHeader","faExclamationTriangle","modalContent","modalFooter","modalBtn","Text","IsEnabled","Value","Format","Warning","WarningMessage","Mandatory","ValidationMessage","useState","isModalVisible","setIsModalVisible","bgColor","modalOptions","setModalOptions","emailAddressTester","phoneNumberRestrictCodes","onChangeHandler","newJson","updateJson","onBlurHandler","focus","Keyboard","test","toLowerCase","useEffect","textfield","Lines","min","Min","max","Max","size","Decimal","maxLength","onKeyDown","includes","keyCode","preventDefault","VarChar","onBlur","warningMarker","mandatoryMarker","getControlName","pControlType","split","part","toUpperCase","slice","join","getElementFromElementId","pJson","pElementID","currentJson","camelcaseKeys","deep","pascalCase","normalizeJson","foundPath","section","sectionIndex","item","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","getCurrentDate","pDate","Date","now","exportMetaData","addToDocumentExport","pValue","controlIndex","findIndex","console","log","prevValue","table","Repeatable","components","ButtonSubmitPurchase","ButtonAddDocketNumber","API","Image","ImageSingle","ButtonAddReportDate","QRScanner","QRScannerList","Signature","SignatureDateTime","SignatureDate","Matrix","Checkbox","Boolean","Trilean","TrileanLabel","ListSingle","ListMultiple","Time","DateTime","TimeLabel","DateLabel","ButtonAddSignature","RegisterSignatures","SearchableListEntryDialogSMS","ButtonAddSMS","SearchableSMSListView","SearchableListEntryDialogEmail","ButtonAddEmail","SearchableEmailListView","MatrixButton","DocumentSummaryGrid","ButtonSubmitRegister","ButtonCloseout","ButtonViewDocument","updateJsonHandler","mergedElements","elementIndex","ID","children","control","componentName","Component","Api","IncludePhoneNumber","IncludeEmail","IncludeTitle","IncludeBusinessNumber","IncludeAbbreviation","IncludeCode","targetedApi","String","collapsed","setCollapsed","keyword","setKeyword","list","setList","filteredList","setFilteredList","constructor","selectedValues","setSelectedValues","animatedListProps","height","trailPills","useTrail","marginTop","to","apiUrl","getEndpoint","token","apiHeaders","Headers","append","access_token","requestOptions","method","headers","redirect","listItemClickHandler","currentItem","updateJSON","fetch","then","response","text","result","listItems","phoneNumber","emailAddress","title","abn","abbr","code","spacer","Contact","Email","NameFirst","NameLast","Company","Name","CompanyName","Abn","Abbr","Code","catch","error","filter","itemList","isSelected","iconCheck","faCheck","selectedPills","targetText","parentNode","innerText","faAngleDown","faAngleUp","placeholder","e","DateInput","dateformatConverted","format","replace","dateValue","setDateValue","dateString","addMonths","addDays","toTimeString","modifiers","AddDay","AddMonth","dateContainer","datePicker","defaultValue","onDateChange","btnClear","FormatDateTime","IsBlank","DateValue","defaultDate","toDateString","onDateChangeHandler","Figure","container","src","source","alt","btnClose","onClose","Images","onCloseHandler","images","image","faImage","figure","imageData","fileReader","FileReader","onload","readAsDataURL","files","signature","width","DateTimeValue","Columns","Rows","matrixLayout","i","j","controlComponent","substring","ElementId","gridTemplateColumns","gridTemplateRows","ShowComment","Collapsible","IsCollapsed","EntryTitle","Details","CommentValue","comment","commentText","details","entryTitle","defaultChecked","checkboxValue","booleanValue","HideNa","trileanValue","Buttons","buttons","button","computedBackground","Button","BackgroundColorSelected","BackgroundColor","Fragment","underline","SelectedValue","mass","tension","friction","newValues","TimeInput","timeformatConverted","timeValue","setTimeValue","pTime","timeString","addHours","AddHour","timeContainer","timePicker","onTimeChange","TimeValue","defaultTime","getHours","getMinutes","onTimeChangeHandler","DateTimeInput","dateFormatConverted","dateTimeValue","toLocaleTimeString","dateTimeStringValue","dateTimeContainer","onDateTimeChange","defaultDateTime","setDateTimeValue","pDateTime","onDateTimeChangeHandler","Selection","XAxisName","YAxisName","Legend","showLegend","ShowLegend","buttonClickHandler","pButtonId","buttonPath","buttonValue","LegendValuesY","Values","LegendValuesX","legendValuesX","legendValuesY","legend","JsonReader","optionedControls","activeSectionId","currentJsonToEdit","controls","getControlPathById","pControlId","currentSection","itemPath","controlPath","jsonToUpdate","controlsFromElements","skeleton","Array","fill","fixed","Tabulation","tabIndex","tabLength","tabTitle","row","faFastBackward","faStepBackward","faStepForward","faFastForward","Login","errormsg","springloginProps","username","setUsername","password","setPassword","member","setMember","loginBackdrop","loginBackdrop_freeze","loginContainer","loginClose","loginHeader","faUser","loginContent","onFocus","clearError","loginFooter","onSubmit","SelectSearchable","input","useRef","items","allowMultiple","label","initialIsVisible","isVisible","setIsVisible","ref","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useVisible","onClickItemHandler","pItem","stopPropagation","currentTarget","onSelectItem","selectedItems","cssWidth","ListSmall","ListMedium","ListLarge","selectSearchable_Container","selectSearchable_Header","selectSearchable_SelectedContainer","selectSearchable_SelectedItem","selectedItem_delete","selectSearchable_Trigger","position","selectSearchable_List","selectSearchable_SearchContainer","selectSearchable_ItemsContainer","selectItem","selectedItem","selectSearchable_SelectedItem_Selected","ApiInterface","apiURL","setToken","user","setUser","projects","setProjects","templates","setTemplates","documents","setDocuments","selectedProject","setSelectedProject","selectedProjectId","setSelectedProjectId","setSelectedTemplate","selectedTemplateRef","setSelectedTemplateRef","selectedDocumentRef","setSelectedDocumentRef","isFetchingTemplates","setIsFetchingTemplates","isFetchingDocuments","setIsFetchingDocuments","isPopinLoginVisible","setIsPopinLoginVisible","loginErrorMsg","setLoginErrorMsg","projectId","pProjectID","templatesHeaders","getTemplates","documentsHeaders","getDocuments","getTemplateById","template","getDocumentById","DocumentFormTemplateId","pTemplate","pDocument","templateToUpdate","Config","firstFoundedPath","templateValues","RepeaterValue","aggregateJson","MetaData","metadata","documentBody","documentBodyString","formdata","FormData","body","res","getUser","pToken","userHeaders","pTemplateId","a","templateHeaders","pDocumentId","Document","templateLabel","documentLabel","Title1","urlencoded","URLSearchParams","resultJSON","error_description","projectsHeaders","getProjects","App","configureStore","reducer","jsonReducer","tabulationReducer","displayReducer","window","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7730e25b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectItem\":\"SelectSearchable_selectItem__ytOvQ\",\"selectedItem_delete\":\"SelectSearchable_selectedItem_delete__DzATU\",\"selectSearchable\":\"SelectSearchable_selectSearchable__12vBI\",\"selectSearchable_Container\":\"SelectSearchable_selectSearchable_Container__fToYi\",\"selectSearchable_SearchContainer\":\"SelectSearchable_selectSearchable_SearchContainer__3eaGr\",\"selectSearchable_ItemsContainer\":\"SelectSearchable_selectSearchable_ItemsContainer__34yKg\",\"selectSearchable_Header\":\"SelectSearchable_selectSearchable_Header__20KCq\",\"selectSearchable_SelectedContainer\":\"SelectSearchable_selectSearchable_SelectedContainer__3HBOF\",\"selectSearchable_Trigger\":\"SelectSearchable_selectSearchable_Trigger__2brz3\",\"selectSearchable_SelectedItem\":\"SelectSearchable_selectSearchable_SelectedItem__ya07B\",\"selectSearchable_SelectedItem_Selected\":\"SelectSearchable_selectSearchable_SelectedItem_Selected__3kePe\",\"selectSearchable_List\":\"SelectSearchable_selectSearchable_List__12txV\",\"listCollapsed\":\"SelectSearchable_listCollapsed__2gYJk\",\"ListSmall\":\"SelectSearchable_ListSmall__24zac\",\"ListMedium\":\"SelectSearchable_ListMedium__3_qlO\",\"ListLarge\":\"SelectSearchable_ListLarge__m6apt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBackdrop\":\"Login_loginBackdrop__2-vXb\",\"loginBackdrop_freeze\":\"Login_loginBackdrop_freeze__30wYs\",\"loginContainer\":\"Login_loginContainer__1-kGp\",\"loginHeader\":\"Login_loginHeader__1dDHJ\",\"loginContent\":\"Login_loginContent__pNQUT\",\"loginFooter\":\"Login_loginFooter__1T3EA\",\"loginClose\":\"Login_loginClose__EEt8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"DateTimeInput_timePicker__g55DG\",\"datePicker\":\"DateTimeInput_datePicker__fMbwV\",\"dateTimeContainer\":\"DateTimeInput_dateTimeContainer__3DJHa\",\"btnClear\":\"DateTimeInput_btnClear__1hSf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"DateInput_datePicker__1qUGn\",\"dateContainer\":\"DateInput_dateContainer__3vsHd\",\"btnClear\":\"DateInput_btnClear__hBuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"TimeInput_timePicker__1bwP3\",\"timeContainer\":\"TimeInput_timeContainer__15bEw\",\"btnClear\":\"TimeInput_btnClear__3Cafn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Figure_container__1bF2w\",\"btnClose\":\"Figure_btnClose__3UDU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Tabulation_row__1qqOd\",\"title\":\"Tabulation_title__2BmpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"JsonReader_fixed__1abV0\"};","import { createSlice } from '@reduxjs/toolkit'\n\nexport const jsonSlice = createSlice({\n  name: 'json',\n  initialState: {\n    // value: {},\n    // documentStatus: 'init',\n\n    // // Persistence\n    value: JSON.parse(localStorage.getItem('json')) || {},\n    documentStatus: 'loaded',\n  },\n  reducers: {\n    setJson: (state, action) => {\n      // console.log(`setJson : `, action.payload)\n\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = action.payload\n\n      // Initial JSON to be set if json is not present (new document)\n      // localStorage.setItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n      localStorage.setItem('json', JSON.stringify(action.payload))\n    },\n    setDocumentStatus: (state, action) => {\n      // console.log(`setDocumentStatut : `, action.payload)\n      state.documentStatus = action.payload\n    }\n  },\n})\n\nexport const { setJson, setDocumentStatus } = jsonSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectJson = state => state.json.value\nexport const selectDocumentStatus = state => state.json.documentStatus\n\nexport default jsonSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\n\nexport const tabulationSlice = createSlice({\n  name: 'tabulation',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    callSection: (state, action) => {\n      state.value = action.payload\n    },\n    prevSection: state => {\n      state.value -= 1\n    },\n    nextSection: state => {\n      state.value += 1\n    },\n  },\n});\n\nexport const { callSection,\n  prevSection,\n  nextSection,\n  } = tabulationSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectedTabulation = state => state.tabulation.value;\n\n\nexport default tabulationSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const displaySlice = createSlice({\n  name: 'display',\n  initialState: {\n    value: {},\n    debugMode: false,\n    errorMsg: ''\n  },\n  reducers: {\n    setControls: (state, action) => {\n      state.value = action.payload\n    },\n    setDebugMode: (state, action) => {\n      state.debugMode = action.payload\n    },\n    setOpenListId: (state, action) => {\n      state.openListId = action.payload\n    },\n    setErrorMsg: (state, action) => {\n      state.errorMsg = action.payload\n    },\n    //what's that\n    clearErrorMsg: state => {\n      state.errorMsg = ''\n    }\n  }\n})\n\nexport const { setControls, setDebugMode, setOpenListId, setErrorMsg, clearErrorMsg } = displaySlice.actions\n\nexport const selectOptionedControls = state => state.display.value\nexport const selectDebugMode = state => state.display.debugMode\nexport const selectOpenListId = state => state.display.openListId\nexport const selectErrorMsg = state => state.display.errorMsg\n\nexport default displaySlice.reducer","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setDebugMode,\n  selectDebugMode\n} from '../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport default function JsonOptions() {\n\n  const dispatch = useDispatch()\n  const debugMode = useSelector(selectDebugMode)\n  const onDebugChangeHandler = (pEvent) => dispatch(setDebugMode(pEvent.target.checked))\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  let loadedJSON = JSON.parse(localStorage.getItem('initialJson')) || {}\n\n  function clickRevertChangesHandler(pEvent) {\n    dispatch(callSection(0))\n    dispatch(setJson(loadedJSON))\n  }\n\n  function clickClearDocumentHandler(pEvent) {\n    dispatch(setJson({}))\n  }\n\n  // function clickLoadJSONHandler(pEvent) {\n  //   fileLoaderInput = document.querySelector('#fileLoader')\n  //   fileLoaderInput.click()\n  // }\n  // let fileLoaderInput\n  // function loadJSONHandler(pEvent) {\n  //   const file = pEvent.target.files[0]\n  //   const reader = new FileReader()\n\n  //   reader.onloadend = function () {\n  //     try {\n  //       let source = reader.result\n  //       let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n  //       loadedJSON = JSON.parse(atob(newSource))\n  //       console.log(`--->: reader.onloadend -> newData`, loadedJSON)\n\n  //       localStorage.setItem('initialJson', JSON.stringify(loadedJSON))\n  //       dispatch(setJson(loadedJSON))\n  //     }\n  //     catch (err) {\n  //       console.log('---> ', err)\n  //     }\n  //   }\n  //   if (file) {\n  //     reader.readAsDataURL(file)\n  //   }\n  // }\n\n\n  return (\n    <div id=\"jsonOptions\" className={`${(documentStatus === 'modified') ? 'options-visible' : 'options-hidden'}`}>\n      {/* <button className=\"btn btn-ternary\" onClick={clickLoadJSONHandler}>LOAD JSON FILE</button> */}\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickRevertChangesHandler}>\n        <FontAwesomeIcon icon={faRedo} style={{ transform: 'scaleX(-1)', marginLeft: 0 }} />\n        REVERT CHANGES\n      </button>\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickClearDocumentHandler}>\n        <FontAwesomeIcon icon={faTrash} style={{ marginLeft: 0 }} />\n        CLEAR DOCUMENT\n      </button>\n      {/* <input id=\"fileLoader\" type=\"file\" onChange={loadJSONHandler}></input> */}\n      <div className=\"debug\">\n        <label htmlFor=\"debug\">Debug</label>\n        <input type=\"checkbox\" name=\"debug\" id=\"debug\" className=\"debug-check\" checked={debugMode} onChange={onDebugChangeHandler} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectJson\n} from '../../features/json/jsonSlice';\nimport {\n  callSection\n} from '../../features/tabulation/tabulationSlice';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DocumentTableOfContents(props) {\n  const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n\n  // const { Title, Id, Elements }  = json\n\n  function gotToSectionHanlder(pSectionIndex) {\n    // console.log('pSectionIndex: ', pSectionIndex)\n    dispatch(callSection(pSectionIndex))\n  }\n\n  const sections = json.Sections && json.Sections.length > 0 ? json.Sections.map((element, index) => {\n    if (element.Elements[0].Type === 'Document.TableOfContents') return null\n    return (\n      <li key={index}>\n        <button className=\"btn btn-secondary-outlined btn-link fixed-large\" onClick={() => gotToSectionHanlder(index)}>\n          {element.Title}\n          <FontAwesomeIcon icon={faChevronRight} />\n        </button>\n      </li>\n    )\n  }) : ''\n\n  return (\n    <ul className=\"toc-list\">\n      {sections}\n    </ul>\n  )\n}\n\nexport default DocumentTableOfContents\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { setControls } from '../../features/display/displaySlice'\n\nfunction ListMulticontrol(props) {\n\n  const json = props.controlJson\n\n  const { Type, Title, Id, Data, IsVisible = true } = json\n\n  const debugMode = useSelector(selectDebugMode)\n  const dispatch = useDispatch()\n\n\n  function onChangeHandler(pEvent) {\n    const selectedIndex = Number(pEvent.target.value)\n    // console.log(`--->: onChangeHandler -> selectedIndex`, selectedIndex)\n    if (selectedIndex >= 0) {\n      const visibleControls = json.OptionedControls[selectedIndex].Controls !== undefined ? json.OptionedControls[selectedIndex].Controls : []\n      const hiddenControls = []\n\n      json.OptionedControls.forEach((option, index) => {\n        // console.log('index: ', index, '  selectedIndex: ', selectedIndex)\n\n        if (option.Controls !== undefined && index !== selectedIndex) {\n          option.Controls.forEach(controlId => hiddenControls.push(controlId))\n          // console.log('index: ', index, '  selectedIndex: ', selectedIndex, '   hide: ', option.Controls)\n        }\n\n      })\n\n      // console.log('---> hiddenControls: ', hiddenControls)\n      // console.log('---> visibleControls: ', visibleControls)\n      dispatch(setControls({ hiddenControls, visibleControls }))\n      // displayControls(visibleControls)\n    }\n  }\n\n  function displayControls(pControlList) {\n    // console.log('---> pControlList: ', pControlList)\n\n\n    // dispatch(setControls(pControlList))\n\n    // pControlList.forEach((item, index) => {\n    //   console.log('---> ', item)\n    // })\n  }\n\n  const options = Data.map((option, index) => <option key={index} value={index}>{option}</option>)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <label htmlFor=\"listmulticontrol\">{Title}</label>\n          <select name=\"listmulticontrol\" id=\"listmulticontrol\" onChange={onChangeHandler}>\n            <option value=\"-1\">-----</option>\n            {options}\n          </select>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ListMulticontrol\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Label(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, FontAttributes, FontSize = 14, Margin = 0, HasUnderLine = false } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <div className=\"control\" style={{\n            fontSize: FontSize - 2 + 'px',\n            fontWeight: FontAttributes === 'Bold' ? 'bold' : '',\n            fontStyle: FontAttributes === 'Italic' ? 'italic' : '',\n            borderBottom: HasUnderLine ? '1px solid black' : '',\n            padding: Margin ? Margin + 'px' : ''\n          }}>{Title}\n          </div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default Label","import React from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springModalProps}>\n          <div\n            className={styles.modalContainer}\n            style={css}>\n            <div className={styles.modalClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.modalHeader}>\n              <FontAwesomeIcon icon={faExclamationTriangle} />\n            </div>\n            <div className={styles.modalContent}>\n              {message}\n            </div>\n            <div className={styles.modalFooter}>\n              <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport Modal from '../Modal'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Text(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, IsEnabled = true, Value = '', Format, Warning = false, WarningMessage, Mandatory, ValidationMessage } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalOptions, setModalOptions] = useState(Mandatory ? { message: ValidationMessage, bgColor: '#EF643C' } : { message: WarningMessage, bgColor: '#000000' })\n\n\n  const emailAddressTester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/\n  const phoneNumberRestrictCodes = [49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 16, 57, 48, 16, 187, 32, 8, 35]\n\n\n  function onChangeHandler(pEvent) {\n\n    // if ((Format.Keyboard === 'Telephone') && !telephoneTester.test(pEvent.target.value)) return\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    // console.log('value: ', json)\n    props.updateJson(newJson)\n  }\n\n  function onBlurHandler(pEvent) {\n    const target = pEvent.target\n\n    if (Warning && target.value === '') {\n      setIsModalVisible(true)\n    }\n    if (Mandatory && target.value === '') {\n      target.focus()\n      setIsModalVisible(true)\n    }\n    if (Format !== undefined && Format.Keyboard === 'Email') {\n      if (!emailAddressTester.test((pEvent.target.value).toLowerCase())) {\n\n        setModalOptions({ message: \"The email address provided appears not to be valid\", bgColor: '#000000' })\n        setIsModalVisible(true)\n      }\n    }\n  }\n\n  function onKeyDownHandler(pEvent) {\n    // console.log('---> ', pEvent.keyCode)\n    if (Format.Keyboard === 'Telephone') {\n      if (!phoneNumberRestrictCodes.includes(pEvent.keyCode)) pEvent.preventDefault()\n    }\n  }\n\n  useEffect(() => {\n    // console.log('Text set data: ', Value)\n  }, [json])\n\n  const textfield = Format !== undefined ?\n    Format.Lines !== undefined ? <textarea id={Id} rows={Format.Lines} onChange={onChangeHandler}></textarea>\n      :\n      Format.Keyboard === 'Numeric' ? <input type='number' min={Format.Min} max={Format.Max} size={Format.Decimal} onChange={onChangeHandler} />\n        :\n        Format.Keyboard === 'Telephone' ? <input type='text' maxLength=\"20\" onKeyDown={onKeyDownHandler} onChange={onChangeHandler} />\n          :\n          <input id={Id} type=\"text\" value={Value} maxLength={Format.VarChar || -1} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n    :\n    <input id={Id} type=\"text\" value={Value} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n\n  const warningMarker = WarningMessage ? '*' : ''\n  const mandatoryMarker = Mandatory ? <span className=\"warning-red\">*</span> : ''\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <label htmlFor=\"title\">{Title} {warningMarker}{mandatoryMarker}</label>\n          {textfield}\n        </div>\n        <Modal\n          visibility={isModalVisible}\n          toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n          message={`${Id}: ${modalOptions.message}`}\n          css={{ backgroundColor: modalOptions.bgColor }}\n          backdrop={'rgba(0,0,0,0.3)'}\n        />\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Text\n","import camelcaseKeys from 'camelcase-keys'\n\nexport function getControlName(pControlType) {\n  return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n}\n\nexport function getElementFromElementId(pJson, pElementID) {\n  // console.log(`----------------> Looking for pElementID: `, pElementID, ' inside pJson: ', pJson)\n\n  const currentJson = normalizeJson(pJson).Sections\n  // console.log(`--->: getElementFromElementId inside this: `, currentJson)\n  let foundPath = []\n\n  if (pElementID !== 'undefined') {\n    currentJson.forEach((section, sectionIndex) => {\n      section.Elements.forEach((item, index) => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach((subsubitem, subsubindex) => {\n                if (subsubitem.Id !== undefined && subsubitem.Id === pElementID) {\n                  // console.log('--> subsubpath: ', { sectionIndex, index, subindex, subsubindex })\n                  foundPath.push([sectionIndex, index, subindex, subsubindex])\n                }\n              })\n\n            }\n\n            if (subitem.Id !== undefined && subitem.Id === pElementID) {\n              // console.log('--> subpath: ', { sectionIndex, index, subindex })\n              foundPath.push([sectionIndex, index, subindex])\n            }\n\n          })\n        }\n\n        if (item.Id !== undefined && item.Id === pElementID) {\n          // console.log('--> path: ', { sectionIndex, index })\n          foundPath.push([sectionIndex, index])\n        }\n\n      }\n      )\n    }\n    )\n  }\n\n  return foundPath\n}\n\n// Fix conflict with React component 'Date' and Date JS Object\nexport function getCurrentDate(pDate = Date.now()) {\n  // console.log(`--->: getCurrentDate -> pDate`, pDate)\n  // return new Date().toLocaleDateString().split('/').reverse().join('-')\n  // return new Date().toLocaleDateString()\n  // return new Date()\n  return new Date(pDate)\n}\nexport function getDateObjFromDate(pDate) {\n  const dateObj = new Date(pDate + ' ' + new Date().toTimeString())\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromTime(pTime) {\n  const dateObj = new Date(new Date().toDateString() + ' ' + pTime)\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromDateString(pDate) {\n  const dateObj = new Date(pDate)\n  return dateObj\n}\n\nexport function normalizeJson(pJson) {\n  // const json = JSON.parse(pJson)\n  return camelcaseKeys(pJson, { deep: true, pascalCase: true })\n}\n\n//\nconst exportMetaData = []\nexport function addToDocumentExport(pValue) {\n\n  const controlIndex = exportMetaData.findIndex(item => item.Id === pValue.Id)\n  console.log(`--->: addToDocumentExport -> controlIndex`, controlIndex)\n  if (controlIndex === -1) exportMetaData.push(pValue)\n  else {\n    const prevValue = { ...exportMetaData[controlIndex] }\n    exportMetaData[controlIndex] = { ...prevValue, ...pValue }\n  }\n  // console.log(`--->: addToDocumentExport -> pValue`, pValue.Id)\n  console.log(`exportMetaData :`)\n  console.table(exportMetaData)\n\n  // exportMetaData[0].Elements.push(pValue)\n  // console.log('---> addToDocumentExport: ', exportMetaData)\n}\n\nexport function getDocumentExport() {\n  return { Elements: exportMetaData }\n}","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\n\nimport { getControlName } from '../../app/utilities'\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  // Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from './'\n\nfunction Repeatable(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, Elements, IsVisible = true } = json\n  // console.log(`--->: Repeatable -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n\n  function updateJsonHandler(pJson) {\n    console.log('update this: ', pJson)\n    console.log('in this: ', json.Elements)\n    const mergedElements = [...json.Elements]\n\n    const elementIndex = mergedElements.findIndex(element => element.ID === pJson.ID)\n    mergedElements[elementIndex] = pJson\n    console.log('--->elementIndex:  ', elementIndex)\n\n    props.updateJson({ ...json, Elements: mergedElements })\n  }\n\n  const children = Elements.map((control, index) => {\n    const componentName = getControlName(control.Type)\n    // console.log(`--->componentName: `, componentName)\n    const Component = components[componentName]\n    return <Component key={index} controlJson={control} updateJson={updateJsonHandler} />\n    // return <div key={index}>{control.Type}</div>\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          {children}\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default Repeatable","import React, { useState } from 'react'\n\nfunction ButtonSubmitPurchase(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitPurchase<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitPurchase\n","import React, { useState } from 'react'\n\nfunction ButtonAddDocketNumber(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddDocketNumber<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddDocketNumber\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId, selectDebugMode } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction API(props) {\n\n  const json = props.controlJson\n\n  const { Title, Type, Id, IsVisible = true, Value = '', Api,\n    IncludePhoneNumber, IncludeEmail, IncludeTitle, IncludeBusinessNumber, IncludeAbbreviation, IncludeCode } = json\n  const targetedApi = String(Api).toLowerCase()\n\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [list, setList] = useState([])\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // useEffect(() => {\n  //   // console.log(`API (${Title}) has new json: ${JSON.stringify(json)}`)\n  //   // console.log('API: default data: ', Value)\n  // }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - API                                   -----*\n  *----------------------------------------------------*/\n\n  const environment = 'https://api-uat.extrack.com/V1.0/'\n  const projectID = 1249\n\n  const apiUrl = `${environment}${getEndpoint()}`\n\n  const token = JSON.parse(localStorage.getItem('dynFormToken'))\n  // console.log(`--->: API -> Api`, Api, token.access_token)\n\n  const apiHeaders = new Headers()\n  apiHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n  const requestOptions = {\n    method: 'GET',\n    headers: apiHeaders,\n    redirect: 'follow'\n  }\n\n  function getEndpoint() {\n    switch (targetedApi) {\n      case 'projectcompany':\n        return `Project/${projectID}/Directory/Companies`\n      case 'projectcontacts':\n        return `Project/${projectID}/Directory/Contacts`\n      case 'globalcontacts':\n        return `Org/contacts`\n      case 'dockettypes':\n        return `/Docket/Types`\n      case 'abs':\n        return `Project/${projectID}/ABS`\n      case 'tbs':\n        return `Project/${projectID}/TBS`\n      case 'cbs':\n        return `Project/${projectID}/CbsWo`\n      case 'dbs':\n        return `Project/${projectID}/DBS`\n      case 'fbs':\n        return `Project/${projectID}/FBS`\n      case 'wbs':\n        return `Project/${projectID}/WBS`\n      case 'pcbs':\n        return `Project/${projectID}/PCBS`\n      case 'pbs':\n        return `Project/${projectID}/PBS`\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(targetedApi, JSON.parse(result))\n        const dropdownOptions = JSON.parse(result)\n        // console.log(`--->: API -> dropdownOptions`, dropdownOptions)\n\n        const listItems = dropdownOptions.map((item, index) => {\n          let option, phoneNumber, emailAddress, title, abn, abbr, code, spacer\n          switch (Api) {\n\n            case 'ProjectContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Contact.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Contact.Email || `n/a`}` : ``\n              option = `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}${phoneNumber}${emailAddress}`\n              break\n\n            case 'GlobalContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Email || `n/a`}` : ``\n              option = `${item.NameFirst} ${item.NameLast} | ${item.CompanyName}${phoneNumber}${emailAddress}`\n              break\n\n            case 'ProjectCompany':\n              // console.log(`--->: API ${Api} -> item`, item)\n\n              title = IncludeTitle ? ` | ${item.Title || `n/a`}` : ``\n              abn = IncludeBusinessNumber ? ` | ${item.Company.Abn || `n/a`}` : ``\n              abbr = IncludeAbbreviation ? ` | ${item.Company.Abbr || `n/a`}` : ``\n              option = `${item.Company.Name}${title}${abn}${abbr}`\n              // optionLabel = `${item.Company.Name} - ${item.Company.Abbr}`\n              break\n\n            case 'DocketTypes':\n              option = `${item.Title}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n            default:\n              title = IncludeTitle ? `${item.Title || `n/a`}` : ``\n              code = IncludeCode ? `${item.Code || `n/a`}` : ``\n              spacer = (IncludeCode && IncludeTitle) ? ` | ` : ``\n              option = `${title}${spacer}${code}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n          }\n\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          // console.log('component:', {Type: 'Api', Value, optionLabel})\n          // setSelectedValue(optionValue)\n          // }\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          //   currentValue = Value\n          //   console.log('API ---> DefaultValue: ', Value, '----> optionLabel : ', optionLabel)\n\n          // }\n          // return <option key={index} value={optionValue}>{optionLabel}</option>\n          return option\n        })\n        setList(listItems)\n        // console.log(`--->: API -> dropdownNodes`, dropdownNodes)\n\n      })\n      .catch(error => console.log('error', error))\n  }, [])\n\n\n\n\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(list.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [list, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    if (selectedValues[0] !== currentItem) setSelectedValues([currentItem])\n    else setSelectedValues([])\n    updateJSON(currentItem)\n  }\n  function updateJSON(pValue) {\n    // console.log(`--->: updateJSON with Value: `, pValue)\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    // console.log(`--->: updateJSON -> newJson`, newJson)\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = (item === Value) ? true : false\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default API","import React, { useState } from 'react'\n\nimport { format, addDays, addMonths } from 'date-fns'\n// import DatePicker from \"react-datepicker\"\n// import \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DateInput(props) {\n\n  const dateformatConverted = props.format.replace(/ddd/g, 'eee')\n  const [dateValue, setDateValue] = useState(props.dateValue)\n  // console.log(`--->: DateInput -> props.dateValue received: `, props.dateValue)\n\n  function onClearHandler() {\n    setDateValue('')\n    props.onDateChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setDateValue(pValue)\n    props.onDateChange(pValue)\n  }\n\n  const dateString = dateValue === '' ? dateValue : format(addMonths(addDays(getDateObjFromDate(dateValue), props.modifiers.AddDay), props.modifiers.AddMonth), dateformatConverted)\n\n\n  return (\n    <div className={styles.dateContainer}>\n      <input\n        type=\"date\"\n        name=\"\"\n        id=\"\"\n        className={styles.datePicker}\n        defaultValue={dateValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {dateString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { getCurrentDate, getDateObjFromDate } from '../../app/utilities'\nimport DateInput from '../DateInput'\n\nfunction Date(props) {\n\n  const json = props.controlJson\n  let { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd', IsBlank = false, IsVisible = true, AddDay = 0, AddMonth = 0, DateValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultDate = (DateValue === '' || DateValue === undefined) ?\n    `${getCurrentDate().toDateString()}`\n    :\n    DateValue\n\n\n  const [dateValue, setDateValue] = useState(!IsBlank ? defaultDate : '')\n\n  function onDateChangeHandler(pDate) {\n    setDateValue(pDate)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDate !== '') newJson.DateValue = pDate\n    else delete newJson.DateValue\n    newJson.IsBlank = (pDate !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateInput format={FormatDateTime} dateValue={dateValue} modifiers={{ AddDay, AddMonth }} onDateChange={(value) => onDateChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Date","import React from 'react'\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './Figure.module.scss'\n\n\nexport default function Figure(props) {\n\n  function onClickHandler(pEvent) {\n    // console.log('---> ', pEvent)\n\n    props.onClose(pEvent)\n\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.source} alt=\"figure\" />\n      <div className={styles.btnClose} onClick={onClickHandler}><FontAwesomeIcon icon={faTimes} /></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction Image(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, IsVisible = true, Images = [] } = json\n  // console.log(`--->: Image -> IsVisible`, IsVisible)\n\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [selectedFile, setSelectedFile] = useState('')\n\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    // const newJson = JSON.parse(JSON.stringify(json))\n    // newJson.Value = pEvent.target.value\n    console.log('pEvent: ', pEvent)\n    // props.updateJson(newJson)\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const images = Images.map((image, index) => (\n    <div className=\"control-row\" key={`image${index}`}>\n      <Figure source={`data:image/png; base64, ${image}`} onClose={onCloseHandler} />\n    </div>\n  ))\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          {images}\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Image\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction ImageSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, IsVisible = true, Value = '' } = json\n  // console.log(`--->: ImageSingle -> IsVisible`, IsVisible)\n\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    let imageData\n    const fileReader = new FileReader()\n    fileReader.onload = (e) => {\n      imageData = e.target.result.replace(\"data:image/png;base64,\", \"\")\n\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = imageData\n      props.updateJson(newJson)\n    }\n    fileReader.readAsDataURL(pEvent.target.files[0])\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    delete newJson.Value\n    props.updateJson(newJson)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const figure = Value !== '' ? <Figure source={`data:image/png; base64, ${Value}`} onClose={onCloseHandler} /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          <div className=\"control-row\">\n            {figure}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default ImageSingle\n","import React, { useState } from 'react'\n\nfunction ButtonAddReportDate(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddReportDate<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddReportDate","import React from 'react'\n\nfunction QRScanner() {\n  return (\n    <div>\n      QRScanner\n    </div>\n  )\n}\n\nexport default QRScanner\n","import React from 'react'\n\nfunction QRScannerList() {\n  return (\n    <div>\n      QRScannerList\n    </div>\n  )\n}\n\nexport default QRScannerList\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Signature(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n            </div>\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\n\nexport default Signature\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateTimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateTimeValue}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDateTime\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDate(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateValue}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDate\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport {\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\n// import { selectDocumentStatus, setDocumentStatus } from '../../features/json/jsonSlice'\n// import { useDispatch } from 'react-redux'\n\nexport default function Matrix(props) {\n\n  const json = props.controlJson\n  // console.log(`-> json`, json)\n\n  const { Type, Id, Title, Columns, Rows, Elements, IsVisible = true } = json\n\n  console.log(`--->: Matrix -> Elements`, Elements)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  const components = {\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures\n  }\n\n  let matrixLayout = []\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j]\n      // console.log(`--->: Matrix -> element`, element)\n      const componentName = getControlName(element.Type)\n      // console.log(`--->: Matrix -> componentName`, componentName)\n\n      const Component = components[componentName]\n      const controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n\n      matrixLayout.push(<div key={`${i}-${j}`} className=\"matrix-box\" style={{ backgroundColor: i % 2 > 0 ? 'rgb(244, 244, 244)' : '', borderBottom: i % 2 > 0 ? '1px solid #CCC' : '' }}>{controlComponent}</div>)\n\n    }\n\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log(`--->: updateJsonHandler -> pJson`, pJson)\n    // console.log('updating... ', documentStatus)\n    // if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n\n    // const controlPath = getControlPathById(pJson.Id)\n    // // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    // let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // // ONLY FIST SUBLEVEL\n    // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    // dispatch(setJson(jsonToUpdate))\n  }\n\n\n  // let layout = Elements.map((item, index) => <div key={index}>boxCol</div>)\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container control-container-matrix\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div style={{ display: 'grid', gridTemplateColumns: `repeat(${Columns}, 1fr)`, gridTemplateRows: `repeat(${Rows}, 1fr)` }}>\n              {matrixLayout}\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Checkbox(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, EntryTitle, Details, HasUnderLine, IsVisible = true, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Checkbox -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n\n    const checkboxValue = pEvent.target.checked === true ? 'Y' : 'N'\n    const valuesToExport = { Type, Id, Value: checkboxValue }\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = checkboxValue\n    // console.log('value: ', newJson.Value, json)\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const commentText = pEvent.target.value\n    const valuesToExport = { Id, CommentValue: commentText }\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = commentText\n    props.updateJson(newJson)\n  }\n\n  useEffect(() => {\n    // console.log('Checkbox set data :', json)\n  }, [json])\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className={`control ${HasUnderLine ? 'control-underline' : ''}`}>\n          <h3>{Title}</h3>\n          {details}\n          <input type=\"checkbox\" defaultChecked={Value === 'Y'} onChange={onChangeHandler} />\n          {entryTitle}\n          {comment}\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Checkbox\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Boolean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, HasUnderLine, EntryTitle, Details, IsVisible = true, Value = '', CommentValue = '' } = json\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n\n  function onChangeHandler(pEvent) {\n\n    const booleanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: booleanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = booleanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-inline\">\n            {details}\n          </div>\n          <div className={`control-inline ${HasUnderLine ? 'control-underline' : ''}`}>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n            </div>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n            </div>\n          </div>\n          <div className=\"control-inline\">\n            {entryTitle}\n          </div>\n          <div className=\"control-inline\">\n            {comment}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Boolean","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Trilean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, HideNa, IsVisible = true, Collapsible, IsCollapsed, EntryTitle, Details, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Trilean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n\n    const trileanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: trileanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = trileanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n\n  useEffect(() => {\n    // console.log('Trilean set data :', json)\n  }, [json])\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-row\">\n            {details}\n          </div>\n          <div className=\"control-row\">\n            <div className=\"control-inline\">\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"yes\">Yes</label>\n                <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n              </div>\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"no\">No</label>\n                <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n              </div>\n              <div className={`${HideNa ? 'hidden' : ''} control-checkbox`}>\n                <label htmlFor=\"na\">N/A</label>\n                <input type=\"radio\" id=\"na\" name={Id} value=\"NA\" checked={Value === 'NA'} onChange={onChangeHandler} />\n              </div>\n            </div>\n          </div>\n          <div className=\"control-row\">\n            {comment}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Trilean\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction TrileanLabel(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Buttons, CommentValue, HasUnderLine, ShowComment, HideNa, Value } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // console.log('---> radio click: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n\n  const buttons = Buttons !== undefined ? Buttons.map((button, index) => {\n    const computedBackground = Value === button.Button ? button.BackgroundColorSelected : button.BackgroundColor\n    if (!(HideNa && button.Button === 'NA')) return (\n\n      <React.Fragment key={`${Id}${index}`}>\n\n        <input type=\"radio\" name={Id} id={`${Id}${button.Label}`} value={button.Button} className=\"radiocheck-hidden\" onChange={onChangeHandler} />\n        <label htmlFor={`${Id}${button.Label}`} className=\"radiocheck-button\" style={{ backgroundColor: computedBackground }}>\n          {button.Label}\n        </label>\n\n      </React.Fragment>\n    )\n  }) : ''\n\n  const comment = ShowComment ? <div className=\"control-row\">{CommentValue}</div> : ''\n  const underline = HasUnderLine ? <hr /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {comment}\n          <div className=\"control-row\">\n            {buttons}\n            {underline}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\nexport default TrileanLabel\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId, selectDebugMode } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction ListSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, Value = '', IsVisible = true } = json\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    if (selectedValues[0] !== pEvent.target.id) setSelectedValues([pEvent.target.id])\n    else setSelectedValues([])\n    updateJSON(pEvent.target.id)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = selectedValues.findIndex(value => item === value) > -1\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\nexport default ListSingle","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId, selectDebugMode } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction ListMultiple(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, SelectedValue = [], IsVisible = true } = json\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState(SelectedValue || [])\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: { mass: 1, tension: 500, friction: 26 }\n  })\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        const newValues = selectedValues.filter(item => item !== targetText)\n        setSelectedValues(newValues)\n        updateJSON(newValues)\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    const newValues = (selectedValues.findIndex(item => item === currentItem) < 0) ? [...selectedValues, currentItem]\n      : selectedValues.filter(item => item !== currentItem)\n    setSelectedValues(newValues)\n    updateJSON(newValues)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.SelectedValue = pValue\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = selectedValues.findIndex(value => item === value) > -1\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ListMultiple\n","import React, { useState } from 'react'\n\nimport { format, addHours } from 'date-fns'\n\nimport { getDateObjFromTime } from '../app/utilities'\n\nimport styles from './TimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function TimeInput(props) {\n\n  // console.log(`--->: TimeInput -> timeValue received: `, props.timeValue, getDateObjFromTime(props.timeValue))\n\n  const timeformatConverted = props.format.replace('tt', 'a')\n  const [timeValue, setTimeValue] = useState(props.timeValue)\n\n  function onClearHandler(pEvent) {\n    setTimeValue('')\n    props.onTimeChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setTimeValue(pValue)\n    props.onTimeChange(pValue)\n  }\n\n  const timeString = timeValue !== '' ? format(addHours(getDateObjFromTime(timeValue), props.modifiers.AddHour), timeformatConverted)\n    :\n    ''\n\n  return (\n    <div className={styles.timeContainer}>\n      <input\n        type=\"time\"\n        name=\"\"\n        id=\"\"\n        className={styles.timePicker}\n        value={timeValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {timeString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport TimeInput from '../../components/TimeInput'\n\nfunction Time(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'hh:mm tt', IsBlank = false, IsVisible = true, AddHour = 0, TimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultTime = (TimeValue === '' || TimeValue === undefined) ?\n    `${new Date().getHours() < 10 ?\n      '0' + new Date().getHours()\n      :\n      new Date().getHours()}:${new Date().getMinutes() < 10 ?\n        '0' + new Date().getMinutes()\n        :\n        new Date().getMinutes()}`\n    :\n    TimeValue\n  // console.log(`TimeValue: ${TimeValue} , defaultTime: ${defaultTime}`)\n\n  const [timeValue, setTimeValue] = useState(!IsBlank ? defaultTime : '')\n\n  function onTimeChangeHandler(pTime) {\n    console.log(`--->: onTimeChangeHandler -> pTime`, pTime)\n    setTimeValue(pTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pTime !== '') newJson.TimeValue = pTime\n    else delete newJson.TimeValue\n    newJson.IsBlank = (pTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <TimeInput format={FormatDateTime} timeValue={timeValue} modifiers={{ AddHour }} onTimeChange={(value) => onTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Time\n","import React, { useState } from 'react'\n\nimport { format } from 'date-fns'\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateTimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function DateTimeInput(props) {\n\n  const dateFormatConverted = props.format.replace(/ddd/g, 'eee').replace('tt', 'a')\n  // console.log(`--->: DateTimeInput -> dateFormatConverted`, dateFormatConverted)\n\n  const dateTimeValue = props.dateTimeValue\n  // console.log(`--->: DateTimeInput -> dateTimeValue: `, dateTimeValue)\n\n  let dateValue = (dateTimeValue !== '') ? `${format(new Date(dateTimeValue), 'yyyy-MM-dd')}` : format(new Date(), 'yyyy-MM-dd')\n  let timeValue = (dateTimeValue !== '') ? `${new Date(dateTimeValue).toLocaleTimeString()}` : new Date().toLocaleTimeString()\n\n  function onDateChangeHandler(pEvent) {\n    // console.log('onDateChangeHandler pEvent.target.value: ', pEvent.target.value, timeValue)\n    dateValue = pEvent.target.value\n    props.onDateTimeChange(pEvent.target.value + ' ' + timeValue)\n  }\n  function onTimeChangeHandler(pEvent) {\n    // console.log('onTimeChangeHandler pEvent.target.value', dateValue, pEvent.target.value)\n    timeValue = pEvent.target.value\n    props.onDateTimeChange(dateValue + ' ' + pEvent.target.value)\n  }\n\n  function onClearHandler() {\n    dateValue = ''\n    timeValue = ''\n    props.onDateTimeChange('')\n  }\n\n  const dateTimeStringValue = (dateTimeValue !== '') ? format(new Date(dateTimeValue), dateFormatConverted) : ''\n\n  return (\n    <div className={styles.dateTimeContainer}>\n      <div>\n        <input type=\"date\" className={styles.datePicker} name=\"\" id=\"\" onChange={onDateChangeHandler} />\n        <input type=\"time\" className={styles.timePicker} name=\"\" id=\"\" onChange={onTimeChangeHandler} />\n      </div>\n      {dateTimeStringValue}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport DateTimeInput from '../../components/DateTimeInput'\n\nimport { getCurrentDate, getDateObjFromDateString } from '../../app/utilities'\n\nfunction DateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd hh:mm tt', IsBlank = false, IsVisible = true, DateTimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultDateTime = (DateTimeValue === '' || DateTimeValue === undefined) ?\n    `${getCurrentDate().toDateString() + ' ' + getCurrentDate().toLocaleTimeString()}`\n    :\n    DateTimeValue\n\n  const [dateTimeValue, setDateTimeValue] = useState(!IsBlank ? defaultDateTime : '')\n  // const dateTimeValue = (typeof DateTimeValue === 'string' && DateTimeValue !== '') ? getDateObjFromDateString(DateTimeValue) : DateTimeValue\n  // console.log(`--->: DateTime -> dateTimeValue: `, dateTimeValue)\n\n\n  function onDateTimeChangeHandler(pDateTime) {\n    // console.log('---> onDateTimeChangeHandler: ', pDateTime)\n\n    setDateTimeValue(pDateTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDateTime !== '') newJson.DateTimeValue = pDateTime\n    else delete newJson.DateTimeValue\n    newJson.IsBlank = (pDateTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateTimeInput format={FormatDateTime} dateTimeValue={dateTimeValue} onDateTimeChange={(value) => onDateTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default DateTime\n","import React from 'react'\n\nfunction TimeLabel() {\n  return (\n    <div>\n      TimeLabel\n    </div>\n  )\n}\n\nexport default TimeLabel\n","import React from 'react'\n\nfunction DateLabel() {\n  return (\n    <div>\n      DateLabel\n    </div>\n  )\n}\n\nexport default DateLabel\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonAddSignature(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddSignature\n","import React from 'react'\n\nfunction RegisterSignatures() {\n  return (\n    <div>\n      RegisterSignatures\n    </div>\n  )\n}\n\nexport default RegisterSignatures\n","import React from 'react'\n\nfunction SearchableListEntryDialogSMS() {\n  return (\n    <div>\n      SearchableListEntryDialogSMS\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogSMS\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonAddSMS(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddSMS","import React from 'react'\n\nfunction SearchableSMSListView() {\n  return (\n    <div>\n      SearchableSMSListView\n    </div>\n  )\n}\n\nexport default SearchableSMSListView\n","import React from 'react'\n\nfunction SearchableListEntryDialogEmail() {\n  return (\n    <div>\n      SearchableListEntryDialogEmail\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogEmail\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonAddEmail(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddEmail\n","import React from 'react'\n\nfunction SearchableEmailListView() {\n  return (\n    <div>\n      SearchableEmailListView\n    </div>\n  )\n}\n\nexport default SearchableEmailListView\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nexport default function MatrixButton(props) {\n  const json = props.controlJson\n  // console.log(`-> json`, json)\n\n  const { Id, Title, Type, IsVisible = true, Selection, XAxisName, YAxisName, Legend, Columns, Rows, Elements } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const showLegend = Legend.ShowLegend\n\n  const [selectedButton, setSelectedButton] = useState([])\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  function buttonClickHandler(pButtonId) {\n    const buttonPath = pButtonId.split('-')\n    // console.log('---> ', buttonPath)\n    // console.log('---> Selection is: ', Selection)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n\n    if (Selection === 'single') {\n      for (let i = 0; i < newJson.Elements.length; i++) {\n        for (let j = 0; j < newJson.Elements[i].Elements.length; j++) {\n          if (newJson.Elements[i].Elements[j].Value) newJson.Elements[i].Elements[j].Value = false\n        }\n      }\n    }\n    const buttonValue = Elements[buttonPath[0]].Elements[buttonPath[1]].Value !== undefined ? Elements[buttonPath[0]].Elements[buttonPath[1]].Value : false\n\n    newJson.Elements[buttonPath[0]].Elements[buttonPath[1]].Value = !buttonValue\n    props.updateJson(newJson)\n  }\n\n  let matrixLayout = []\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j]\n      const id = `${i}-${j}`\n      const title = `${Legend.LegendValuesY.Name}: ${Legend.LegendValuesY.Values[i]}\\n${Legend.LegendValuesX.Name}: ${Legend.LegendValuesX.Values[j]}`\n\n      matrixLayout.push(<div key={id} id={id} title={title} className=\"matrix-box matrix-button\" style={{ backgroundColor: element.Value ? element.BackgroundColorSelected : element.BackgroundColor }} onClick={() => buttonClickHandler(id)}>{element.Title}</div>)\n\n    }\n\n  }\n\n\n  const legendValuesX = Legend.LegendValuesX.Values.map((item, index) => <li key={index}>{item}</li>)\n  const legendValuesY = Legend.LegendValuesY.Values.map((item, index) => <li key={index}>{item}</li>)\n\n  const legend = showLegend ?\n    <div className=\"matrix-legend\">\n      <div>\n        <h5>{Legend.LegendValuesY.Name}:</h5>\n        {legendValuesY}\n      </div>\n      <div>\n        <h5>{Legend.LegendValuesX.Name}:</h5>\n        {legendValuesX}\n      </div>\n    </div>\n    :\n    ''\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"matrix-container\">\n              <h4 className=\"matrix-yaxis\">{YAxisName}</h4>\n              <div style={{ display: 'grid', gridTemplateColumns: `repeat(${Columns}, 1fr)`, gridTemplateRows: `repeat(${Rows}, 1fr)` }}>\n                {matrixLayout}\n              </div>\n              <h4 className=\"matrix-xaxis\">{XAxisName}</h4>\n            </div>\n            <div className=\"matrix-footer\">\n              {legend}\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}","import React from 'react'\n\nfunction DocumentSummaryGrid() {\n  return (\n    <div>\n      DocumentSummaryGrid\n    </div>\n  )\n}\n\nexport default DocumentSummaryGrid\n","import React from 'react'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setDocumentStatus } from '../../features/json/jsonSlice'\n\n\nfunction ButtonSubmitRegister(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\\\n\n  const dispatch = useDispatch()\n  const debugMode = useSelector(selectDebugMode)\n\n  function onSubmitToRegisterHandler(pEvent) {\n    // console.log('onSubmitToRegisterHandler: ', pEvent )\n    dispatch(setDocumentStatus('tosend'))\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\" onClick={onSubmitToRegisterHandler}>\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonSubmitRegister\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonCloseout(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonCloseout\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonViewDocument(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonViewDocument\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus\n} from './jsonSlice'\n\nimport {\n  selectOptionedControls,\n  selectDebugMode,\n  selectErrorMsg,\n} from '../display/displaySlice'\n\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\n// import { useSpring, animated, config } from 'react-spring'\n// import { Keyframes, delay } from 'react-spring/renderprops'\n\nimport styles from './JsonReader.module.scss'\n\nexport default function JsonReader() {\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n  const json = useSelector(selectJson)\n  const debugMode = useSelector(selectDebugMode)\n  const errorMsg = useSelector(selectErrorMsg)\n  const optionedControls = useSelector(selectOptionedControls)\n  const documentStatus = useSelector(selectDocumentStatus)\n  const dispatch = useDispatch()\n\n  const activeSectionId = useSelector(state => state.tabulation.value)\n  const currentJsonToEdit = (json.Sections !== undefined) ? json.Sections[activeSectionId] : {}\n\n  const { Title, Elements } = currentJsonToEdit\n\n  const [controls, setControls] = useState([])\n\n  useEffect(() => {\n    // console.log(`--->: JsonReader -> Section Updated: `, Elements)\n\n    if (Elements !== undefined) {\n      const controlsFromElements = Elements.map((element, index) => {\n        const componentName = getControlName(element.Type)\n        // console.log(`--->componentName: `, componentName)\n        let controlComponent\n        if (components[componentName] !== undefined) {\n          const Component = components[componentName]\n          controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n        }\n        return controlComponent\n      })\n      setControls(controlsFromElements)\n    }\n    else setControls('')\n  }, [Elements])\n\n  // Optioned Controls ------------------------------- //\n  useEffect(() => {\n    // console.log('displayedControls updated... ', optionedControls)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n\n    if (optionedControls.hiddenControls !== undefined) optionedControls.hiddenControls.forEach(controlId => {\n      const controlPath = getControlPathById(controlId)\n      // console.log(`--->: setHidden -> controlPath`, controlPath)\n      // console.log('---> hide: ', controlId)\n\n      if (controlPath.hasOwnProperty('subsubindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = false\n      }\n      else if (controlPath.hasOwnProperty('subindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = false\n      }\n      else {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n      }\n\n      // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n\n      // if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n      //   jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n      // }\n    })\n\n    if (optionedControls.visibleControls !== undefined) optionedControls.visibleControls.forEach(controlId => {\n      const controlPath = getControlPathById(controlId)\n      // console.log(`--->: setVisible -> controlPath`, controlPath)\n      // console.log('---> show: ', controlId)\n\n      if (controlPath.hasOwnProperty('subsubindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = true\n      }\n      else if (controlPath.hasOwnProperty('subindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = true\n      }\n      else {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = true\n      }\n    })\n\n    // if (json.Sections !== undefined) {\n    //   json.Sections[activeSectionId].Elements.forEach(control => {\n    //     // console.log(`--->: JsonReader -> control`, control.Id)\n    //     const controlPath = getControlPathById(control.Id)\n    //     // console.log(`--->: JsonReader -> controlPath`, controlPath)\n    //     if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n    //       jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n    //       console.log('---> reset control visibility ', control.Id, control.isVisible)\n    //     }\n    //   })\n    // }\n\n    dispatch(setJson(jsonToUpdate))\n  }, [optionedControls])\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  // function getControlName(pControlType) {\n  //   return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n  // }\n\n  function getControlPathById(pControlId) {\n    // console.log(`--->: getControlPathById -> pControlId`, pControlId)\n    const currentSection = json.Sections[activeSectionId]\n    let foundItem = {}\n    let itemPath = {}\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.Id === pControlId) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                itemPath = { section: activeSectionId, index, subindex, subsubindex }\n                foundItem = subsubitem\n              }\n            })\n          }\n\n          if (subitem.Id === pControlId) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            itemPath = { section: activeSectionId, index, subindex }\n            foundItem = subitem\n          }\n        })\n      }\n\n      if (item.Id === pControlId) {\n        // console.log('---> Trouvé item: ', item)\n        itemPath = { section: activeSectionId, index }\n        foundItem = json.Sections[activeSectionId].Elements[index]\n      }\n    })\n    // console.log('-- itemPath -> ', itemPath)\n    // return foundItem\n    return itemPath\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log('updating... ', documentStatus)\n    if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n\n    const controlPath = getControlPathById(pJson.Id)\n    // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // ONLY FIST SUBLEVEL\n    jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    dispatch(setJson(jsonToUpdate))\n  }\n\n\n  // RETURN ----------------------------------------------------------------------------------------------------------------/\n\n  const skeleton = documentStatus === 'loading' ?\n    <div className=\"skeleton\">\n      {Array(12).fill('').map((item, index) => <div key={index} className={`${index % 2 === 1 ? 'skeleton-bloc-offset' : ''} skeleton-bloc`}></div>)}\n    </div>\n    :\n    ''\n\n  return (\n    <div className=\"board\">\n\n      <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div>\n\n      {skeleton}\n\n      {controls}\n\n      <textarea\n        name=\"jsonviewer\"\n        id=\"jsonviewer\"\n        className={debugMode ? `${styles.fixed}` : 'hidden'}\n        // className={styles.fixed}\n        rows=\"16\"\n        value={JSON.stringify(Elements)}\n        onChange={e => dispatch(setJson(JSON.parse(e.target.value)))}>\n      </textarea>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  selectedTabulation,\n  callSection,\n  prevSection,\n  nextSection,\n} from '../features/tabulation/tabulationSlice'\nimport { selectJson } from '../features/json/jsonSlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepBackward, faStepForward, faFastBackward, faFastForward } from '@fortawesome/free-solid-svg-icons'\nimport styles from './Tabulation.module.scss'\n\nfunction Tabulation() {\n\n  const dispatch = useDispatch()\n\n  const tabIndex = useSelector(selectedTabulation)\n  const json = useSelector(selectJson)\n\n  // const tabs = (json.Sections) ? json.Sections.map((item, index) => <div key={index}>{item.Title}</div>) : ''\n  const tabLength = (json.Sections) ? json.Sections.length : 0\n  const tabTitle = (json.Sections) ? json.Sections[tabIndex].Title : ''\n\n  // React.useEffect(() => {\n  //   console.log('TabulationUpdated! : ',json);\n  // })\n\n  function onFirstSectionHandler(e) {\n    dispatch(callSection(0))\n  }\n  function onPrevSectionHandler(e) {\n    if (tabIndex > 0) dispatch(prevSection())\n  }\n  function onNextSectionHandler(e) {\n    if (tabIndex < tabLength - 1) dispatch(nextSection())\n  }\n  function onLastSectionHandler(e) {\n    dispatch(callSection(tabLength - 1))\n  }\n\n  return (\n    <nav className={styles.row}>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onFirstSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastBackward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onPrevSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepBackward} />\n      </button>\n      <div className={styles.title}>\n        <h2>{tabTitle}</h2>\n      </div>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onNextSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepForward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onLastSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastForward} />\n      </button>\n    </nav>\n  )\n}\n\nexport default Tabulation\n","import React, { useState } from 'react'\nimport styles from './Login.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faUser } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Login(props) {\n\n  const { visibility, toggleVisibility, css, backdrop, errormsg } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springloginProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [member, setMember] = useState('')\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.loginBackdrop} ${visibility ? '' : styles.loginBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springloginProps}>\n          <div\n            className={styles.loginContainer}\n            style={css}>\n            <div className={styles.loginClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.loginHeader}>\n              <FontAwesomeIcon icon={faUser} />\n            </div>\n            <div className={styles.loginContent}>\n              <form>\n                <label htmlFor=\"username\">username</label>\n                <input type=\"text\" name=\"username\" id=\"username\" onChange={e => setUsername(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"password\">password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"member\">member</label>\n                <input type=\"text\" name=\"member\" id=\"member\" onChange={e => setMember(e.target.value)} onFocus={() => props.clearError()} />\n              </form>\n            </div>\n            <div className={styles.loginFooter}>\n              <button className=\"btn btn-primary\" onClick={e => props.onSubmit(username, password, member)}>SUBMIT</button>\n              {errormsg}\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './SelectSearchable.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction useVisible(initialIsVisible) {\n  const [isVisible, setIsVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  }, [])\n  return { ref, isVisible, setIsVisible }\n}\n\n\nexport default function SelectSearchable(props) {\n\n  const [keyword, setKeyword] = useState('')\n  const input = useRef(null)\n\n  const items = props.items\n  const allowMultiple = props.allowMultiple\n  const width = props.width\n\n\n  const filteredList = keyword.length > 0 ? items.filter(item => String(item.label).toLowerCase().includes(keyword.toLowerCase())) : items\n\n  const { ref, isVisible, setIsVisible } = useVisible(false, input)\n\n  function onClickItemHandler(pEvent, pItem) {\n    pEvent.stopPropagation()\n    // console.log(`--->: onClickItemHandler -> pEvent.target.className: `, pEvent.currentTarget.className)\n    // console.log('---> delete here: ', pEvent.currentTarget.className.includes('delete'))\n\n    if (pEvent.currentTarget.className.includes('delete')) {\n      props.onSelectItem([])\n      return\n    }\n\n    if (allowMultiple) {\n      const clickedItemIndex = props.selectedItems.findIndex(item => item === pItem)\n\n      if (clickedItemIndex > -1) {\n        props.onSelectItem(props.selectedItems.filter(item => item !== pItem))\n      }\n      else props.onSelectItem([...props.selectedItems, pItem])\n    }\n    else {\n      props.onSelectItem([pItem])\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    if (input.current) input.current.focus()\n  }, [isVisible])\n\n  const cssWidth = width === \"s\" ? styles.ListSmall : width === \"m\" ? styles.ListMedium : styles.ListLarge\n\n  return (\n    <div className={styles.selectSearchable_Container}>\n      <div className={styles.selectSearchable_Header} onClick={e => setIsVisible(!isVisible)}>\n        <div className={styles.selectSearchable_SelectedContainer}>\n          {props.selectedItems.map((item, index) => <div key={index} className={styles.selectSearchable_SelectedItem}>\n            {item.label}\n            <span className={styles.selectedItem_delete} onClick={(e) => onClickItemHandler(e, item)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>)}\n        </div>\n        <div className={styles.selectSearchable_Trigger}>\n          <FontAwesomeIcon icon={isVisible ? faAngleDown : faAngleUp} />\n        </div>\n      </div>\n      {isVisible && <div style={{ position: 'absolute' }} className={`${styles.selectSearchable_List} ${cssWidth}`} ref={ref}>\n        <div className={styles.selectSearchable_SearchContainer}>\n          <input type=\"text\" value={keyword} onChange={e => setKeyword(e.target.value)} ref={input}></input>\n          <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n        </div>\n        <div className={styles.selectSearchable_ItemsContainer}>\n          {filteredList.map((item, index) => <span key={index} className={`${styles.selectItem} ${props.selectedItems.findIndex(selectedItem => item.label === selectedItem.label) > -1 ? styles.selectSearchable_SelectedItem_Selected : ''}`} onClick={(e) => onClickItemHandler(e, item)}>{item.label}</span>)}\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setErrorMsg,\n  clearErrorMsg\n} from '../features/display/displaySlice'\n\n\nimport Login from './Login'\nimport SelectSearchable from './SelectSearchable'\n\nimport { normalizeJson, getElementFromElementId, getDocumentExport } from '../app/utilities'\n\nfunction ApiInterface() {\n\n  // const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  const apiURL = 'https://api-uat.extrack.com/'\n\n  const [token, setToken] = useState({})\n  const [user, setUser] = useState({})\n\n  const [projects, setProjects] = useState([])\n  const [templates, setTemplates] = useState([])\n  const [documents, setDocuments] = useState([])\n\n  const [selectedProject, setSelectedProject] = useState([])\n  const [selectedProjectId, setSelectedProjectId] = useState('')\n\n  const [selectedTemplate, setSelectedTemplate] = useState([])\n  const [selectedTemplateRef, setSelectedTemplateRef] = useState([])\n\n  const [selectedDocumentRef, setSelectedDocumentRef] = useState([])\n\n  const [isFetchingTemplates, setIsFetchingTemplates] = useState(false)\n  const [isFetchingDocuments, setIsFetchingDocuments] = useState()\n\n  // const [errorMsg, setErrorMsg] = useState('')\n\n  const [isPopinLoginVisible, setIsPopinLoginVisible] = useState(false)\n  const [loginErrorMsg, setLoginErrorMsg] = useState('')\n\n\n\n  // PROJECT ---------------------------------------------------------------------//\n  useEffect(() => {\n    const projectId = selectedProject.length > 0 ? selectedProject[0].id : ''\n    // console.log('---> new selected Project: ', projectId)\n    if (projectId > 0) {\n      setSelectedProjectId(projectId)\n      getTemplates(projectId)\n      getDocuments(projectId)\n    }\n  }, [selectedProject])\n\n  // TEMPLATE ---------------------------------------------------------------------//\n  useEffect(() => {\n    // console.log('---> template selected: ', selectedTemplateRef)\n    if (selectedTemplateRef.length > 0) {\n      getTemplateById(selectedTemplateRef[0].Id)\n        .then(template => {\n          console.log(`--->: useEffect -> template: `, template)\n          setSelectedTemplate(template)\n          dispatch(setDocumentStatus('loaded'))\n        })\n    }\n  }, [selectedTemplateRef])\n\n  // OLD LOCAL STORAGE FOR REVERT\n  // useEffect(() => {\n  //   console.log('---> template set: ', selectedTemplate)\n  //   if (selectedTemplate.Config !== undefined) {\n  //     const configJson = selectedTemplate.Config\n  //     localStorage.setItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n  //     dispatch(setJson(normalizeJson(JSON.parse(configJson))))\n  //   }\n  // }, [selectedTemplate])\n\n  // DOCUMENT ---------------------------------------------------------------------//\n  useEffect(() => {\n    // console.log('---> selectedDocumentRef changed: ', selectedDocumentRef)\n    if (selectedDocumentRef.length > 0) {\n      dispatch(setDocumentStatus('loading'))\n\n      let document\n      getDocumentById(selectedDocumentRef[0].Id)\n        .then(value => document = value)\n\n        .then(value =>\n          getTemplateById(value.DocumentFormTemplateId)\n            .then(template => {\n              // console.log(`--->: useEffect -> template: `, template)\n              aggregateJson(template, JSON.parse(document.MetaData)[0])\n              dispatch(setDocumentStatus('loaded'))\n            })\n        )\n    }\n  }, [selectedDocumentRef])\n\n  // SENDING DOCUMENT\n  useEffect(() => {\n    if (documentStatus === 'tosend') {\n      // console.log(`---> Sending document: ${JSON.stringify(getDocumentExport())} for project: ${selectedProjectId} and template: ${selectedTemplateId}`)\n\n      let metadata = JSON.stringify([getDocumentExport()])\n      console.log(`----> metadata`, metadata)\n\n\n      const headers = new Headers()\n      // headers.append(\"Content-Type\", \"application/json\")\n      headers.append(\"Authorization\", `Bearer ${token.access_token}`)\n\n      // JSON.stringify triple metadata backslashes\n      const documentBody = JSON.stringify({\n        \"ID\": 0,\n        \"ProjectID\": selectedProjectId,\n        \"Description\": \"\",\n        \"Title\": \"Test-NewDoc\",\n        \"DocumentTypeId\": 1088,\n        \"DocumentFormTemplateID\": selectedDocumentRef.Id,\n        \"UserRevisionNumber\": \"0\",\n        \"UserRevisionDate\": \"2020-09-25\",\n        \"MetaData\": metadata,\n        \"OpenClosedStatus\": \"O\",\n        \"CreatedByContactID\": 1059,\n        \"CreatedByCompanyID\": 1009\n      })\n\n      const documentBodyString = JSON.stringify(documentBody)\n\n      let formdata = new FormData()\n      formdata.append(\"Document\", documentBody)\n\n      console.log(`--->: sendind with body ------>  :   `, documentBodyString)\n\n      const requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: formdata\n        // body: JSON.stringify(requestBody)\n        // body: JSON.stringify({\n        //   \"ID\": 0,\n        //   \"ProjectID\": 1249,\n        //   \"Description\": \"\",\n        //   \"Title\": \"Test-NewDoc\",\n        //   \"DocumentTypeId\": 1088,\n        //   \"DocumentFormTemplateID\": 25,\n        //   \"UserRevisionNumber\": \"0\",\n        //   \"UserRevisionDate\": \"2020-09-10\",\n        //   \"MetaData\": \"[{\\\"Elements\\\":[{\\\"Type\\\":\\\"Trilean\\\",\\\"Value\\\":\\\"N\\\",\\\"Id\\\":\\\"S032\\\",\\\"CommentValue\\\":\\\"TrileanCommentvaluefromdocument\\\"}]}]\",\n        //   \"OpenClosedStatus\": \"O\",\n        //   \"CreatedByContactID\": 1059,\n        //   \"CreatedByCompanyID\": 1009\n        // })\n      }\n\n      fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/Template/${selectedTemplateRef.Id}/Create`, requestOptions)\n        .then(res => res.text())\n        .then(result => console.log('response: ', result))\n        .catch(error => console.log('error', error))\n\n\n    }\n    // dispatch(setDocumentStatus('sent'))\n  }, [documentStatus])\n\n\n  const getTokenHandler = (username, password, member) => {\n\n    const headers = new Headers()\n    headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n\n    let urlencoded = new URLSearchParams()\n    urlencoded.append(\"username\", username)\n    urlencoded.append(\"password\", password)\n    urlencoded.append(\"MemberCode\", member)\n    urlencoded.append(\"grant_type\", \"password\")\n    urlencoded.append(\"timezone\", \"Australia/Sydney\")\n\n    fetch(`${apiURL}oAuth/Token`, {\n      method: 'POST',\n      headers: headers,\n      body: urlencoded\n    })\n      .then(res => res.text())\n      .then(result => {\n        const resultJSON = JSON.parse(result)\n        // console.log('result: ', resultJSON)\n        if (resultJSON.error) {\n          setLoginErrorMsg(resultJSON.error_description)\n        }\n        else {\n          getUser(resultJSON.access_token)\n          getProjects(resultJSON.access_token)\n          setToken(resultJSON)\n          localStorage.setItem('dynFormToken', JSON.stringify(resultJSON))\n          setIsPopinLoginVisible(false)\n        }\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  const getUser = (pToken) => {\n    const userHeaders = new Headers()\n    userHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n\n    const requestOptions = {\n      method: 'GET',\n      headers: userHeaders\n    }\n\n    fetch(`${apiURL}V1.0/User`, requestOptions)\n      .then(response => response.text())\n      .then(result => setUser(JSON.parse(result)))\n      .catch(error => console.log('error', error))\n  }\n\n  function aggregateJson(pTemplate, pDocument) {\n    // console.log(pTemplate.replace(/\\s+/g, ''))\n    // console.log(JSON.parse(pTemplate.Config))\n\n    console.log(`\n\n================\n\n    `)\n\n\n    // BUG on normalizing Matrix\n    // const templateToUpdate = normalizeJson(JSON.parse(pTemplate))\n    // const templateToUpdate = JSON.parse(pTemplate.replace(/\\s+/g, ''))\n    const templateToUpdate = JSON.parse(pTemplate.Config)\n\n    console.log('Document\\'s Elements:', pDocument.Elements)\n    // console.log('Template to update:', templateToUpdate)\n    // console.log(templateToUpdate)\n\n    pDocument.Elements.forEach(item => {\n      // console.log(`-------------> Document's MetaData element: `, item.Id)\n      // const itemPath = getElementFromElementId(templateToUpdate, item.Id)\n\n      let itemPath = getElementFromElementId(JSON.parse(pTemplate.Config), item.Id)\n      let firstFoundedPath = itemPath[0]\n\n      if (item.Type === 'Matrix') {\n        item.Elements.forEach((subitem, index) => {\n          itemPath = getElementFromElementId(JSON.parse(pTemplate.Config), subitem.Id)\n          if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n          if (itemPath.length === 0) return\n\n          firstFoundedPath = itemPath[0]\n\n          const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]].Elements[firstFoundedPath[2]].Elements[firstFoundedPath[3]]\n          templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]].Elements[firstFoundedPath[2]].Elements[firstFoundedPath[3]] = { ...templateValues, ...subitem }\n\n          console.log(`subItem path received: `, itemPath)\n        })\n      }\n\n      if (item.Type === 'Repeatable') {\n        item.RepeaterValue.forEach((subitem, index) => {\n          // subitem is an array\n          itemPath = getElementFromElementId(JSON.parse(pTemplate.Config), subitem.Id)\n          if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n          if (itemPath.length === 0) return\n\n          console.log(`subItem path received: `, itemPath)\n        })\n      }\n\n\n\n      if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n      if (itemPath.length === 0) return\n\n      // if (item.Type === 'Matrix') console.log('item value: ', item, ' --> path:  ', { sectionIndex: firstFoundedPath[0], pos: firstFoundedPath[1] })\n\n      switch (itemPath[0].length) {\n        case 2:\n          const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n          templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]] = { ...templateValues, ...item }\n          // console.log('---> valuesToInsert', templateValues)\n          break\n        case 3:\n          console.log('---> two levels')\n          break\n        case 4:\n          console.log('---> three levels')\n          break\n        default:\n          break\n      }\n    })\n    // console.log('Json created from Template with Document\\'s data: ', templateToUpdate)\n    dispatch(setJson(templateToUpdate))\n  }\n\n  function insertValuesIntoControl(pControl, pValue) {\n\n  }\n\n  /**-------------------------------------------------**\n  * @desc - PROJECTS                             -----*\n  *----------------------------------------------------*/\n  function getProjects(pToken) {\n    const projectsHeaders = new Headers()\n    projectsHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n    projectsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: projectsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project?selectorFields=(Id,Abbr)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('projects: ', JSON.parse(result))\n        setProjects(JSON.parse(result))\n      })\n      .catch(error => console.log('error', error))\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - TEMPLATES                             -----*\n  *----------------------------------------------------*/\n  function getTemplates(pProjectID) {\n    // console.log(`--->: getTemplates -> pProjectID: `, pProjectID)\n    setIsFetchingTemplates(true)\n\n    const templatesHeaders = new Headers()\n    templatesHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templatesHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templatesHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Document/Form/Templates?selectorFields=(Id,Title1)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('templates: ', JSON.parse(result))\n        setTemplates(JSON.parse(result))\n        setIsFetchingTemplates(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  async function getTemplateById(pTemplateId) {\n    // console.log('---> getTemplateById: ', pTemplateId)\n    let template\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProject[0].id}/Document/Form/Template/${pTemplateId}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        // console.log('result: ', result)\n        // template = JSON.parse(result)\n        template = result\n        // console.log('template: ', template.Config)\n      })\n      .catch(error => console.log('error', error))\n    // setSelectedTemplate(template)\n    return template\n\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - DOCUMENTS                             -----*\n  *----------------------------------------------------*/\n  function getDocuments(pProjectID) {\n    setIsFetchingDocuments(true)\n\n    const documentsHeaders = new Headers()\n    documentsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    documentsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: documentsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Documents?selectorFields=Id,Title,DocumentNumber,DocumentFormTemplateId&orderBy=Id desc`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(' ====> doucments: ', JSON.parse(result))\n        setDocuments(JSON.parse(result))\n        setIsFetchingDocuments(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  async function getDocumentById(pDocumentId) {\n    // console.log('---> getDocumentById: ', pDocumentId)\n    let document = {}\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/${pDocumentId}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('---> result fron fetch: ', result, JSON.parse(result), JSON.parse(result).Document)\n\n        document = JSON.parse(result).Document\n        // console.log('--> document from fetch: ', document)\n      })\n      .catch(error => console.log('error', error))\n    return document\n  }\n\n\n  // RETURN ----------------------------------------------------------------------------------------------------------------/\n\n  const templateLabel = isFetchingTemplates ? <div className=\"spinner\">Fetching Templates...</div> : selectedProject.length > 0 ? 'Select a template' : ''\n  const documentLabel = isFetchingDocuments ? <div className=\"spinner\">Fetching Documents...</div> : selectedProject.length > 0 ? 'Select a document' : ''\n\n  return (\n    <div className=\"bloc\">\n\n      <button className={`btn btn-ternary ${user.NameFirst ? 'hidden' : ''}`} onClick={() => setIsPopinLoginVisible(true)}>LOGIN</button>\n\n      <div className={`bloc-menu ${projects.length > 0 ? '' : 'hidden'}`}>\n        <h2 className=\"dropdown-label\">\n          Select a project\n        </h2>\n        <SelectSearchable allowMultiple={false} width=\"s\" items={projects.map(item => ({ label: item.Abbr, id: item.Id }))} selectedItems={selectedProject} onSelectItem={(item) => setSelectedProject(item)} />\n      </div>\n\n\n      <div className={`bloc-menu ${selectedProject.length === 0 ? '' : 'bloc-menu__separator'}`}>\n        <h2 className=\"dropdown-label\">{templateLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <SelectSearchable allowMultiple={false} width=\"m\" items={templates.map(item => ({ label: item.Title1, Id: item.Id }))} selectedItems={selectedTemplateRef} onSelectItem={(item) => setSelectedTemplateRef(item)} />\n        </div>\n      </div>\n\n      <div className='bloc-spacer'>\n        <span className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          OR\n        </span>\n      </div>\n\n\n      <div className=\"bloc-menu\">\n        <h2 className=\"dropdown-label\">{documentLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <SelectSearchable allowMultiple={false} width=\"m\" items={documents.map(item => ({ label: item.Title, Id: item.Id }))} selectedItems={selectedDocumentRef} onSelectItem={(item) => setSelectedDocumentRef(item)} />\n        </div>\n      </div>\n\n      {/* <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div> */}\n\n      <Login\n        visibility={isPopinLoginVisible}\n        toggleVisibility={() => setIsPopinLoginVisible(!isPopinLoginVisible)}\n        css={{ backgroundColor: '#007db4' }}\n        backdrop={'rgba(0,0,0,0.3)'}\n        onSubmit={getTokenHandler}\n        errormsg={loginErrorMsg}\n        clearError={() => setLoginErrorMsg('')\n        }\n      />\n\n    </div>\n  )\n}\n\nexport default ApiInterface","import React from 'react'\r\n\r\n\r\nimport JsonOptions from './components/JsonOptions'\r\nimport JsonReader from './features/json/JsonReader'\r\nimport Tabulation from './components/Tabulation'\r\nimport ApiInterface from './components/ApiInterface'\r\n\r\n\r\nimport './App.scss'\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <h1 title=\"v20.11.10\">\r\n          DYNAMIC FORM\r\n        </h1>\r\n        <ApiInterface />\r\n      </header>\r\n      <div className=\"options-container\">\r\n        <JsonOptions />\r\n      </div>\r\n      <Tabulation />\r\n      <main>\r\n        <JsonReader />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport jsonReducer from '../features/json/jsonSlice';\r\nimport tabulationReducer from '../features/tabulation/tabulationSlice';\r\nimport displayReducer from '../features/display/displaySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    json: jsonReducer,\r\n    tabulation: tabulationReducer,\r\n    display: displayReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\n\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}