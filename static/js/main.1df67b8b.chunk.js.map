{"version":3,"sources":["components/SelectSearchable.module.scss","components/Modal.module.scss","components/DateTimeInput.module.scss","components/DateInput.module.scss","components/TimeInput.module.scss","components/Figure.module.scss","components/Pagination.module.scss","components/Board.module.css","features/config/configSlice.js","features/json/jsonSlice.js","components/FormSelector.js","app/utilities.js","components/controls/DocumentTableOfContents.js","components/controls/ListMulticontrol.js","components/controls/Label.js","components/Modal.js","components/controls/Text.js","components/controls/Repeatable.js","components/controls/ButtonSubmitPurchase.js","components/controls/ButtonAddDocketNumber.js","components/controls/API.js","components/DateInput.js","components/controls/Date.js","components/Figure.js","components/controls/Image.js","components/controls/ImageSingle.js","components/controls/ButtonAddReportDate.js","components/controls/QRScanner.js","components/controls/QRScannerList.js","components/controls/Signature.js","components/controls/SignatureDateTime.js","components/controls/SignatureDate.js","components/controls/Matrix.js","components/controls/Checkbox.js","components/controls/Boolean.js","components/controls/Trilean.js","components/controls/TrileanLabel.js","components/controls/ListSingle.js","components/controls/ListMultiple.js","components/TimeInput.js","components/controls/Time.js","components/DateTimeInput.js","components/controls/DateTime.js","components/controls/TimeLabel.js","components/controls/DateLabel.js","components/controls/ButtonAddSignature.js","components/controls/RegisterSignatures.js","components/SelectSearchable.js","components/controls/SearchableListEntryDialogSMS.js","components/controls/ButtonAddSMS.js","components/controls/SearchableSMSListView.js","components/controls/SearchableListEntryDialogEmail.js","components/controls/ButtonAddEmail.js","components/controls/SearchableEmailListView.js","components/controls/MatrixButton.js","components/controls/DocumentSummaryGrid.js","components/controls/ButtonSubmitRegister.js","components/controls/ButtonCloseout.js","components/controls/ButtonViewDocument.js","components/controls/ButtonSendEmail.js","components/controls/ButtonSendSMS.js","components/Board.js","components/Pagination.js","App.js","app/store.js","index.js"],"names":["module","exports","configSlice","createSlice","name","initialState","debugMode","currentAction","currentTemplate","currentDocument","currentUserName","currentToken","currentSectionIndex","documentStatus","phoneNumber","companyName","reducers","setDebugMode","state","action","payload","setCurrentAction","setCurrentTemplate","setCurrentSectionIndex","callSection","prevSection","nextSection","setDocumentStatus","currentContact","repeaterValue","optionedControls","openListId","actions","setCurrentToken","setCurrentUserName","setCurrentContact","setRepeaterValue","setOpenListId","setCurrentDocument","setOptionedControls","selectDebugMode","config","selectCurrentSectionIndex","selectCurrentTemplate","selectCurrentDocument","selectCurrentUserName","selectCurrentToken","selectCurrentContact","selectCurrentAction","selectDocumentStatus","selectRepeaterValue","selectOpenListId","jsonSlice","value","setJson","selectJson","json","FormSelector","props","projectId","templateId","documentId","token","userName","dispatch","useDispatch","apiURL","pTemplateId","a","templateHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","then","response","result","JSON","parse","Config","newTemplate","catch","error","console","log","useEffect","loadTemplate","className","getControlName","pControlType","split","map","part","toUpperCase","slice","join","getCurrentDate","pDate","Date","now","exportMetaData","addToDocumentExport","pValue","controlIndex","findIndex","item","Id","push","prevValue","table","DocumentTableOfContents","useSelector","sections","Sections","length","element","index","Elements","Type","onClick","Title","icon","faChevronRight","ListMulticontrol","controlJson","Data","IsVisible","options","option","cols","rows","stringify","disabled","htmlFor","id","onChange","pEvent","selectedIndex","Number","target","visibleControls","undefined","OptionedControls","Controls","hiddenControls","forEach","controlId","Label","FontAttributes","FontSize","Margin","HasUnderLine","style","fontSize","fontWeight","fontStyle","borderBottom","padding","Modal","visibility","toggleVisibility","message","css","backdrop","callback","springBackdropProps","useSpring","opacity","from","zIndex","gentle","springModalProps","top","stiff","actionBtns","styles","modalBtn","backdropStyle","backgroundColor","div","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","faTimes","modalHeader","faExclamationTriangle","modalContent","modalFooter","Text","IsEnabled","Value","Format","Warning","WarningMessage","Mandatory","ValidationMessage","AssociatedId","useState","isModalVisible","setIsModalVisible","bgColor","modalOptions","setModalOptions","emailAddressTester","phoneNumberRestrictCodes","onChangeHandler","Names","email","newJson","updateJson","onBlurHandler","focus","Keyboard","test","toLowerCase","textfield","Lines","type","min","Min","max","Max","size","Decimal","maxLength","onKeyDown","includes","keyCode","preventDefault","VarChar","onBlur","warningMarker","mandatoryMarker","Repeatable","components","ButtonSubmitPurchase","ButtonAddDocketNumber","API","Image","ImageSingle","ButtonAddReportDate","QRScanner","QRScannerList","Signature","SignatureDateTime","SignatureDate","Matrix","Checkbox","Boolean","Trilean","TrileanLabel","ListSingle","ListMultiple","Time","DateTime","TimeLabel","DateLabel","ButtonAddSignature","RegisterSignatures","SearchableListEntryDialogSMS","ButtonAddSMS","SearchableSMSListView","SearchableListEntryDialogEmail","ButtonAddEmail","SearchableEmailListView","MatrixButton","DocumentSummaryGrid","ButtonSubmitRegister","ButtonCloseout","ButtonViewDocument","children","repeaterIndex","controls","control","repeaterControl","componentName","Component","pJson","pRepeaterIndex","repeaterControlIndex","newRepeaterValues","updateJsonHandler","e","pIndex","filter","faPlusSquare","Api","IncludePhoneNumber","IncludeEmail","IncludeTitle","IncludeBusinessNumber","IncludeAbbreviation","IncludeCode","targetedApi","String","collapsed","setCollapsed","keyword","setKeyword","list","setList","filteredList","setFilteredList","constructor","selectedValues","setSelectedValues","animatedListProps","height","trailPills","useTrail","marginLeft","marginTop","transform","to","projectID","apiUrl","getEndpoint","apiHeaders","listItemClickHandler","currentItem","updateJSON","text","listItems","emailAddress","title","abn","abbr","code","spacer","Contact","Email","NameFirst","NameLast","Company","Name","CompanyName","Abn","Abbr","Code","itemList","key","isSelected","iconCheck","faCheck","selectedPills","targetText","parentNode","innerText","faAngleDown","faAngleUp","placeholder","DateInput","dateformatConverted","format","replace","dateValue","setDateValue","dateString","addMonths","addDays","toTimeString","modifiers","AddDay","AddMonth","dateContainer","datePicker","defaultValue","onDateChange","btnClear","FormatDateTime","IsBlank","DateValue","defaultDate","toDateString","onDateChangeHandler","Figure","container","src","source","alt","btnClose","onClose","Images","onCloseHandler","images","image","faImage","figure","imageData","fileReader","FileReader","onload","readAsDataURL","files","DateTimeValue","isScanning","setIsScanning","updateValues","pScanValue","pTimestamp","qrReader","delay","onError","pErr","onScan","pData","width","btScan","scanOffIndex","setScanOffIndex","newList","ScanOnDateTime","ScanOffDateTime","scanList","signatureDisplay","useRef","username","signatureText","setSignatureText","selectedFont","setSelectedFont","isSigning","setIsSigning","htmlToImage","current","dataUrl","rawData","fontDropdownOptions","label","editSignature","btnSign","signature","ref","Columns","Rows","matrixLayout","i","j","controlComponent","substring","ElementId","display","gridTemplateColumns","gridTemplateRows","ShowComment","Collapsible","IsCollapsed","EntryTitle","Details","CommentValue","comment","commentText","details","entryTitle","defaultChecked","checkboxValue","checked","booleanValue","HideNa","trileanValue","Buttons","buttons","button","computedBackground","Button","BackgroundColorSelected","BackgroundColor","Fragment","underline","valuesToExport","SelectedValue","mass","tension","friction","newValues","TimeInput","timeformatConverted","timeValue","setTimeValue","pTime","timeString","addHours","AddHour","timeContainer","timePicker","onTimeChange","TimeValue","defaultTime","getHours","getMinutes","onTimeChangeHandler","DateTimeInput","dateFormatConverted","dateTimeValue","toLocaleTimeString","dateTimeStringValue","dateTimeContainer","onDateTimeChange","defaultDateTime","setDateTimeValue","pDateTime","onDateTimeChangeHandler","registerValues","document","getElementById","SignOnDateTime","registerList","reverse","SignOffDateTime","pId","signatureIndex","SelectSearchable","input","items","allowMultiple","initialIsVisible","isVisible","setIsVisible","handleClickOutside","event","contains","addEventListener","removeEventListener","useVisible","onClickItemHandler","pItem","stopPropagation","currentTarget","onSelectItem","selectedItems","cssWidth","ListSmall","ListMedium","ListLarge","selectSearchable_Container","selectSearchable_Header","selectSearchable_SelectedContainer","selectSearchable_SelectedItem","selectedItem_delete","selectSearchable_Trigger","position","selectSearchable_List","selectSearchable_SearchContainer","selectSearchable_ItemsContainer","selectItem","selectedItem","selectSearchable_SelectedItem_Selected","contactList","setContactList","contactDropdownList","setContactDropdownList","setSelectedContact","contactIndex","contact","contactDetails","addContact","Title2","pContactIndex","deleteContact","faTrash","Selection","XAxisName","YAxisName","Legend","showLegend","ShowLegend","buttonClickHandler","pButtonId","buttonPath","buttonValue","LegendValuesY","Values","LegendValuesX","legendValuesX","legendValuesY","legend","DocumentNumber","docId","DocumentType","docTitle","docTitle1","Title1","docTitle2","OpenClosedStatus","UserRevisionNumber","UserRevisionDate","CreatedByContact","CreatedByCompany","documentDetails","ButtonSendEmail","ButtonSendSMS","Board","setControls","sectionsAmount","sectionJSON","controlPath","pControlId","pActiveSectionId","currentSection","itemPath","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","section","getControlPathById","jsonToUpdate","controlsFromElements","boardControls","Array","fill","Pagination","tabIndex","tabLength","tabTitle","row","faFastBackward","faStepBackward","faStepForward","faFastForward","App","isDebugging","url","URL","window","location","href","searchParams","get","configureStore","reducer","jsonReducer","configReducer","ReactDOM","render","StrictMode","store"],"mappings":"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","file":"static/js/main.1df67b8b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectItem\":\"SelectSearchable_selectItem__ytOvQ\",\"selectedItem_delete\":\"SelectSearchable_selectedItem_delete__DzATU\",\"selectSearchable\":\"SelectSearchable_selectSearchable__12vBI\",\"selectSearchable_Container\":\"SelectSearchable_selectSearchable_Container__fToYi\",\"selectSearchable_SearchContainer\":\"SelectSearchable_selectSearchable_SearchContainer__3eaGr\",\"selectSearchable_ItemsContainer\":\"SelectSearchable_selectSearchable_ItemsContainer__34yKg\",\"selectSearchable_Header\":\"SelectSearchable_selectSearchable_Header__20KCq\",\"selectSearchable_SelectedContainer\":\"SelectSearchable_selectSearchable_SelectedContainer__3HBOF\",\"selectSearchable_Trigger\":\"SelectSearchable_selectSearchable_Trigger__2brz3\",\"selectSearchable_SelectedItem\":\"SelectSearchable_selectSearchable_SelectedItem__ya07B\",\"selectSearchable_SelectedItem_Selected\":\"SelectSearchable_selectSearchable_SelectedItem_Selected__3kePe\",\"selectSearchable_List\":\"SelectSearchable_selectSearchable_List__12txV\",\"listCollapsed\":\"SelectSearchable_listCollapsed__2gYJk\",\"ListSmall\":\"SelectSearchable_ListSmall__24zac\",\"ListMedium\":\"SelectSearchable_ListMedium__3_qlO\",\"ListLarge\":\"SelectSearchable_ListLarge__m6apt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"DateTimeInput_timePicker__g55DG\",\"datePicker\":\"DateTimeInput_datePicker__fMbwV\",\"dateTimeContainer\":\"DateTimeInput_dateTimeContainer__3DJHa\",\"btnClear\":\"DateTimeInput_btnClear__1hSf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"DateInput_datePicker__1qUGn\",\"dateContainer\":\"DateInput_dateContainer__3vsHd\",\"btnClear\":\"DateInput_btnClear__hBuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"TimeInput_timePicker__1bwP3\",\"timeContainer\":\"TimeInput_timeContainer__15bEw\",\"btnClear\":\"TimeInput_btnClear__3Cafn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Figure_container__1bF2w\",\"btnClose\":\"Figure_btnClose__3UDU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Pagination_row__3VXMX\",\"title\":\"Pagination_title__1mHK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Board_row__2OMKf\",\"value\":\"Board_value__1Ni9j\",\"button\":\"Board_button__vVPW8\",\"textbox\":\"Board_textbox__2wzm7\",\"asyncButton\":\"Board_asyncButton__30LCp Board_button__vVPW8\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nexport const configSlice = createSlice({\n  name: \"config\",\n  initialState: {\n    debugMode: false,\n    currentAction: \"\",\n    currentTemplate: {},\n    currentDocument: {},\n    currentUserName: \"\",\n    currentToken: \"\",\n    currentSectionIndex: 0,\n    documentStatus: \"loading\",\n    currentAction: \"\",\n    currentContact: { name: \"\", phoneNumber: \"\", companyName: \"\" },\n    repeaterValue: [],\n    optionedControls: {},\n    openListId: 0,\n  },\n  reducers: {\n    setDebugMode: (state, action) => {\n      state.debugMode = action.payload;\n    },\n    setCurrentAction: (state, action) => {\n      state.currentAction = action.payload;\n    },\n    setCurrentTemplate: (state, action) => {\n      state.currentTemplate = action.payload;\n    },\n    setCurrentSectionIndex: (state, action) => {\n      state.currentSectionIndex = action.payload;\n    },\n    callSection: (state, action) => {\n      state.currentSectionIndex = action.payload;\n    },\n    prevSection: (state) => {\n      state.currentSectionIndex -= 1;\n    },\n    nextSection: (state) => {\n      state.currentSectionIndex += 1;\n    },\n    setDocumentStatus: (state, action) => {\n      state.documentStatus = action.payload;\n    },\n    setCurrentAction: (state, action) => {\n      state.currentAction = action.payload;\n    },\n    setCurrentContact: (state, action) => {\n      state.currentContact = action.payload;\n    },\n    setCurrentDocument: (state, action) => {\n      state.currentDocument = action.payload;\n    },\n    setRepeaterValue: (state, action) => {\n      state.repeaterValue = action.payload;\n    },\n    setCurrentUserName: (state, action) => {\n      state.currentUserName = action.payload;\n    },\n    setCurrentToken: (state, action) => {\n      state.currentToken = action.payload;\n    },\n    setOptionedControls: (state, action) => {\n      state.optionedControls = action.payload;\n    },\n    setOpenListId: (state, action) => {\n      state.openListId = action.payload;\n    },\n  },\n});\n\nexport const {\n  setDebugMode,\n  setCurrentToken,\n  setCurrentUserName,\n  setCurrentTemplate,\n  setCurrentSectionIndex,\n  callSection,\n  prevSection,\n  nextSection,\n  setDocumentStatus,\n  setCurrentAction,\n  setCurrentContact,\n  setRepeaterValue,\n  setCurrentDocument,\n  setOptionedControls,\n  setOpenListId,\n} = configSlice.actions;\n\nexport const selectDebugMode = (state) => state.config.debugMode;\nexport const selectCurrentSectionIndex = (state) =>\n  state.config.currentSectionIndex;\nexport const selectCurrentTemplate = (state) => state.config.currentTemplate;\nexport const selectCurrentDocument = (state) => state.config.currentDocument;\nexport const selectCurrentUserName = (state) => state.config.currentUserName;\nexport const selectCurrentToken = (state) => state.config.currentToken;\nexport const selectCurrentContact = (state) => state.config.currentContact;\nexport const selectCurrentAction = (state) => state.config.currentAction;\nexport const selectDocumentStatus = (state) => state.config.documentStatus;\nexport const selectRepeaterValue = (state) => state.config.repeaterValue;\nexport const selectOptionedControls = (state) => state.config.value;\nexport const selectOpenListId = (state) => state.config.openListId;\n\nexport default configSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const jsonSlice = createSlice({\r\n  name: \"json\",\r\n  initialState: {\r\n    value: {},\r\n  },\r\n  reducers: {\r\n    setJson: (state, action) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setJson } = jsonSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\n// export const incrementAsync = (amount) => (dispatch) => {\r\n//   setTimeout(() => {\r\n//     dispatch(incrementByAmount(amount));\r\n//   }, 1000);\r\n// };\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.json.value)`\r\nexport const selectJson = (state) => state.json.value;\r\n\r\nexport default jsonSlice.reducer;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  setCurrentTemplate,\n  setDocumentStatus,\n} from \"../features/config/configSlice\";\nimport { setJson } from \"../features/json/jsonSlice\";\n\nfunction FormSelector(props) {\n  const { projectId, templateId, documentId, token, userName } = props;\n\n  const dispatch = useDispatch();\n\n  const apiURL = \"https://api-uat.extrack.com/\";\n\n  // PROJECT\n  useEffect(() => {\n    // console.log(\"-------> projectId has changed: \", projectId);\n  }, [projectId]);\n  // TEMPLATE\n  useEffect(() => {\n    // console.log(\"-------> templateId has changed: \", templateId);\n    loadTemplate(templateId);\n  }, [templateId]);\n  // DOCUMENT\n  useEffect(() => {\n    // console.log(\"-------> documentId has changed: \", documentId);\n  }, [documentId]);\n\n  async function loadTemplate(pTemplateId) {\n    // if (pTemplateId > 0)\n    //   console.log(\"-------> load template id: \", pTemplateId);\n    // setIsFetchingTemplates(true);\n\n    let template;\n    const templateHeaders = new Headers();\n    templateHeaders.append(\"Authorization\", `Bearer ${token}`);\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    const requestOptions = {\n      method: \"GET\",\n      headers: templateHeaders,\n      redirect: \"follow\",\n    };\n\n    // Check if project and template id have been set\n    if (projectId > 0 && pTemplateId > 0) {\n      await fetch(\n        `${apiURL}V1.0/Project/${projectId}/Document/Form/Template/${pTemplateId}`,\n        requestOptions\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          // console.log(result);\n          dispatch(setJson(JSON.parse(result.Config)));\n\n          let newTemplate = { ...result };\n          delete newTemplate.Config;\n          dispatch(setCurrentTemplate(newTemplate));\n          dispatch(setDocumentStatus(\"loaded\"));\n        })\n        .catch((error) => console.log(\"error\", error));\n    }\n  }\n\n  return (\n    <div>\n      <ul>\n        <li>project: {projectId}</li>\n        <li>template: {templateId}</li>\n        <li>document: {documentId}</li>\n        <li>userName: {userName}</li>\n        <li className=\"textcut textcut-lg\">token: {token}</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default FormSelector;\n","import camelcaseKeys from \"camelcase-keys\";\n\nexport function getControlName(pControlType) {\n  return pControlType\n    .split(\".\")\n    .map((part) => part[0].toUpperCase() + part.slice(1))\n    .join(\"\");\n}\n\nexport function getElementFromElementId(pJson, pElementID) {\n  // console.log(`----------------> Looking for pElementID: `, pElementID, ' inside pJson: ', pJson)\n\n  const currentJson = normalizeJson(pJson).Sections;\n  // console.log(`--->: getElementFromElementId inside this: `, currentJson)\n  let foundPath = [];\n\n  if (pElementID !== \"undefined\") {\n    currentJson.forEach((section, sectionIndex) => {\n      section.Elements.forEach((item, index) => {\n        if (item.hasOwnProperty(\"Elements\")) {\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.hasOwnProperty(\"Elements\")) {\n              subitem.Elements.forEach((subsubitem, subsubindex) => {\n                if (\n                  subsubitem.Id !== undefined &&\n                  subsubitem.Id === pElementID\n                ) {\n                  // console.log('--> subsubpath: ', { sectionIndex, index, subindex, subsubindex })\n                  foundPath.push([sectionIndex, index, subindex, subsubindex]);\n                }\n              });\n            }\n\n            if (subitem.Id !== undefined && subitem.Id === pElementID) {\n              // console.log('--> subpath: ', { sectionIndex, index, subindex })\n              foundPath.push([sectionIndex, index, subindex]);\n            }\n          });\n        }\n\n        if (item.Id !== undefined && item.Id === pElementID) {\n          // console.log('--> path: ', { sectionIndex, index })\n          foundPath.push([sectionIndex, index]);\n        }\n      });\n    });\n  }\n\n  return foundPath;\n}\n\n// Fix conflict with React component 'Date' and Date JS Object\nexport function getCurrentDate(pDate = Date.now()) {\n  // console.log(`--->: getCurrentDate -> pDate`, pDate)\n  // return new Date().toLocaleDateString().split('/').reverse().join('-')\n  // return new Date().toLocaleDateString()\n  // return new Date()\n  return new Date(pDate);\n}\nexport function getDateObjFromDate(pDate) {\n  const dateObj = new Date(pDate + \" \" + new Date().toTimeString());\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj;\n}\nexport function getDateObjFromTime(pTime) {\n  const dateObj = new Date(new Date().toDateString() + \" \" + pTime);\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj;\n}\nexport function getDateObjFromDateString(pDate) {\n  const dateObj = new Date(pDate);\n  return dateObj;\n}\n\nexport function normalizeJson(pJson) {\n  // const json = JSON.parse(pJson)\n  return camelcaseKeys(pJson, { deep: true, pascalCase: true });\n}\n\n//\nconst exportMetaData = [];\nexport function addToDocumentExport(pValue) {\n  const controlIndex = exportMetaData.findIndex(\n    (item) => item.Id === pValue.Id\n  );\n  // console.log(`--->: addToDocumentExport -> controlIndex`, controlIndex);\n  if (controlIndex === -1) exportMetaData.push(pValue);\n  else {\n    const prevValue = { ...exportMetaData[controlIndex] };\n    exportMetaData[controlIndex] = { ...prevValue, ...pValue };\n  }\n  // console.log(`--->: addToDocumentExport -> pValue`, pValue.Id)\n  // console.log(`exportMetaData :`);\n  console.table(exportMetaData);\n\n  // exportMetaData[0].Elements.push(pValue)\n  // console.log('---> addToDocumentExport: ', exportMetaData)\n}\n\nexport function getDocumentExport() {\n  return { Elements: exportMetaData };\n}\n\nexport function getControlPathById(pControlId, pActiveSectionId, pJson) {\n  // console.log(`--->: getControlPathById -> pControlId`, pControlId)\n  const currentSection = pJson.Sections[pActiveSectionId];\n  // let foundItem = {};\n  let itemPath = {};\n\n  currentSection.Elements.forEach((item, index) => {\n    if (item.hasOwnProperty(\"Elements\")) {\n      item.Elements.forEach((subitem, subindex) => {\n        if (subitem.hasOwnProperty(\"Elements\")) {\n          subitem.Elements.forEach((subsubitem, subsubindex) => {\n            if (subsubitem.Id === pControlId) {\n              // console.log('---> Trouvé subsubitem: ', subsubitem)\n              itemPath = {\n                section: pActiveSectionId,\n                index,\n                subindex,\n                subsubindex,\n              };\n              // foundItem = subsubitem;\n            }\n          });\n        }\n\n        if (subitem.Id === pControlId) {\n          // console.log('---> Trouvé subitem: ', subitem)\n          itemPath = { section: pActiveSectionId, index, subindex };\n          // foundItem = subitem;\n        }\n      });\n    }\n\n    if (item.Id === pControlId) {\n      // console.log('---> Trouvé item: ', item)\n      itemPath = { section: pActiveSectionId, index };\n      // foundItem = pJson.Sections[pActiveSectionId].Elements[index]\n    }\n  });\n  // console.log('-- foundItem -> ', foundItem)\n  return itemPath;\n}\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { selectJson } from \"../../features/json/jsonSlice\";\n\nimport { callSection } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction DocumentTableOfContents(props) {\n  const json = useSelector(selectJson);\n  const dispatch = useDispatch();\n\n  // const { Title, Id, Elements }  = json\n\n  function gotToSectionHanlder(pSectionIndex) {\n    // console.log('pSectionIndex: ', pSectionIndex)\n    dispatch(callSection(pSectionIndex));\n  }\n\n  const sections =\n    json.Sections && json.Sections.length > 0\n      ? json.Sections.map((element, index) => {\n          if (element.Elements[0].Type === \"Document.TableOfContents\")\n            return null;\n          return (\n            <li key={index}>\n              <button\n                className=\"btn-secondary-outlined btn-link fixed-large\"\n                onClick={() => gotToSectionHanlder(index)}\n              >\n                {element.Title}\n                <FontAwesomeIcon icon={faChevronRight} />\n              </button>\n            </li>\n          );\n        })\n      : \"\";\n\n  return <ul className=\"toc-list\">{sections}</ul>;\n}\n\nexport default DocumentTableOfContents;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectOptionedControls,\n  selectDebugMode,\n} from \"../../features/config/configSlice\";\n\nfunction ListMulticontrol(props) {\n  const json = props.controlJson;\n\n  const { Type, Title, Id, Data, IsVisible = true } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  function onChangeHandler(pEvent) {\n    const selectedIndex = Number(pEvent.target.value);\n    // console.log(`--->: onChangeHandler -> selectedIndex`, selectedIndex)\n    if (selectedIndex >= 0) {\n      const visibleControls =\n        json.OptionedControls[selectedIndex].Controls !== undefined\n          ? json.OptionedControls[selectedIndex].Controls\n          : [];\n      const hiddenControls = [];\n\n      json.OptionedControls.forEach((option, index) => {\n        // console.log('index: ', index, '  selectedIndex: ', selectedIndex)\n\n        if (option.Controls !== undefined && index !== selectedIndex) {\n          option.Controls.forEach((controlId) =>\n            hiddenControls.push(controlId)\n          );\n          // console.log('index: ', index, '  selectedIndex: ', selectedIndex, '   hide: ', option.Controls)\n        }\n      });\n\n      // console.log('---> hiddenControls: ', hiddenControls)\n      // console.log('---> visibleControls: ', visibleControls)\n      dispatch(selectOptionedControls({ hiddenControls, visibleControls }));\n      // displayControls(visibleControls)\n    }\n  }\n\n  function displayControls(pControlList) {\n    // console.log('---> pControlList: ', pControlList)\n    // dispatch(setControls(pControlList))\n    // pControlList.forEach((item, index) => {\n    //   console.log('---> ', item)\n    // })\n  }\n\n  const options = Data.map((option, index) => (\n    <option key={index} value={index}>\n      {option}\n    </option>\n  ));\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"listmulticontrol\">{Title}</label>\n        <select\n          name=\"listmulticontrol\"\n          id=\"listmulticontrol\"\n          onChange={onChangeHandler}\n        >\n          <option value=\"-1\">-----</option>\n          {options}\n        </select>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ListMulticontrol;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction Label(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    IsVisible = true,\n    FontAttributes,\n    FontSize = 14,\n    Margin = 0,\n    HasUnderLine = false,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <div\n          className=\"control\"\n          style={{\n            fontSize: FontSize - 2 + \"px\",\n            fontWeight: FontAttributes === \"Bold\" ? \"bold\" : \"\",\n            fontStyle: FontAttributes === \"Italic\" ? \"italic\" : \"\",\n            borderBottom: HasUnderLine ? \"1px solid black\" : \"\",\n            padding: Margin ? Margin + \"px\" : \"\",\n          }}\n        >\n          {Title}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Label;\n","import React from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop, callback } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  const actionBtns = callback ? <div>\n    <button className={styles.modalBtn} onClick={toggleVisibility}>Cancel</button>\n    <button className={styles.modalBtn} onClick={callback}>OK</button>\n  </div>\n    :\n    <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springModalProps}>\n          <div\n            className={styles.modalContainer}\n            style={css}>\n            <div className={styles.modalClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.modalHeader}>\n              <FontAwesomeIcon icon={faExclamationTriangle} />\n            </div>\n            <div className={styles.modalContent}>\n              {message}\n            </div>\n            <div className={styles.modalFooter}>\n              {actionBtns}\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Modal from \"../Modal\";\n\nimport {\n  selectDebugMode,\n  setCurrentContact,\n  selectCurrentContact,\n  selectDocumentStatus,\n} from \"../../features/config/configSlice\";\n\nfunction Text(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    IsVisible = true,\n    IsEnabled = true,\n    Value = \"\",\n    Format,\n    Warning = false,\n    WarningMessage,\n    Mandatory,\n    ValidationMessage,\n    AssociatedId,\n  } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n  const currentContact = useSelector(selectCurrentContact);\n  // const status = useSelector(selectDocumentStatus)\n  const dispatch = useDispatch();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalOptions, setModalOptions] = useState(\n    Mandatory\n      ? { message: ValidationMessage, bgColor: \"#EF643C\" }\n      : { message: WarningMessage, bgColor: \"#000000\" }\n  );\n\n  const emailAddressTester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/;\n  const phoneNumberRestrictCodes = [\n    49,\n    50,\n    51,\n    52,\n    53,\n    54,\n    55,\n    56,\n    57,\n    48,\n    189,\n    16,\n    57,\n    48,\n    16,\n    187,\n    32,\n    8,\n    35,\n  ];\n\n  // useEffect(() => {\n  //   if (status === 'reset-currentContact') {\n  //     const newJson = JSON.parse(JSON.stringify(json))\n  //     newJson.Value = ''\n  //     console.log(`---> ~ file: Text.js ~ line 36 ~ useEffect ~ newJson`, newJson)\n  //     props.updateJson(newJson)\n\n  //     // console.log('---> Should reset this: ', document.getElementById('ManualSMSName').value, document.getElementById('ManualSMSPhone').value)\n  //     // document.getElementById('ManualSMSName').value = ''\n  //     // document.getElementById('ManualSMSPhone').value = ''\n  //   }\n  // }, [status])\n\n  function onChangeHandler(pEvent) {\n    // EMAIL&SMS Register\n    if (AssociatedId && AssociatedId.Names.length > 0) {\n      if (Id === \"ManualSMSName\")\n        dispatch(\n          setCurrentContact({ ...currentContact, name: pEvent.target.value })\n        );\n      if (Id === \"ManualSMSPhone\")\n        dispatch(\n          setCurrentContact({\n            ...currentContact,\n            phoneNumber: pEvent.target.value,\n          })\n        );\n      if (Id === \"ManualEmailName\")\n        dispatch(\n          setCurrentContact({ ...currentContact, name: pEvent.target.value })\n        );\n      if (Id === \"ManualEmailEmail\")\n        dispatch(\n          setCurrentContact({ ...currentContact, email: pEvent.target.value })\n        );\n    }\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = pEvent.target.value;\n    // console.log('value: ', json)\n    props.updateJson(newJson);\n  }\n\n  function onBlurHandler(pEvent) {\n    const target = pEvent.target;\n\n    if (Warning && target.value === \"\") {\n      setIsModalVisible(true);\n    }\n    if (Mandatory && target.value === \"\") {\n      target.focus();\n      setIsModalVisible(true);\n    }\n    if (Format !== undefined && Format.Keyboard === \"Email\") {\n      if (!emailAddressTester.test(pEvent.target.value.toLowerCase())) {\n        setModalOptions({\n          message: \"The email address provided appears not to be valid\",\n          bgColor: \"#000000\",\n        });\n        setIsModalVisible(true);\n      }\n    }\n  }\n\n  function onKeyDownHandler(pEvent) {\n    // console.log('---> ', pEvent.keyCode)\n    if (Format.Keyboard === \"Telephone\") {\n      if (!phoneNumberRestrictCodes.includes(pEvent.keyCode))\n        pEvent.preventDefault();\n    }\n  }\n\n  useEffect(() => {\n    // console.log('Text set data: ', Value)\n  }, [json]);\n\n  const textfield =\n    Format !== undefined ? (\n      Format.Lines !== undefined ? (\n        <textarea\n          id={Id}\n          rows={Format.Lines}\n          onChange={onChangeHandler}\n        ></textarea>\n      ) : Format.Keyboard === \"Numeric\" ? (\n        <input\n          type=\"number\"\n          min={Format.Min}\n          max={Format.Max}\n          size={Format.Decimal}\n          onChange={onChangeHandler}\n        />\n      ) : Format.Keyboard === \"Telephone\" ? (\n        <input\n          type=\"text\"\n          maxLength=\"20\"\n          onKeyDown={onKeyDownHandler}\n          onChange={onChangeHandler}\n        />\n      ) : (\n        <input\n          id={Id}\n          type=\"text\"\n          value={Value}\n          maxLength={Format.VarChar || -1}\n          disabled={!IsEnabled}\n          onBlur={onBlurHandler}\n          onChange={onChangeHandler}\n        />\n      )\n    ) : (\n      <input\n        id={Id}\n        type=\"text\"\n        value={Value}\n        disabled={!IsEnabled}\n        onBlur={onBlurHandler}\n        onChange={onChangeHandler}\n      />\n    );\n\n  const warningMarker = WarningMessage ? \"*\" : \"\";\n  const mandatoryMarker = Mandatory ? (\n    <span className=\"warning-red\">*</span>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <label htmlFor=\"title\">\n          {Title} {warningMarker}\n          {mandatoryMarker}\n        </label>\n        {textfield}\n      </div>\n      <Modal\n        visibility={isModalVisible}\n        toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n        message={`${Id}: ${modalOptions.message}`}\n        css={{ backgroundColor: modalOptions.bgColor }}\n        backdrop={\"rgba(0,0,0,0.3)\"}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Text;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setJson,\n  selectJson,\n  setRepeaterValue,\n  selectRepeaterValue,\n} from \"../../features/config/configSlice\";\n\nimport { getControlName } from \"../../app/utilities\";\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  // Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument,\n} from \"./\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusSquare, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Repeatable(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Elements, IsVisible = true } = json;\n  // console.log(`--->: Repeatable -> props: `, props)\n\n  const dispatch = useDispatch();\n\n  const repeaterValue = useSelector(selectRepeaterValue);\n  const debugMode = useSelector(selectDebugMode);\n\n  // console.log(`--->: Repeatable -> repeaterValue`, repeaterValue)\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument,\n  };\n\n  function updateJsonHandler(pJson, pRepeaterIndex) {\n    // console.log('this repeater: ', pRepeaterIndex)\n    // console.log('update this: ', pJson)\n\n    const repeaterControlIndex = repeaterValue[pRepeaterIndex].findIndex(\n      (item) => item.Id === pJson.Id\n    );\n\n    const newRepeaterValues = [...repeaterValue];\n    console.log(\n      `--->: updateJsonHandler -> newRepeaterValues`,\n      newRepeaterValues\n    );\n    console.log(\n      `--->: updateJsonHandler -> newRepeaterValues[pRepeaterIndex][repeaterControlIndex]`,\n      newRepeaterValues[pRepeaterIndex][repeaterControlIndex]\n    );\n\n    newRepeaterValues[pRepeaterIndex] = [\n      ...newRepeaterValues[pRepeaterIndex],\n      pJson,\n    ];\n\n    // console.log('---> newRepeaterValues[pRepeaterIndex][repeaterControlIndex] ; ', newRepeaterValues[pRepeaterIndex][repeaterControlIndex])\n    dispatch(setRepeaterValue(newRepeaterValues));\n\n    // console.log('in this: ', json.Elements)\n    // const mergedElements = [...json.Elements]\n\n    // const elementIndex = mergedElements.findIndex(element => element.ID === pJson.ID)\n    // mergedElements[elementIndex] = pJson\n    // // console.log('--->elementIndex:  ', elementIndex)\n\n    // props.updateJson({ ...json, Elements: mergedElements })\n  }\n\n  function addRepeatable() {\n    dispatch(setRepeaterValue([...repeaterValue, Elements]));\n  }\n  function removeRepeatableByIndex(pIndex) {\n    // console.log('---> removeRepeatableByIndex: ', pIndex)\n    dispatch(\n      setRepeaterValue([\n        ...repeaterValue.filter((item, index) => index !== pIndex),\n      ])\n    );\n  }\n\n  // const children = Elements.map((control, index) => {\n  //   const componentName = getControlName(control.Type)\n  //   // console.log(`--->componentName: `, componentName)\n  //   console.log('---> RP create item: ', control)\n\n  //   const Component = components[componentName]\n  //   return <Component key={index} controlJson={control} updateJson={updateJsonHandler} />\n  //   // return <div key={index}>{control.Type}</div>\n  // })\n  const children = repeaterValue.map((value, repeaterIndex) => {\n    // console.log(`--->value: `, value)\n\n    const controls = Elements.map((control, index) => {\n      // console.log('---> ', control)\n\n      value.forEach((repeaterControl, index) => {\n        if (control.Id === repeaterControl.Id)\n          control = { control, ...repeaterControl };\n      });\n\n      const componentName = getControlName(control.Type);\n      const Component = components[componentName];\n      return (\n        <Component\n          key={index}\n          controlJson={control}\n          updateJson={(pJson) => updateJsonHandler(pJson, repeaterIndex)}\n        />\n      );\n    });\n\n    return (\n      <div className=\"repeatable\" key={`rep-${repeaterIndex}`}>\n        <div className=\"repeatable-header\">\n          <h3 className=\"repeatable-title\">\n            [{repeaterIndex + 1}] {Title}\n          </h3>\n          <button\n            className=\"btn btn-secondary btn-small\"\n            onClick={(e) => removeRepeatableByIndex(repeaterIndex)}\n          >\n            Remove\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        </div>\n        {controls}\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        {/* <div className=\"repeatable-header\">\n            <h3 className=\"repeatable-title\">{Title}</h3>\n            <button className=\"btn btn-secondary btn-small\" onClick={e => console.log('ok')}>\n              Remove\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div> */}\n        {children}\n\n        <button className=\"btn btn-primary\" onClick={addRepeatable}>\n          <FontAwesomeIcon icon={faPlusSquare} />\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Repeatable;\n","import React, { useState } from 'react'\n\nfunction ButtonSubmitPurchase(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitPurchase<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitPurchase\n","import React, { useState } from 'react'\n\nfunction ButtonAddDocketNumber(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddDocketNumber<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddDocketNumber\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectCurrentToken,\n  selectOpenListId,\n  setOpenListId,\n  selectDebugMode,\n} from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleUp,\n  faAngleDown,\n  faTimes,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { useSpring, animated, useTrail, config } from \"react-spring\";\n\nfunction API(props) {\n  const json = props.controlJson;\n\n  const {\n    Title,\n    Type,\n    Id,\n    IsVisible = true,\n    Value = \"\",\n    Api,\n    IncludePhoneNumber,\n    IncludeEmail,\n    IncludeTitle,\n    IncludeBusinessNumber,\n    IncludeAbbreviation,\n    IncludeCode,\n  } = json;\n  const targetedApi = String(Api).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n  const token = useSelector(selectCurrentToken);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n  const [selectedValues, setSelectedValues] = useState(\n    Value.constructor === String ? [Value] : Value\n  );\n\n  const openListId = useSelector(selectOpenListId);\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 });\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: {\n      opacity: 0,\n      marginLeft: -12,\n      marginTop: -6,\n      transform: \"scaleX(0.6) scaleY(0.8)\",\n    },\n    to: {\n      opacity: 1,\n      marginLeft: 0,\n      marginTop: 0,\n      transform: \"scaleX(1) scaleY(1)\",\n    },\n    // config: { duration: 1250 },\n    config: config.stiff,\n  });\n\n  // useEffect(() => {\n  //   // console.log(`API (${Title}) has new json: ${JSON.stringify(json)}`)\n  //   // console.log('API: default data: ', Value)\n  // }, [json])\n\n  /**-------------------------------------------------**\n   * @desc - API                                   -----*\n   *----------------------------------------------------*/\n\n  const environment = \"https://api-uat.extrack.com/V1.0/\";\n  const projectID = 1249;\n\n  const apiUrl = `${environment}${getEndpoint()}`;\n\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n  // console.log(`--->: API -> Api`, Api, token.access_token)\n\n  const apiHeaders = new Headers();\n  apiHeaders.append(\"Authorization\", `Bearer ${token}`);\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: apiHeaders,\n    redirect: \"follow\",\n  };\n\n  function getEndpoint() {\n    switch (targetedApi) {\n      case \"projectcompany\":\n        return `Project/${projectID}/Directory/Companies`;\n      case \"projectcontacts\":\n        return `Project/${projectID}/Directory/Contacts`;\n      case \"globalcontacts\":\n        return `Org/contacts`;\n      case \"dockettypes\":\n        return `/Docket/Types`;\n      case \"abs\":\n        return `Project/${projectID}/ABS`;\n      case \"tbs\":\n        return `Project/${projectID}/TBS`;\n      case \"cbs\":\n        return `Project/${projectID}/CbsWo`;\n      case \"dbs\":\n        return `Project/${projectID}/DBS`;\n      case \"fbs\":\n        return `Project/${projectID}/FBS`;\n      case \"wbs\":\n        return `Project/${projectID}/WBS`;\n      case \"pcbs\":\n        return `Project/${projectID}/PCBS`;\n      case \"pbs\":\n        return `Project/${projectID}/PBS`;\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then((response) => response.text())\n      .then((result) => {\n        // console.log(targetedApi, JSON.parse(result))\n        const dropdownOptions = JSON.parse(result);\n        // console.log(`--->: API -> dropdownOptions`, dropdownOptions)\n\n        const listItems = dropdownOptions.map((item, index) => {\n          let option, phoneNumber, emailAddress, title, abn, abbr, code, spacer;\n          switch (Api) {\n            case \"ProjectContacts\":\n              phoneNumber = IncludePhoneNumber\n                ? ` | ${item.Contact.Number || `n/a`}`\n                : ``;\n              emailAddress = IncludeEmail\n                ? ` | ${item.Contact.Email || `n/a`}`\n                : ``;\n              option = `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}${phoneNumber}${emailAddress}`;\n              break;\n\n            case \"GlobalContacts\":\n              phoneNumber = IncludePhoneNumber\n                ? ` | ${item.Number || `n/a`}`\n                : ``;\n              emailAddress = IncludeEmail ? ` | ${item.Email || `n/a`}` : ``;\n              option = `${item.NameFirst} ${item.NameLast} | ${item.CompanyName}${phoneNumber}${emailAddress}`;\n              break;\n\n            case \"ProjectCompany\":\n              // console.log(`--->: API ${Api} -> item`, item)\n\n              title = IncludeTitle ? ` | ${item.Title || `n/a`}` : ``;\n              abn = IncludeBusinessNumber\n                ? ` | ${item.Company.Abn || `n/a`}`\n                : ``;\n              abbr = IncludeAbbreviation\n                ? ` | ${item.Company.Abbr || `n/a`}`\n                : ``;\n              option = `${item.Company.Name}${title}${abn}${abbr}`;\n              // optionLabel = `${item.Company.Name} - ${item.Company.Abbr}`\n              break;\n\n            case \"DocketTypes\":\n              option = `${item.Title}`;\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break;\n            default:\n              title = IncludeTitle ? `${item.Title || `n/a`}` : ``;\n              code = IncludeCode ? `${item.Code || `n/a`}` : ``;\n              spacer = IncludeCode && IncludeTitle ? ` | ` : ``;\n              option = `${title}${spacer}${code}`;\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break;\n          }\n\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          // console.log('component:', {Type: 'Api', Value, optionLabel})\n          // setSelectedValue(optionValue)\n          // }\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          //   currentValue = Value\n          //   console.log('API ---> DefaultValue: ', Value, '----> optionLabel : ', optionLabel)\n\n          // }\n          // return <option key={index} value={optionValue}>{optionLabel}</option>\n          return option;\n        });\n        setList(listItems);\n        // console.log(`--->: API -> dropdownNodes`, dropdownNodes)\n      })\n      .catch((error) => console.log(\"error\", error));\n  }, []);\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id));\n  }, [collapsed, Id, dispatch]);\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true);\n  }, [openListId, Id]);\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(\n      list.filter((item) => item.toLowerCase().includes(keyword.toLowerCase()))\n    );\n  }, [list, keyword]);\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target;\n    if (\n      target.className === \"input-select\" ||\n      target.className === \"input-select-items\"\n    )\n      setCollapsed(!collapsed);\n    else if (target.className === \"remove-item\") {\n      const targetText = target.parentNode.innerText;\n      if (targetText !== \"\") {\n        updateJSON(\"\");\n        setSelectedValues(selectedValues.filter((item) => item !== targetText));\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id;\n\n    if (selectedValues[0] !== currentItem) setSelectedValues([currentItem]);\n    else setSelectedValues([]);\n    updateJSON(currentItem);\n  }\n  function updateJSON(pValue) {\n    // console.log(`--->: updateJSON with Value: `, pValue)\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (newJson.Value === pValue) newJson.Value = \"\";\n    else {\n      newJson.Value = pValue;\n      setCollapsed(true);\n    }\n    // console.log(`--->: updateJSON -> newJson`, newJson)\n    props.updateJson(newJson);\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed\n    ? \"\"\n    : filteredList.map((item, key) => {\n        const isSelected = item === Value ? true : false;\n        const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : \"\";\n        return (\n          <div\n            key={key}\n            id={item}\n            className={`input-list-item ${\n              isSelected ? \"selected-list-item\" : \"\"\n            }`}\n            onClick={listItemClickHandler}\n          >\n            {iconCheck}\n            {item}\n          </div>\n        );\n      });\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index];\n    if (item !== \"\")\n      return (\n        <animated.div className=\"input-select-item\" style={props} key={index}>\n          {item}\n          <button id={item} className=\"remove-item\"></button>\n        </animated.div>\n      );\n    return \"\";\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">{selectedPills}</div>\n          <FontAwesomeIcon\n            icon={collapsed ? faAngleDown : faAngleUp}\n            onClick={listIconClickHandler}\n          />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"input-list-search\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n            ></input>\n            <FontAwesomeIcon icon={faTimes} onClick={(e) => setKeyword(\"\")} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default API;\n","import React, { useState } from 'react'\n\nimport { format, addDays, addMonths } from 'date-fns'\n// import DatePicker from \"react-datepicker\"\n// import \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DateInput(props) {\n\n  const dateformatConverted = props.format.replace(/ddd/g, 'eee')\n  const [dateValue, setDateValue] = useState(props.dateValue)\n  // console.log(`--->: DateInput -> props.dateValue received: `, props.dateValue)\n\n  function onClearHandler() {\n    setDateValue('')\n    props.onDateChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setDateValue(pValue)\n    props.onDateChange(pValue)\n  }\n\n  const dateString = dateValue === '' ? dateValue : format(addMonths(addDays(getDateObjFromDate(dateValue), props.modifiers.AddDay), props.modifiers.AddMonth), dateformatConverted)\n\n\n  return (\n    <div className={styles.dateContainer}>\n      <input\n        type=\"date\"\n        name=\"\"\n        id=\"\"\n        className={styles.datePicker}\n        defaultValue={dateValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {dateString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { getCurrentDate, getDateObjFromDate } from \"../../app/utilities\";\nimport DateInput from \"../DateInput\";\n\nfunction Date(props) {\n  const json = props.controlJson;\n  let {\n    Type,\n    Title,\n    Id,\n    FormatDateTime = \"yyyy-MM-dd\",\n    IsBlank = false,\n    IsVisible = true,\n    AddDay = 0,\n    AddMonth = 0,\n    DateValue,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const defaultDate =\n    DateValue === \"\" || DateValue === undefined\n      ? `${getCurrentDate().toDateString()}`\n      : DateValue;\n\n  const [dateValue, setDateValue] = useState(!IsBlank ? defaultDate : \"\");\n\n  function onDateChangeHandler(pDate) {\n    setDateValue(pDate);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (pDate !== \"\") newJson.DateValue = pDate;\n    else delete newJson.DateValue;\n    newJson.IsBlank = pDate !== \"\" ? false : true;\n    props.updateJson(newJson);\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <DateInput\n          format={FormatDateTime}\n          dateValue={dateValue}\n          modifiers={{ AddDay, AddMonth }}\n          onDateChange={(value) => onDateChangeHandler(value)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Date;\n","import React from 'react'\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './Figure.module.scss'\n\n\nexport default function Figure(props) {\n\n  function onClickHandler(pEvent) {\n    // console.log('---> ', pEvent)\n\n    props.onClose(pEvent)\n\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.source} alt=\"figure\" />\n      <div className={styles.btnClose} onClick={onClickHandler}><FontAwesomeIcon icon={faTimes} /></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport Figure from \"../Figure\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction Image(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, IsVisible = true, Images = [] } = json;\n  // console.log(`--->: Image -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    // const newJson = JSON.parse(JSON.stringify(json))\n    // newJson.Value = pEvent.target.value\n    console.log(\"pEvent: \", pEvent);\n    // props.updateJson(newJson)\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log(\"---> \", pEvent);\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json]);\n\n  const images = Images.map((image, index) => (\n    <div className=\"control-row\" key={`image${index}`}>\n      <Figure\n        source={`data:image/png; base64, ${image}`}\n        onClose={onCloseHandler}\n      />\n    </div>\n  ));\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <div className=\"control-row\">\n          <h3 htmlFor=\"title\">{Title}</h3>\n          <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n            <FontAwesomeIcon icon={faImage} />\n            Select an image\n          </label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            name=\"file\"\n            className=\"btn-file\"\n            onChange={onChangeHandler}\n          />\n        </div>\n        {images}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Image;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport Figure from \"../Figure\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faImage } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ImageSingle(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, IsVisible = true, Value = \"\" } = json;\n  // console.log(`--->: ImageSingle -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    let imageData;\n    const fileReader = new FileReader();\n    fileReader.onload = (e) => {\n      imageData = e.target.result.replace(\"data:image/png;base64,\", \"\");\n\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = imageData;\n      props.updateJson(newJson);\n    };\n    fileReader.readAsDataURL(pEvent.target.files[0]);\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log(\"---> \", pEvent);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    delete newJson.Value;\n    props.updateJson(newJson);\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json]);\n\n  const figure =\n    Value !== \"\" ? (\n      <Figure\n        source={`data:image/png; base64, ${Value}`}\n        onClose={onCloseHandler}\n      />\n    ) : (\n      \"\"\n    );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <div className=\"control-row\">\n          <h3 htmlFor=\"title\">{Title}</h3>\n          <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n            <FontAwesomeIcon icon={faImage} />\n            Select an image\n          </label>\n          <input\n            type=\"file\"\n            id=\"file\"\n            name=\"file\"\n            className=\"btn-file\"\n            onChange={onChangeHandler}\n          />\n        </div>\n        <div className=\"control-row\">{figure}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ImageSingle;\n","import React, { useState } from 'react'\n\nfunction ButtonAddReportDate(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddReportDate<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddReportDate","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport QrReader from \"react-qr-reader\";\nimport { format } from \"date-fns\";\n\nfunction QRScanner(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Value = \"\", DateTimeValue } = json;\n\n  const [isScanning, setIsScanning] = useState(false);\n  const debugMode = useSelector(selectDebugMode);\n\n  const handleScan = (pData) => {\n    if (pData) {\n      updateValues(pData, format(new Date(), \"yyyy-MM-dd hh:mm a\"));\n      setIsScanning(false);\n    }\n  };\n\n  const handleError = (pErr) => {\n    console.error(pErr);\n  };\n\n  function deleteValue() {\n    updateValues(\"\", \"\");\n  }\n\n  function updateValues(pScanValue, pTimestamp) {\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = pScanValue;\n    newJson.DateTimeValue = pTimestamp;\n    // console.log('value: ', json)\n    props.updateJson(newJson);\n  }\n\n  const qrReader = isScanning ? (\n    <QrReader\n      delay={300}\n      onError={handleError}\n      onScan={handleScan}\n      style={{ width: \"100%\" }}\n    />\n  ) : (\n    \"\"\n  );\n\n  const btScan = !isScanning ? (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => setIsScanning(!isScanning)}\n    >\n      Scan a code\n    </button>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          {btScan}\n          {qrReader}\n        </div>\n        <div className=\"control-row\">\n          <div className=\"qrscan-record qrscan-record-3cols\">\n            <div>{Value}</div>\n            <div>{DateTimeValue}</div>\n            <button\n              className=\"btn btn-secondary btn-small\"\n              onClick={deleteValue}\n            >\n              delete\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default QRScanner;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport Modal from \"../Modal\";\n\nimport QrReader from \"react-qr-reader\";\nimport { format } from \"date-fns\";\n\nfunction QRScannerList(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Value = [], DateTimeValue } = json;\n  console.log(\"-------> QRLIST json: \", json);\n\n  const [isScanning, setIsScanning] = useState(false);\n  const [scanOffIndex, setScanOffIndex] = useState(-1);\n\n  const debugMode = useSelector(selectDebugMode);\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalOptions, setModalOptions] = useState({ message: \"\" });\n\n  const handleScan = (pData) => {\n    if (pData) {\n      const newList = Value;\n\n      if (scanOffIndex < 0) {\n        newList.push({\n          Id: newList.length,\n          Name: pData,\n          ScanOnDateTime: format(new Date(), \"yyyy-MM-dd hh:mm a\"),\n        });\n      } else {\n        if (pData === newList[scanOffIndex].Name) {\n          newList[scanOffIndex].ScanOffDateTime = format(\n            new Date(),\n            \"yyyy-MM-dd hh:mm a\"\n          );\n          // console.log('---> Add scan off, scanOffIndex on: ', newList[scanOffIndex])\n        } else {\n          setModalOptions({\n            message: \"Please rescan the same QR code to sign off\",\n            bgColor: \"#000000\",\n            callback: null,\n          });\n          setIsModalVisible(true);\n        }\n        setScanOffIndex(-1);\n      }\n\n      updateValues(newList);\n      setIsScanning(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log(`--->: QRScannerList -> scanOffIndex`, scanOffIndex);\n    if (scanOffIndex >= 0) setIsScanning(true);\n  }, [scanOffIndex]);\n\n  const handleError = (pErr) => {\n    console.error(pErr);\n  };\n\n  function deleteValue(pIndex) {\n    setModalOptions({\n      message: \"Are you sure you want to delete?\",\n      bgColor: \"#000000\",\n      callback: () => {\n        const newList = JSON.parse(Value).filter(\n          (value, index) => index !== pIndex\n        );\n        updateValues(newList);\n        setIsModalVisible(false);\n      },\n    });\n    setIsModalVisible(true);\n  }\n\n  function updateValues(pValue) {\n    // console.log('value: ', pValue)\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = JSON.stringify(pValue);\n    // newJson.DateTimeValue = pTimestamp\n    props.updateJson(newJson);\n  }\n\n  const qrReader = isScanning ? (\n    <QrReader\n      delay={300}\n      onError={handleError}\n      onScan={handleScan}\n      style={{ width: \"100%\" }}\n    />\n  ) : (\n    \"\"\n  );\n\n  const btScan = !isScanning ? (\n    <button\n      className=\"btn btn-primary\"\n      onClick={() => setIsScanning(!isScanning)}\n    >\n      Add to QR Scanner list\n    </button>\n  ) : (\n    \"\"\n  );\n\n  const scanList = Value.map((value, index) => {\n    return (\n      <div key={`scan${index}`} className=\"qrscan-record\">\n        <div>{value.Name}</div>\n        <div>\n          {value.ScanOnDateTime || (\n            <button\n              className=\"btn btn-primary btn-small\"\n              onClick={() => setScanOffIndex(index)}\n            >\n              Scan Off\n            </button>\n          )}\n        </div>\n        <div>\n          {value.ScanOffDateTime || (\n            <button\n              className=\"btn btn-primary btn-small\"\n              onClick={() => setScanOffIndex(index)}\n            >\n              Scan Off\n            </button>\n          )}\n        </div>\n        <button\n          className=\"btn btn-secondary btn-small\"\n          onClick={() => deleteValue(index)}\n        >\n          delete\n        </button>\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          {btScan}\n          {qrReader}\n        </div>\n        <div className=\"control-row\">\n          <div className=\"qrscan-record\">\n            <div>Name</div>\n            <div>Scan On</div>\n            <div>Scan Off</div>\n            <span></span>\n          </div>\n          {scanList}\n        </div>\n      </div>\n      <Modal\n        visibility={isModalVisible}\n        toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n        message={modalOptions.message}\n        css={{ backgroundColor: \"#000000\" }}\n        backdrop={\"rgba(0,0,0,0.3)\"}\n        callback={modalOptions.callback}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default QRScannerList;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from \"html-to-image\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\n\nimport {\n  selectDebugMode,\n  selectCurrentUserName,\n} from \"../../features/config/configSlice\";\n\nfunction Signature(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Signature = \"\" } = json;\n  const signatureDisplay = useRef(null);\n\n  const debugMode = useSelector(selectDebugMode);\n  const username = useSelector(selectCurrentUserName);\n\n  const [signatureText, setSignatureText] = useState();\n  const [selectedFont, setSelectedFont] = useState(\"\");\n  const [isSigning, setIsSigning] = useState(false);\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" },\n  ];\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage();\n  }, [selectedFont]);\n\n  function generateImage() {\n    htmlToImage\n      .toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\");\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        newJson.Signature = rawData;\n        // console.log('value: ', json)\n        props.updateJson(newJson);\n      })\n      .catch(function (error) {\n        console.error(\"oops, something went wrong!\", error);\n      });\n  }\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value);\n  }\n  function dropdownChangeHandler(pEvent) {\n    setSelectedFont(pEvent.target.value);\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning);\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => (\n    <option key={index} value={value.name}>\n      {value.label}\n    </option>\n  ));\n\n  const editSignature = isSigning ? (\n    <div className=\"control-row control-inline\">\n      <input\n        type=\"text\"\n        name=\"signatureText\"\n        id=\"signatureText\"\n        placeholder=\"Your Name\"\n        onChange={textChangeHandler}\n      />\n      <select\n        name=\"fontDropdown\"\n        id=\"fontDropdown\"\n        onChange={dropdownChangeHandler}\n      >\n        <option value=\"\">Choose a style</option>\n        {fontDropdownOptions}\n      </select>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const btnSign = !isSigning ? (\n    <div className=\"control-row\">\n      <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>\n        Sign\n      </button>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const signature = (\n    <img\n      src={`data:image/png;base64,${Signature}`}\n      id={Id}\n      alt=\"\"\n      width=\"400px\"\n    />\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {editSignature}\n        <div className=\"control-row\">\n          {btnSign}\n          <div className=\"signature-display\">{signature}</div>\n        </div>\n      </div>\n      <div id=\"signaturePad\"></div>\n      <div className=\"signature-container\">\n        <div\n          ref={signatureDisplay}\n          className={`signature-preview ${selectedFont}`}\n        >\n          {signatureText}\n          <div className=\"signature-user\">{username}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Signature;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from \"html-to-image\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\nimport { format } from \"date-fns\";\n\nimport {\n  selectDebugMode,\n  selectCurrentUserName,\n} from \"../../features/config/configSlice\";\n\nfunction SignatureDateTime(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    IsVisible = true,\n    Signature = \"\",\n    DateTimeValue,\n  } = json;\n  const signatureDisplay = useRef(null);\n\n  const debugMode = useSelector(selectDebugMode);\n  const username = useSelector(selectCurrentUserName);\n\n  const [signatureText, setSignatureText] = useState();\n  const [selectedFont, setSelectedFont] = useState(\"\");\n  const [isSigning, setIsSigning] = useState(false);\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" },\n  ];\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage();\n  }, [selectedFont]);\n\n  function generateImage() {\n    htmlToImage\n      .toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\");\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        newJson.Signature = rawData;\n        newJson.DateTimeValue = format(new Date(), \"yyyy-MM-dd hh:mm:ss\");\n        props.updateJson(newJson);\n      })\n      .catch(function (error) {\n        console.error(\"oops, something went wrong!\", error);\n      });\n  }\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value);\n  }\n  function dropdownChangeHandler(pEvent) {\n    setSelectedFont(pEvent.target.value);\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning);\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => (\n    <option key={index} value={value.name}>\n      {value.label}\n    </option>\n  ));\n\n  const editSignature = isSigning ? (\n    <div className=\"control-row control-inline\">\n      <input\n        type=\"text\"\n        name=\"signatureText\"\n        id=\"signatureText\"\n        placeholder=\"Your Name\"\n        onChange={textChangeHandler}\n      />\n      <select\n        name=\"fontDropdown\"\n        id=\"fontDropdown\"\n        onChange={dropdownChangeHandler}\n      >\n        <option value=\"\">Choose a style</option>\n        {fontDropdownOptions}\n      </select>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const btnSign = !isSigning ? (\n    <div className=\"control-row\">\n      <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>\n        Sign\n      </button>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const signature = (\n    <img src={`data:image/png;base64,${Signature}`} alt=\"\" width=\"400px\" />\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {editSignature}\n        <div className=\"control-row\">\n          {btnSign}\n          <div className=\"signature-display\">\n            {signature}\n            <div className=\"signature-timestamp\">{DateTimeValue}</div>\n          </div>\n        </div>\n      </div>\n      <div id=\"signaturePad\"></div>\n      <div className=\"signature-container\">\n        <div\n          ref={signatureDisplay}\n          className={`signature-preview ${selectedFont}`}\n        >\n          {signatureText}\n          <div className=\"signature-user\">{username}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default SignatureDateTime;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport * as htmlToImage from \"html-to-image\";\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from \"html-to-image\";\nimport { format } from \"date-fns\";\n\nimport {\n  selectDebugMode,\n  selectCurrentUserName,\n} from \"../../features/config/configSlice\";\n\nfunction SignatureDate(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Signature = \"\", DateValue } = json;\n  const signatureDisplay = useRef(null);\n\n  const debugMode = useSelector(selectDebugMode);\n  const username = useSelector(selectCurrentUserName);\n\n  const [signatureText, setSignatureText] = useState();\n  const [selectedFont, setSelectedFont] = useState(\"\");\n  const [isSigning, setIsSigning] = useState(false);\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" },\n  ];\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage();\n  }, [selectedFont]);\n\n  function generateImage() {\n    htmlToImage\n      .toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\");\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        newJson.Signature = rawData;\n        newJson.DateValue = format(new Date(), \"yyyy-MM-dd\");\n        props.updateJson(newJson);\n      })\n      .catch(function (error) {\n        console.error(\"--> Something went wrong!\", error);\n      });\n  }\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value);\n  }\n  function dropdownChangeHandler(pEvent) {\n    setSelectedFont(pEvent.target.value);\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning);\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => (\n    <option key={index} value={value.name}>\n      {value.label}\n    </option>\n  ));\n\n  const editSignature = isSigning ? (\n    <div className=\"control-row control-inline\">\n      <input\n        type=\"text\"\n        name=\"signatureText\"\n        id=\"signatureText\"\n        placeholder=\"Your Name\"\n        onChange={textChangeHandler}\n      />\n      <select\n        name=\"fontDropdown\"\n        id=\"fontDropdown\"\n        onChange={dropdownChangeHandler}\n      >\n        <option value=\"\">Choose a style</option>\n        {fontDropdownOptions}\n      </select>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const btnSign = !isSigning ? (\n    <div className=\"control-row\">\n      <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>\n        Sign\n      </button>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const signature = (\n    <img src={`data:image/png;base64,${Signature}`} alt=\"\" width=\"400px\" />\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {editSignature}\n        <div className=\"control-row\">\n          {btnSign}\n          <div className=\"signature-display\">\n            {signature}\n            <div className=\"signature-timestamp\">{DateValue}</div>\n          </div>\n        </div>\n      </div>\n      <div id=\"signaturePad\"></div>\n      <div className=\"signature-container\">\n        <div\n          ref={signatureDisplay}\n          className={`signature-preview ${selectedFont}`}\n        >\n          {signatureText}\n          <div className=\"signature-user\">{username}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default SignatureDate;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport {\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n} from \"../../components/controls/\";\n\nimport { getControlName } from \"../../app/utilities\";\n\n// import { selectDocumentStatus, setDocumentStatus } from '../../features/json/jsonSlice'\n// import { useDispatch } from 'react-redux'\n\nexport default function Matrix(props) {\n  const json = props.controlJson;\n  // console.log(`-> json`, json)\n\n  const { Type, Id, Title, Columns, Rows, Elements, IsVisible = true } = json;\n\n  console.log(`--->: Matrix -> Elements`, Elements);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  const components = {\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n  };\n\n  let matrixLayout = [];\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j];\n      // console.log(`--->: Matrix -> element`, element)\n      const componentName = getControlName(element.Type);\n      // console.log(`--->: Matrix -> componentName`, componentName)\n\n      const Component = components[componentName];\n      const controlComponent = (\n        <Component\n          key={`${componentName.substring(0, 4).toLowerCase()}-${\n            element.ElementId\n          }`}\n          controlJson={element}\n          updateJson={updateJsonHandler}\n        />\n      );\n\n      matrixLayout.push(\n        <div\n          key={`${i}-${j}`}\n          className=\"matrix-box\"\n          style={{\n            backgroundColor: i % 2 > 0 ? \"rgb(244, 244, 244)\" : \"\",\n            borderBottom: i % 2 > 0 ? \"1px solid #CCC\" : \"\",\n          }}\n        >\n          {controlComponent}\n        </div>\n      );\n    }\n  }\n\n  /**-------------------------------------------------**\n   * @desc - JSON                                  -----*\n   *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log(`--->: updateJsonHandler -> pJson`, pJson);\n    // console.log('updating... ', documentStatus)\n    // if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n\n    // const controlPath = getControlPathById(pJson.Id)\n    // // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    // let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // // ONLY FIST SUBLEVEL\n    // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    // dispatch(setJson(jsonToUpdate))\n  }\n\n  // let layout = Elements.map((item, index) => <div key={index}>boxCol</div>)\n\n  return IsVisible ? (\n    <div className=\"control-container control-container-matrix\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: `repeat(${Columns}, 1fr)`,\n              gridTemplateRows: `repeat(${Rows}, 1fr)`,\n            }}\n          >\n            {matrixLayout}\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nfunction Checkbox(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    ShowComment,\n    Collapsible,\n    IsCollapsed,\n    EntryTitle,\n    Details,\n    HasUnderLine,\n    IsVisible = true,\n    Value = \"\",\n    CommentValue = \"\",\n  } = json;\n  // console.log(`--->: Checkbox -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n\n    const checkboxValue = pEvent.target.checked === true ? \"Y\" : \"N\";\n    const valuesToExport = { Type, Id, Value: checkboxValue };\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = checkboxValue;\n    // console.log('value: ', newJson.Value, json)\n    props.updateJson(newJson);\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const commentText = pEvent.target.value;\n    const valuesToExport = { Id, CommentValue: commentText };\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.CommentValue = commentText;\n    props.updateJson(newJson);\n  }\n\n  useEffect(() => {\n    // console.log('Checkbox set data :', json)\n  }, [json]);\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  const comment = ShowComment ? (\n    <input\n      type=\"text\"\n      placeholder={EntryTitle}\n      value={CommentValue}\n      onChange={onCommentChangeHandler}\n    ></input>\n  ) : (\n    \"\"\n  );\n\n  const details = Collapsible ? (\n    <div className=\"control-details-container\">\n      <div className=\"control-details-toggle\" onClick={onToggleClickHandler}>\n        <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} />\n      </div>\n      <div\n        id=\"controlDetails\"\n        className={`${collapsed ? \"hidden\" : \"\"} control-details-details`}\n      >\n        {Details}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const entryTitle = EntryTitle ? (\n    <label htmlFor=\"checkbox\">{EntryTitle}</label>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className={`control ${HasUnderLine ? \"control-underline\" : \"\"}`}>\n        <h3>{Title}</h3>\n        {details}\n        <input\n          type=\"checkbox\"\n          defaultChecked={Value === \"Y\"}\n          onChange={onChangeHandler}\n        />\n        {entryTitle}\n        {comment}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Checkbox;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nfunction Boolean(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    ShowComment,\n    Collapsible,\n    IsCollapsed,\n    HasUnderLine,\n    EntryTitle,\n    Details,\n    IsVisible = true,\n    Value = \"\",\n    CommentValue = \"\",\n  } = json;\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    const booleanValue = pEvent.target.value;\n    const valuesToExport = { Type, Id, Value: booleanValue };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = booleanValue;\n    props.updateJson(newJson);\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    console.log(\"pEvent.target.value: \", pEvent.target.value);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.CommentValue = pEvent.target.value;\n    props.updateJson(newJson);\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  const comment = ShowComment ? (\n    <input\n      type=\"text\"\n      placeholder={EntryTitle}\n      value={CommentValue}\n      onChange={onCommentChangeHandler}\n    ></input>\n  ) : (\n    \"\"\n  );\n\n  const details = Collapsible ? (\n    <div className=\"control-details-container\">\n      <div className=\"control-details-toggle\" onClick={onToggleClickHandler}>\n        <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} />\n      </div>\n      <div\n        id=\"controlDetails\"\n        className={`${collapsed ? \"hidden\" : \"\"} control-details-details`}\n      >\n        {Details}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  const entryTitle = EntryTitle ? (\n    <label htmlFor=\"checkbox\">{EntryTitle}</label>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        {Title}\n        <div className=\"control-inline\">{details}</div>\n        <div\n          className={`control-inline ${\n            HasUnderLine ? \"control-underline\" : \"\"\n          }`}\n        >\n          <div className=\"control-checkbox\">\n            <label htmlFor=\"yes\">Yes</label>\n            <input\n              type=\"radio\"\n              id=\"yes\"\n              name={Id}\n              value=\"Y\"\n              checked={Value === \"Y\"}\n              onChange={onChangeHandler}\n            />\n          </div>\n          <div className=\"control-checkbox\">\n            <label htmlFor=\"no\">No</label>\n            <input\n              type=\"radio\"\n              id=\"no\"\n              name={Id}\n              value=\"N\"\n              checked={Value === \"N\"}\n              onChange={onChangeHandler}\n            />\n          </div>\n        </div>\n        <div className=\"control-inline\">{entryTitle}</div>\n        <div className=\"control-inline\">{comment}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Boolean;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleUp, faAngleDown } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nfunction Trilean(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    ShowComment,\n    HideNa,\n    IsVisible = true,\n    Collapsible,\n    IsCollapsed,\n    EntryTitle,\n    Details,\n    Value = \"\",\n    CommentValue = \"\",\n  } = json;\n  // console.log(`--->: Trilean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    const trileanValue = pEvent.target.value;\n    const valuesToExport = { Type, Id, Value: trileanValue, CommentValue };\n    addToDocumentExport(valuesToExport);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = trileanValue;\n    props.updateJson(newJson);\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.CommentValue = pEvent.target.value;\n    props.updateJson(newJson);\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  useEffect(() => {\n    // console.log('Trilean set data :', json)\n  }, [json]);\n\n  const comment = ShowComment ? (\n    <input\n      type=\"text\"\n      placeholder={EntryTitle}\n      value={CommentValue}\n      onChange={onCommentChangeHandler}\n    ></input>\n  ) : (\n    \"\"\n  );\n\n  const details = Collapsible ? (\n    <div className=\"control-details-container\">\n      <div className=\"control-details-toggle\" onClick={onToggleClickHandler}>\n        <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} />\n      </div>\n      <div\n        id=\"controlDetails\"\n        className={`${collapsed ? \"hidden\" : \"\"} control-details-details`}\n      >\n        {Details}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        {Title}\n        <div className=\"control-row\">{details}</div>\n        <div className=\"control-row\">\n          <div className=\"control-inline\">\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input\n                type=\"radio\"\n                id=\"yes\"\n                name={Id}\n                value=\"Y\"\n                checked={Value === \"Y\"}\n                onChange={onChangeHandler}\n              />\n            </div>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"no\">No</label>\n              <input\n                type=\"radio\"\n                id=\"no\"\n                name={Id}\n                value=\"N\"\n                checked={Value === \"N\"}\n                onChange={onChangeHandler}\n              />\n            </div>\n            <div className={`${HideNa ? \"hidden\" : \"\"} control-checkbox`}>\n              <label htmlFor=\"na\">N/A</label>\n              <input\n                type=\"radio\"\n                id=\"na\"\n                name={Id}\n                value=\"NA\"\n                checked={Value === \"NA\"}\n                onChange={onChangeHandler}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"control-row\">{comment}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Trilean;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction TrileanLabel(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    IsVisible = true,\n    Buttons,\n    CommentValue,\n    HasUnderLine,\n    ShowComment,\n    HideNa,\n    Value,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function onChangeHandler(pEvent) {\n    // console.log('---> radio click: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = pEvent.target.value;\n    props.updateJson(newJson);\n  }\n\n  const buttons =\n    Buttons !== undefined\n      ? Buttons.map((button, index) => {\n          const computedBackground =\n            Value === button.Button\n              ? button.BackgroundColorSelected\n              : button.BackgroundColor;\n          if (!(HideNa && button.Button === \"NA\"))\n            return (\n              <React.Fragment key={`${Id}${index}`}>\n                <input\n                  type=\"radio\"\n                  name={Id}\n                  id={`${Id}${button.Label}`}\n                  value={button.Button}\n                  className=\"radiocheck-hidden\"\n                  onChange={onChangeHandler}\n                />\n                <label\n                  htmlFor={`${Id}${button.Label}`}\n                  className=\"radiocheck-button\"\n                  style={{ backgroundColor: computedBackground }}\n                >\n                  {button.Label}\n                </label>\n              </React.Fragment>\n            );\n        })\n      : \"\";\n\n  const comment = ShowComment ? (\n    <div className=\"control-row\">{CommentValue}</div>\n  ) : (\n    \"\"\n  );\n  const underline = HasUnderLine ? <hr /> : \"\";\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        {comment}\n        <div className=\"control-row control-inline\">\n          {buttons}\n          {underline}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default TrileanLabel;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectOpenListId,\n  setOpenListId,\n  selectDebugMode,\n} from \"../../features/config/configSlice\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleUp,\n  faAngleDown,\n  faTimes,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useSpring, animated, useTrail, config } from \"react-spring\";\n\nfunction ListSingle(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, Value = \"\", IsVisible = true } = json;\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n  const [filteredList, setFilteredList] = useState([]);\n  const [selectedValues, setSelectedValues] = useState(\n    Value.constructor === String ? [Value] : Value\n  );\n\n  const openListId = useSelector(selectOpenListId);\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 });\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: {\n      opacity: 0,\n      marginLeft: -12,\n      marginTop: -6,\n      transform: \"scaleX(0.6) scaleY(0.8)\",\n    },\n    to: {\n      opacity: 1,\n      marginLeft: 0,\n      marginTop: 0,\n      transform: \"scaleX(1) scaleY(1)\",\n    },\n    // config: { duration: 1250 },\n    config: config.stiff,\n  });\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id));\n  }, [collapsed, Id, dispatch]);\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true);\n  }, [openListId, Id]);\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(\n      Data.filter((item) => item.toLowerCase().includes(keyword.toLowerCase()))\n    );\n  }, [Data, keyword]);\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target;\n    if (\n      target.className === \"input-select\" ||\n      target.className === \"input-select-items\"\n    )\n      setCollapsed(!collapsed);\n    else if (target.className === \"remove-item\") {\n      const targetText = target.parentNode.innerText;\n      if (targetText !== \"\") {\n        updateJSON(\"\");\n        setSelectedValues(selectedValues.filter((item) => item !== targetText));\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    if (selectedValues[0] !== pEvent.target.id)\n      setSelectedValues([pEvent.target.id]);\n    else setSelectedValues([]);\n    updateJSON(pEvent.target.id);\n  }\n  function updateJSON(pValue) {\n    let valuesToExport = { Type, Id, Value: pValue };\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (newJson.Value === pValue) {\n      newJson.Value = \"\";\n      valuesToExport.Value = \"\";\n      addToDocumentExport(valuesToExport);\n    } else {\n      newJson.Value = pValue;\n      setCollapsed(true);\n      addToDocumentExport(valuesToExport);\n    }\n    props.updateJson(newJson);\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed\n    ? \"\"\n    : filteredList.map((item, key) => {\n        const isSelected =\n          selectedValues.findIndex((value) => item === value) > -1;\n        const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : \"\";\n        return (\n          <div\n            key={key}\n            id={item}\n            className={`input-list-item ${\n              isSelected ? \"selected-list-item\" : \"\"\n            }`}\n            onClick={listItemClickHandler}\n          >\n            {iconCheck}\n            {item}\n          </div>\n        );\n      });\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index];\n    if (item !== \"\")\n      return (\n        <animated.div className=\"input-select-item\" style={props} key={index}>\n          {item}\n          <button id={item} className=\"remove-item\"></button>\n        </animated.div>\n      );\n    return \"\";\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">{selectedPills}</div>\n          <FontAwesomeIcon\n            icon={collapsed ? faAngleDown : faAngleUp}\n            onClick={listIconClickHandler}\n          />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"input-list-search\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n            ></input>\n            <FontAwesomeIcon icon={faTimes} onClick={(e) => setKeyword(\"\")} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\nexport default ListSingle;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectOpenListId,\n  setOpenListId,\n  selectDebugMode,\n} from \"../../features/config/configSlice\";\n\nimport { addToDocumentExport } from \"../../app/utilities\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faAngleUp,\n  faAngleDown,\n  faTimes,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { useSpring, animated, useTrail, config } from \"react-spring\";\n\nfunction ListMultiple(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, Data, SelectedValue = [], IsVisible = true } = json;\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const [collapsed, setCollapsed] = useState(true);\n  const [keyword, setKeyword] = useState(\"\");\n  const [filteredList, setFilteredList] = useState([]);\n  const [selectedValues, setSelectedValues] = useState(SelectedValue || []);\n\n  const openListId = useSelector(selectOpenListId);\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 });\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: {\n      opacity: 0,\n      marginLeft: -12,\n      marginTop: -6,\n      transform: \"scaleX(0.6) scaleY(0.8)\",\n    },\n    to: {\n      opacity: 1,\n      marginLeft: 0,\n      marginTop: 0,\n      transform: \"scaleX(1) scaleY(1)\",\n    },\n    // config: { duration: 1250 },\n    config: { mass: 1, tension: 500, friction: 26 },\n  });\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id));\n  }, [collapsed, Id, dispatch]);\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true);\n  }, [openListId, Id]);\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(\n      Data.filter((item) => item.toLowerCase().includes(keyword.toLowerCase()))\n    );\n  }, [Data, keyword]);\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target;\n    if (\n      target.className === \"input-select\" ||\n      target.className === \"input-select-items\"\n    )\n      setCollapsed(!collapsed);\n    else if (target.className === \"remove-item\") {\n      const targetText = target.parentNode.innerText;\n      if (targetText !== \"\") {\n        const newValues = selectedValues.filter((item) => item !== targetText);\n        setSelectedValues(newValues);\n        updateJSON(newValues);\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed);\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id;\n\n    const newValues =\n      selectedValues.findIndex((item) => item === currentItem) < 0\n        ? [...selectedValues, currentItem]\n        : selectedValues.filter((item) => item !== currentItem);\n    setSelectedValues(newValues);\n    updateJSON(newValues);\n  }\n\n  function updateJSON(pValue) {\n    let valuesToExport = { Type, Id, Value: pValue };\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (newJson.Value === pValue) {\n      newJson.Value = \"\";\n      valuesToExport.Value = \"\";\n      addToDocumentExport(valuesToExport);\n    } else {\n      newJson.Value = pValue;\n      setCollapsed(true);\n      addToDocumentExport(valuesToExport);\n    }\n    props.updateJson(newJson);\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed\n    ? \"\"\n    : filteredList.map((item, key) => {\n        const isSelected =\n          selectedValues.findIndex((value) => item === value) > -1;\n        const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : \"\";\n        return (\n          <div\n            key={key}\n            id={item}\n            className={`input-list-item ${\n              isSelected ? \"selected-list-item\" : \"\"\n            }`}\n            onClick={listItemClickHandler}\n          >\n            {iconCheck}\n            {item}\n          </div>\n        );\n      });\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index];\n    if (item !== \"\")\n      return (\n        <animated.div className=\"input-select-item\" style={props} key={index}>\n          {item}\n          <button id={item} className=\"remove-item\"></button>\n        </animated.div>\n      );\n    return \"\";\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">{selectedPills}</div>\n          <FontAwesomeIcon\n            icon={collapsed ? faAngleDown : faAngleUp}\n            onClick={listIconClickHandler}\n          />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"input-list-search\"\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value)}\n            ></input>\n            <FontAwesomeIcon icon={faTimes} onClick={(e) => setKeyword(\"\")} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ListMultiple;\n","import React, { useState } from 'react'\n\nimport { format, addHours } from 'date-fns'\n\nimport { getDateObjFromTime } from '../app/utilities'\n\nimport styles from './TimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function TimeInput(props) {\n\n  // console.log(`--->: TimeInput -> timeValue received: `, props.timeValue, getDateObjFromTime(props.timeValue))\n\n  const timeformatConverted = props.format.replace('tt', 'a')\n  const [timeValue, setTimeValue] = useState(props.timeValue)\n\n  function onClearHandler(pEvent) {\n    setTimeValue('')\n    props.onTimeChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setTimeValue(pValue)\n    props.onTimeChange(pValue)\n  }\n\n  const timeString = timeValue !== '' ? format(addHours(getDateObjFromTime(timeValue), props.modifiers.AddHour), timeformatConverted)\n    :\n    ''\n\n  return (\n    <div className={styles.timeContainer}>\n      <input\n        type=\"time\"\n        name=\"\"\n        id=\"\"\n        className={styles.timePicker}\n        value={timeValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {timeString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport TimeInput from \"../../components/TimeInput\";\n\nfunction Time(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    FormatDateTime = \"hh:mm tt\",\n    IsBlank = false,\n    IsVisible = true,\n    AddHour = 0,\n    TimeValue,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const defaultTime =\n    TimeValue === \"\" || TimeValue === undefined\n      ? `${\n          new Date().getHours() < 10\n            ? \"0\" + new Date().getHours()\n            : new Date().getHours()\n        }:${\n          new Date().getMinutes() < 10\n            ? \"0\" + new Date().getMinutes()\n            : new Date().getMinutes()\n        }`\n      : TimeValue;\n  // console.log(`TimeValue: ${TimeValue} , defaultTime: ${defaultTime}`)\n\n  const [timeValue, setTimeValue] = useState(!IsBlank ? defaultTime : \"\");\n\n  function onTimeChangeHandler(pTime) {\n    console.log(`--->: onTimeChangeHandler -> pTime`, pTime);\n    setTimeValue(pTime);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (pTime !== \"\") newJson.TimeValue = pTime;\n    else delete newJson.TimeValue;\n    newJson.IsBlank = pTime !== \"\" ? false : true;\n    props.updateJson(newJson);\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <TimeInput\n          format={FormatDateTime}\n          timeValue={timeValue}\n          modifiers={{ AddHour }}\n          onTimeChange={(value) => onTimeChangeHandler(value)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Time;\n","import React, { useState } from 'react'\n\nimport { format } from 'date-fns'\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateTimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function DateTimeInput(props) {\n\n  const dateFormatConverted = props.format.replace(/ddd/g, 'eee').replace('tt', 'a')\n  // console.log(`--->: DateTimeInput -> dateFormatConverted`, dateFormatConverted)\n\n  const dateTimeValue = props.dateTimeValue\n  // console.log(`--->: DateTimeInput -> dateTimeValue: `, dateTimeValue)\n\n  let dateValue = (dateTimeValue !== '') ? `${format(new Date(dateTimeValue), 'yyyy-MM-dd')}` : format(new Date(), 'yyyy-MM-dd')\n  let timeValue = (dateTimeValue !== '') ? `${new Date(dateTimeValue).toLocaleTimeString()}` : new Date().toLocaleTimeString()\n\n  function onDateChangeHandler(pEvent) {\n    // console.log('onDateChangeHandler pEvent.target.value: ', pEvent.target.value, timeValue)\n    dateValue = pEvent.target.value\n    props.onDateTimeChange(pEvent.target.value + ' ' + timeValue)\n  }\n  function onTimeChangeHandler(pEvent) {\n    // console.log('onTimeChangeHandler pEvent.target.value', dateValue, pEvent.target.value)\n    timeValue = pEvent.target.value\n    props.onDateTimeChange(dateValue + ' ' + pEvent.target.value)\n  }\n\n  function onClearHandler() {\n    dateValue = ''\n    timeValue = ''\n    props.onDateTimeChange('')\n  }\n\n  const dateTimeStringValue = (dateTimeValue !== '') ? format(new Date(dateTimeValue), dateFormatConverted) : ''\n\n  return (\n    <div className={styles.dateTimeContainer}>\n      <div>\n        <input type=\"date\" className={styles.datePicker} name=\"\" id=\"\" onChange={onDateChangeHandler} />\n        <input type=\"time\" className={styles.timePicker} name=\"\" id=\"\" onChange={onTimeChangeHandler} />\n      </div>\n      {dateTimeStringValue}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nimport DateTimeInput from \"../../components/DateTimeInput\";\n\nimport { getCurrentDate, getDateObjFromDateString } from \"../../app/utilities\";\n\nfunction DateTime(props) {\n  const json = props.controlJson;\n  const {\n    Type,\n    Title,\n    Id,\n    FormatDateTime = \"yyyy-MM-dd hh:mm tt\",\n    IsBlank = false,\n    IsVisible = true,\n    DateTimeValue,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const defaultDateTime =\n    DateTimeValue === \"\" || DateTimeValue === undefined\n      ? `${\n          getCurrentDate().toDateString() +\n          \" \" +\n          getCurrentDate().toLocaleTimeString()\n        }`\n      : DateTimeValue;\n\n  const [dateTimeValue, setDateTimeValue] = useState(\n    !IsBlank ? defaultDateTime : \"\"\n  );\n  // const dateTimeValue = (typeof DateTimeValue === 'string' && DateTimeValue !== '') ? getDateObjFromDateString(DateTimeValue) : DateTimeValue\n  // console.log(`--->: DateTime -> dateTimeValue: `, dateTimeValue)\n\n  function onDateTimeChangeHandler(pDateTime) {\n    // console.log('---> onDateTimeChangeHandler: ', pDateTime)\n\n    setDateTimeValue(pDateTime);\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    if (pDateTime !== \"\") newJson.DateTimeValue = pDateTime;\n    else delete newJson.DateTimeValue;\n    newJson.IsBlank = pDateTime !== \"\" ? false : true;\n    props.updateJson(newJson);\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <DateTimeInput\n          format={FormatDateTime}\n          dateTimeValue={dateTimeValue}\n          onDateTimeChange={(value) => onDateTimeChangeHandler(value)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default DateTime;\n","import React from 'react'\n\nfunction TimeLabel() {\n  return (\n    <div>\n      TimeLabel\n    </div>\n  )\n}\n\nexport default TimeLabel\n","import React from 'react'\n\nfunction DateLabel() {\n  return (\n    <div>\n      DateLabel\n    </div>\n  )\n}\n\nexport default DateLabel\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonAddSignature(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickAddSignatureHandler() {\n    dispatch(setCurrentAction(\"add-signature\"));\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button\n          className=\"btn btn-secondary\"\n          onClick={clickAddSignatureHandler}\n        >\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonAddSignature;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Modal from \"../Modal\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n  selectCurrentAction,\n} from \"../../features/config/configSlice\";\n\nimport { format } from \"date-fns\";\n\nfunction RegisterSignatures(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true, Value = [] } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const currentAction = useSelector(selectCurrentAction);\n  const dispatch = useDispatch();\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [modalOptions, setModalOptions] = useState({ message: \"\" });\n\n  useEffect(() => {\n    // console.log('---> currentAction: ', currentAction)\n    if (currentAction === \"add-signature\") {\n      // CHECK IF SIGNATURE IS EMPTY\n      const registerValues = JSON.parse(Value);\n      registerValues.push({\n        Id: registerValues.length + 1,\n        Name: document.getElementById(\"SignatureSignOnOffName\").value,\n        SignOnDateTime: format(new Date(), \"yyyy-MM-dd hh:mm:ss\"),\n        Signature: document\n          .getElementById(\"SignatureSignOnOffSignature\")\n          .src.replace(\"data:image/png;base64,\", \"\"),\n      });\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = JSON.stringify(registerValues);\n      props.updateJson(newJson);\n\n      // Need to be cleared in the JSON\n      // document.getElementById('SignatureSignOnOffName').value = ''\n      document.getElementById(\"signatureText\").value = \"\";\n      document.getElementById(\"SignatureSignOnOffSignature\").src = \"\";\n      dispatch(setCurrentAction(\"\"));\n    }\n  }, [currentAction]);\n\n  function signOffClickHandler(pId) {\n    setModalOptions({\n      message: \"Are you sure you want to sign off?\",\n      bgColor: \"#000000\",\n      callback: () => {\n        const registerValues = JSON.parse(Value);\n        const signatureIndex = registerValues.findIndex(\n          (element) => element.Id === pId\n        );\n\n        registerValues[signatureIndex].SignOffDateTime = format(\n          new Date(),\n          \"yyyy-MM-dd hh:mm:ss\"\n        );\n        // console.log('---> SIGNING OFF: ', registerValues)\n\n        const newJson = JSON.parse(JSON.stringify(json));\n        // console.log(`--->: signOffClickHandler -> newJson`, newJson)\n        newJson.Value = JSON.stringify(registerValues);\n        props.updateJson(newJson);\n\n        setIsModalVisible(false);\n      },\n    });\n    setIsModalVisible(true);\n  }\n\n  const registerList = Value.reverse().map((item, index) => {\n    return (\n      <div key={index} className=\"register-signature-row\">\n        <img\n          src={`data:image/png;base64,${item.Signature}`}\n          alt=\"\"\n          width=\"250px\"\n        />\n        <div>\n          <p>{item.Name}</p>\n          <p>Sign On: {item.SignOnDateTime}</p>\n          <p>\n            Sign Off:{\" \"}\n            {item.SignOffDateTime || (\n              <button\n                className=\"btn btn-primary btn-small\"\n                onClick={() => signOffClickHandler(item.Id)}\n              >\n                Sign\n              </button>\n            )}\n          </p>\n        </div>\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">{registerList}</div>\n      <Modal\n        visibility={isModalVisible}\n        toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n        message={modalOptions.message}\n        css={{ backgroundColor: \"#000000\" }}\n        backdrop={\"rgba(0,0,0,0.3)\"}\n        callback={modalOptions.callback}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default RegisterSignatures;\n","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './SelectSearchable.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction useVisible(initialIsVisible) {\n  const [isVisible, setIsVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  }, [])\n  return { ref, isVisible, setIsVisible }\n}\n\n\nexport default function SelectSearchable(props) {\n\n  const [keyword, setKeyword] = useState('')\n  const input = useRef(null)\n\n  const items = props.items\n  const allowMultiple = props.allowMultiple\n  const width = props.width\n\n\n  const filteredList = keyword.length > 0 ? items.filter(item => String(item.label).toLowerCase().includes(keyword.toLowerCase())) : items\n\n  const { ref, isVisible, setIsVisible } = useVisible(false, input)\n\n  function onClickItemHandler(pEvent, pItem) {\n    pEvent.stopPropagation()\n    // console.log(`--->: onClickItemHandler -> pEvent.target.className: `, pEvent.currentTarget.className)\n    // console.log('---> delete here: ', pEvent.currentTarget.className.includes('delete'))\n\n    if (pEvent.currentTarget.className.includes('delete')) {\n      props.onSelectItem(props.selectedItems.filter(item => item.Id !== pItem.Id))\n      return\n    }\n\n    if (allowMultiple) {\n      const clickedItemIndex = props.selectedItems.findIndex(item => item === pItem)\n\n      if (clickedItemIndex > -1) {\n        props.onSelectItem(props.selectedItems.filter(item => item !== pItem))\n      }\n      else props.onSelectItem([...props.selectedItems, pItem])\n    }\n    else {\n      props.onSelectItem([pItem])\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    if (input.current) input.current.focus()\n  }, [isVisible])\n\n  const cssWidth = width === \"s\" ? styles.ListSmall : width === \"m\" ? styles.ListMedium : styles.ListLarge\n\n  return (\n    <div className={styles.selectSearchable_Container}>\n      <div className={styles.selectSearchable_Header} onClick={e => setIsVisible(!isVisible)}>\n        <div className={styles.selectSearchable_SelectedContainer}>\n          {props.selectedItems.map((item, index) => <div key={index} className={styles.selectSearchable_SelectedItem}>\n            {item.label}\n            <span className={styles.selectedItem_delete} onClick={(e) => onClickItemHandler(e, item)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>)}\n        </div>\n        <div className={styles.selectSearchable_Trigger}>\n          <FontAwesomeIcon icon={isVisible ? faAngleDown : faAngleUp} />\n        </div>\n      </div>\n      {isVisible && <div style={{ position: 'absolute' }} className={`${styles.selectSearchable_List} ${cssWidth}`} ref={ref}>\n        <div className={styles.selectSearchable_SearchContainer}>\n          <input type=\"text\" value={keyword} onChange={e => setKeyword(e.target.value)} ref={input}></input>\n          <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n        </div>\n        <div className={styles.selectSearchable_ItemsContainer}>\n          {filteredList.map((item, index) => <span key={index} className={`${styles.selectItem} ${props.selectedItems.findIndex(selectedItem => item.label === selectedItem.label) > -1 ? styles.selectSearchable_SelectedItem_Selected : ''}`} onClick={(e) => onClickItemHandler(e, item)}>{item.label}</span>)}\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport SelectSearchable from \"./../SelectSearchable\";\n\nimport {\n  selectDebugMode,\n  selectCurrentToken,\n  setCurrentContact,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction SearchableListEntryDialogSMS(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  const [contactList, setContactList] = useState([]);\n  const [contactDropdownList, setContactDropdownList] = useState([]);\n  const [selectedContact, setSelectedContact] = useState([]);\n\n  const environment = \"https://api-uat.extrack.com/V1.0/\";\n  const projectID = 1810;\n\n  const apiUrl = `${environment}Project/${projectID}/Directory/Contacts`;\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n  const token = useSelector(selectCurrentToken);\n\n  const apiHeaders = new Headers();\n  apiHeaders.append(\"Authorization\", `Bearer ${token}`);\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: apiHeaders,\n    redirect: \"follow\",\n  };\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setContactList(result);\n        setContactDropdownList(\n          result.map((item) => {\n            return {\n              Id: item.Id,\n              label: `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}`,\n            };\n          })\n        );\n      });\n  }, []);\n\n  const addContact = (pItem) => {\n    const contactIndex = contactList.findIndex(\n      (contact) => contact.Id === pItem[0].Id\n    );\n    const contactDetails = contactList[contactIndex];\n\n    dispatch(\n      setCurrentContact({\n        name: `${contactDetails.Contact.NameFirst} ${contactDetails.Contact.NameLast}`,\n        phoneNumber: contactDetails.Contact.Number,\n        companyName: contactDetails.Company.Name,\n      })\n    );\n    dispatch(setCurrentAction(\"add-contact\"));\n    setSelectedContact(pItem);\n  };\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n\n        <SelectSearchable\n          items={contactDropdownList}\n          selectedItems={[]}\n          allowMultiple={false}\n          onSelectItem={(item) => addContact(item)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableListEntryDialogSMS;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonAddSMS(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickAddContactHandler(pEvent) {\n    dispatch(setCurrentAction(\"add-contact\"));\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickAddContactHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonAddSMS;\n","import React, { useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setDocumentStatus,\n  setCurrentContact,\n  selectCurrentContact,\n  setCurrentAction,\n  selectCurrentAction,\n} from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedo, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SearchableSMSListView(props) {\n  const json = props.controlJson;\n  const { Type, Title, Title2, Id, Api, Value = [], IsVisible = true } = json;\n  // console.log(`--->: Text -> json:`, json)\n\n  const currentAction = useSelector(selectCurrentAction);\n  const currentContact = useSelector(selectCurrentContact);\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  useEffect(() => {\n    if (currentAction === \"add-contact\") {\n      console.log(\"---> currentAction: \", currentAction);\n      console.log(\"---> currentContact: \", currentContact);\n\n      const registerValues = JSON.parse(Value);\n      registerValues.push({\n        Name: currentContact.name,\n        Number: currentContact.phoneNumber,\n        CompanyName: currentContact.companyName,\n      });\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = JSON.stringify(registerValues);\n      props.updateJson(newJson);\n\n      dispatch(setCurrentAction(\"reset-currentContact\"));\n      dispatch(setCurrentContact(\"\"));\n    }\n  }, [currentAction]);\n\n  function deleteContact(pContactIndex) {\n    const registerValues = JSON.parse(Value).filter(\n      (item, index) => index !== pContactIndex\n    );\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = JSON.stringify(registerValues);\n    props.updateJson(newJson);\n  }\n\n  const contactList = Value.map((contact, index) => {\n    return (\n      <div key={index} className=\"listview-record\">\n        <div>{contact.Name}</div>\n        <div>{contact.CompanyName}</div>\n        <div>{contact.Number}</div>\n        <button\n          className=\"btn btn-secondary btn-small btn-icon\"\n          onClick={() => deleteContact(index)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n          delete\n        </button>\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        {/* <h3>{Title}</h3> */}\n        <div className=\"control-row\">{contactList}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableSMSListView;\n","import React, { useState, useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport SelectSearchable from \"./../SelectSearchable\";\n\nimport {\n  selectDebugMode,\n  selectCurrentToken,\n  setCurrentContact,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction SearchableListEntryDialogEmail(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n  const dispatch = useDispatch();\n\n  const [contactList, setContactList] = useState([]);\n  const [contactDropdownList, setContactDropdownList] = useState([]);\n  const [selectedContact, setSelectedContact] = useState([]);\n\n  const environment = \"https://api-uat.extrack.com/V1.0/\";\n  const projectID = 1810;\n\n  const apiUrl = `${environment}Project/${projectID}/Directory/Contacts`;\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n  const token = useSelector(selectCurrentToken);\n\n  const apiHeaders = new Headers();\n  apiHeaders.append(\"Authorization\", `Bearer ${token}`);\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n  const requestOptions = {\n    method: \"GET\",\n    headers: apiHeaders,\n    redirect: \"follow\",\n  };\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then((response) => response.json())\n      .then((result) => {\n        setContactList(result);\n        setContactDropdownList(\n          result.map((item) => {\n            return {\n              Id: item.Id,\n              label: `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${\n                item.Contact.Email || \"\"\n              } | ${item.Company.Name}`,\n            };\n          })\n        );\n      });\n  }, []);\n\n  const addContact = (pItem) => {\n    const contactIndex = contactList.findIndex(\n      (contact) => contact.Id === pItem[0].Id\n    );\n    const contactDetails = contactList[contactIndex];\n\n    dispatch(\n      setCurrentContact({\n        name: `${contactDetails.Contact.NameFirst} ${contactDetails.Contact.NameLast}`,\n        email: contactDetails.Contact.Email,\n        companyName: contactDetails.Company.Name,\n      })\n    );\n    dispatch(setCurrentAction(\"add-contact\"));\n    setSelectedContact(pItem);\n  };\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          id=\"\"\n          cols=\"50\"\n          rows=\"6\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n\n        <SelectSearchable\n          items={contactDropdownList}\n          selectedItems={[]}\n          allowMultiple={false}\n          onSelectItem={(item) => addContact(item)}\n        />\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableListEntryDialogEmail;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonAddEmail(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickAddContactHandler(pEvent) {\n    dispatch(setCurrentAction(\"add-contact\"));\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickAddContactHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonAddEmail;\n","import React, { useEffect } from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setDocumentStatus,\n  setCurrentContact,\n  selectCurrentContact,\n  setCurrentAction,\n  selectCurrentAction,\n} from \"../../features/config/configSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faRedo, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction SearchableEmailListView(props) {\n  const json = props.controlJson;\n  const { Type, Title, Title2, Id, Api, Value = [], IsVisible = true } = json;\n  console.log(`--->: SearchableEmailListView -> json: `, json);\n\n  const currentAction = useSelector(selectCurrentAction);\n  const currentContact = useSelector(selectCurrentContact);\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  useEffect(() => {\n    if (currentAction === \"add-contact\") {\n      console.log(\"---> currentAction: \", currentAction);\n      console.log(\"---> currentContact: \", currentContact);\n\n      const registerValues = JSON.parse(Value);\n      registerValues.push({\n        Name: currentContact.name,\n        Email: currentContact.email,\n        CompanyName: currentContact.companyName,\n      });\n      const newJson = JSON.parse(JSON.stringify(json));\n      newJson.Value = JSON.stringify(registerValues);\n      props.updateJson(newJson);\n\n      dispatch(setCurrentAction(\"reset-currentContact\"));\n      dispatch(setCurrentContact(\"\"));\n    }\n  }, [currentAction]);\n\n  function deleteContact(pContactIndex) {\n    const registerValues = JSON.parse(Value).filter(\n      (item, index) => index !== pContactIndex\n    );\n\n    const newJson = JSON.parse(JSON.stringify(json));\n    newJson.Value = JSON.stringify(registerValues);\n    props.updateJson(newJson);\n  }\n\n  const contactList = Value.map((contact, index) => {\n    return (\n      <div key={index} className=\"listview-record\">\n        <div>{contact.Name}</div>\n        <div>{contact.CompanyName}</div>\n        <div>{contact.Email}</div>\n        <button\n          className=\"btn btn-secondary btn-small btn-icon\"\n          onClick={() => deleteContact(index)}\n        >\n          <FontAwesomeIcon icon={faTrash} />\n          delete\n        </button>\n      </div>\n    );\n  });\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        {/* <h3>{Title}</h3> */}\n        <div className=\"control-row\">{contactList}</div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default SearchableEmailListView;\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nexport default function MatrixButton(props) {\n  const json = props.controlJson;\n  // console.log(`-> json`, json)\n\n  const {\n    Id,\n    Title,\n    Type,\n    IsVisible = true,\n    Selection,\n    XAxisName,\n    YAxisName,\n    Legend,\n    Columns,\n    Rows,\n    Elements,\n  } = json;\n\n  const debugMode = useSelector(selectDebugMode);\n\n  const showLegend = Legend.ShowLegend;\n\n  const [selectedButton, setSelectedButton] = useState([]);\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  function buttonClickHandler(pButtonId) {\n    const buttonPath = pButtonId.split(\"-\");\n    // console.log('---> ', buttonPath)\n    // console.log('---> Selection is: ', Selection)\n\n    const newJson = JSON.parse(JSON.stringify(json));\n\n    if (Selection === \"single\") {\n      for (let i = 0; i < newJson.Elements.length; i++) {\n        for (let j = 0; j < newJson.Elements[i].Elements.length; j++) {\n          if (newJson.Elements[i].Elements[j].Value)\n            newJson.Elements[i].Elements[j].Value = false;\n        }\n      }\n    }\n    const buttonValue =\n      Elements[buttonPath[0]].Elements[buttonPath[1]].Value !== undefined\n        ? Elements[buttonPath[0]].Elements[buttonPath[1]].Value\n        : false;\n\n    newJson.Elements[buttonPath[0]].Elements[\n      buttonPath[1]\n    ].Value = !buttonValue;\n    props.updateJson(newJson);\n  }\n\n  let matrixLayout = [];\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j];\n      const id = `${i}-${j}`;\n      const title = `${Legend.LegendValuesY.Name}: ${Legend.LegendValuesY.Values[i]}\\n${Legend.LegendValuesX.Name}: ${Legend.LegendValuesX.Values[j]}`;\n\n      matrixLayout.push(\n        <div\n          key={id}\n          id={id}\n          title={title}\n          className=\"matrix-box matrix-button\"\n          style={{\n            backgroundColor: element.Value\n              ? element.BackgroundColorSelected\n              : element.BackgroundColor,\n          }}\n          onClick={() => buttonClickHandler(id)}\n        >\n          {element.Title}\n        </div>\n      );\n    }\n  }\n\n  const legendValuesX = Legend.LegendValuesX.Values.map((item, index) => (\n    <li key={index}>{item}</li>\n  ));\n  const legendValuesY = Legend.LegendValuesY.Values.map((item, index) => (\n    <li key={index}>{item}</li>\n  ));\n\n  const legend = showLegend ? (\n    <div className=\"matrix-legend\">\n      <div>\n        <h5>{Legend.LegendValuesY.Name}:</h5>\n        {legendValuesY}\n      </div>\n      <div>\n        <h5>{Legend.LegendValuesX.Name}:</h5>\n        {legendValuesX}\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"control-row\">\n          <div className=\"matrix-container\">\n            <h4 className=\"matrix-yaxis\">{YAxisName}</h4>\n            <div\n              style={{\n                display: \"grid\",\n                gridTemplateColumns: `repeat(${Columns}, 1fr)`,\n                gridTemplateRows: `repeat(${Rows}, 1fr)`,\n              }}\n            >\n              {matrixLayout}\n            </div>\n            <h4 className=\"matrix-xaxis\">{XAxisName}</h4>\n          </div>\n          <div className=\"matrix-footer\">{legend}</div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  selectCurrentTemplate,\n  selectCurrentDocument,\n} from \"../../features/config/configSlice\";\n\nfunction DocumentSummaryGrid(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  console.log(\"DocumentSummaryGrid -> json\", json);\n\n  const debugMode = useSelector(selectDebugMode);\n\n  // const currentProjectId = useSelector(selectCurrentProjectId);\n  const currentTemplate = useSelector(selectCurrentTemplate);\n  const currentDocument = useSelector(selectCurrentDocument);\n\n  // const [documentDetail, setDocumentDetail] = useState(\n  //   JSON.stringify(currentDocumentDetails)\n  // );\n\n  // const apiURL = \"https://api-uat.extrack.com/\";\n  // const token = JSON.parse(localStorage.getItem(\"dynFormToken\"));\n\n  // const detailsHeaders = new Headers();\n  // detailsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`);\n\n  // const requestOptions = {\n  //   method: \"POST\",\n  //   headers: detailsHeaders,\n  // };\n\n  // useEffect(() => {\n  //   fetch(\n  //     `${apiURL}V1.0/Project/${currentProjectId}/Document/${currentDocumentDetails.Id}/Template/${currentTemplateId}/Create`,\n  //     requestOptions\n  //   )\n  //     .then((response) => response.json())\n  //     .then((result) => {\n  //       setDocumentDetail(result.Document);\n  //     })\n  //     .catch((error) => console.log(\"error\", error));\n  // }, []);\n\n  const {\n    DocumentNumber,\n    Id: docId,\n    DocumentType,\n    Title: docTitle,\n    Title1: docTitle1,\n    Title2: docTitle2,\n    OpenClosedStatus,\n    UserRevisionNumber,\n    UserRevisionDate,\n    CreatedByContact,\n    CreatedByCompany,\n  } = currentTemplate || currentDocument;\n\n  const documentDetails = (\n    <div className=\"summary-details\">\n      <div className=\"summary-details-row\">\n        <h5>Document No</h5>\n        <span>{DocumentNumber || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Document Id</h5>\n        <span>{docId || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Document Type</h5>\n        <span>{DocumentType ? DocumentType.Title : \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Title</h5>\n        <span>{docTitle || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Title1</h5>\n        <span>{docTitle1 || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Title2</h5>\n        <span>{docTitle2 || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Document Status Open/Closed</h5>\n        <span>{OpenClosedStatus || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Valid From</h5>\n        <span></span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Valid To</h5>\n        <span></span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Revision</h5>\n        <span>{UserRevisionNumber || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Revision Date</h5>\n        <span>{UserRevisionDate || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Created By Contact</h5>\n        <span>{CreatedByContact || \"\"}</span>\n      </div>\n      <div className=\"summary-details-row\">\n        <h5>Created By Company</h5>\n        <span>{CreatedByCompany || \"\"}</span>\n      </div>\n    </div>\n  );\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n      <div className=\"control\">\n        <div className=\"control-row\">\n          <h3 htmlFor=\"title\">{Title}</h3>\n          {documentDetails}\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default DocumentSummaryGrid;\n","import React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setDocumentStatus,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonSubmitRegister(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\\\n\n  const dispatch = useDispatch();\n  const debugMode = useSelector(selectDebugMode);\n\n  function onSubmitToRegisterHandler(pEvent) {\n    // console.log('onSubmitToRegisterHandler: ', pEvent )\n    dispatch(setDocumentStatus(\"tosend\"));\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button\n          className=\"btn btn-secondary\"\n          onClick={onSubmitToRegisterHandler}\n        >\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonSubmitRegister;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction ButtonCloseout(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">{Title}</button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonCloseout;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { selectDebugMode } from \"../../features/config/configSlice\";\n\nfunction ButtonViewDocument(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode);\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">{Title}</button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonViewDocument;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonSendEmail(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickSendEmailHandler(pEvent) {\n    console.log(\"clickSendEmailHandler\");\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickSendEmailHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonSendEmail;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {\n  selectDebugMode,\n  setCurrentAction,\n} from \"../../features/config/configSlice\";\n\nfunction ButtonSendSMS(props) {\n  const json = props.controlJson;\n  const { Type, Title, Id, IsVisible = true } = json;\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch();\n\n  const debugMode = useSelector(selectDebugMode);\n\n  function clickSendSmsHandler(pEvent) {\n    console.log(\"clickSendSmsHandler\");\n  }\n\n  return IsVisible ? (\n    <div className=\"control-container\">\n      <div className={`tag ${debugMode ? \"\" : \"hidden\"}`}>\n        {Type}\n        <br />\n        <span className=\"control-id\">{Id}</span>\n        <textarea\n          name=\"\"\n          cols=\"10\"\n          rows=\"5\"\n          value={JSON.stringify(json)}\n          disabled\n        ></textarea>\n      </div>\n\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={clickSendSmsHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default ButtonSendSMS;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { selectJson, setJson } from \"../features/json/jsonSlice\";\r\nimport {\r\n  selectDocumentStatus,\r\n  setDocumentStatus,\r\n  selectCurrentSectionIndex,\r\n  setCurrentSectionIndex,\r\n} from \"../features/config/configSlice\";\r\n\r\nimport { getControlName, getControlPathById } from \"../app/utilities\";\r\nimport styles from \"./Board.module.css\";\r\n\r\nimport {\r\n  DocumentTableOfContents,\r\n  ListMulticontrol,\r\n  Label,\r\n  Text,\r\n  Repeatable,\r\n  ButtonSubmitPurchase,\r\n  ButtonAddDocketNumber,\r\n  API,\r\n  Date,\r\n  Image,\r\n  ImageSingle,\r\n  ButtonAddReportDate,\r\n  QRScanner,\r\n  QRScannerList,\r\n  Signature,\r\n  SignatureDateTime,\r\n  SignatureDate,\r\n  Matrix,\r\n  Checkbox,\r\n  Boolean,\r\n  Trilean,\r\n  TrileanLabel,\r\n  ListSingle,\r\n  ListMultiple,\r\n  Time,\r\n  DateTime,\r\n  TimeLabel,\r\n  DateLabel,\r\n  ButtonAddSignature,\r\n  RegisterSignatures,\r\n  SearchableListEntryDialogSMS,\r\n  ButtonAddSMS,\r\n  SearchableSMSListView,\r\n  SearchableListEntryDialogEmail,\r\n  ButtonAddEmail,\r\n  SearchableEmailListView,\r\n  MatrixButton,\r\n  DocumentSummaryGrid,\r\n  ButtonSubmitRegister,\r\n  ButtonCloseout,\r\n  ButtonViewDocument,\r\n  ButtonSendEmail,\r\n  ButtonSendSMS,\r\n} from \"../components/controls/\";\r\n\r\nfunction Board() {\r\n  const json = useSelector(selectJson);\r\n  const currentSectionIndex = useSelector(selectCurrentSectionIndex);\r\n  const dispatch = useDispatch();\r\n  const documentStatus = useSelector(selectDocumentStatus);\r\n\r\n  const [controls, setControls] = useState([]);\r\n\r\n  const components = {\r\n    DocumentTableOfContents,\r\n    ListMulticontrol,\r\n    Label,\r\n    Text,\r\n    Repeatable,\r\n    ButtonSubmitPurchase,\r\n    ButtonAddDocketNumber,\r\n    API,\r\n    Date,\r\n    Image,\r\n    ImageSingle,\r\n    ButtonAddReportDate,\r\n    QRScanner,\r\n    QRScannerList,\r\n    Signature,\r\n    SignatureDateTime,\r\n    SignatureDate,\r\n    Matrix,\r\n    Checkbox,\r\n    Boolean,\r\n    Trilean,\r\n    TrileanLabel,\r\n    ListSingle,\r\n    ListMultiple,\r\n    Time,\r\n    DateTime,\r\n    TimeLabel,\r\n    DateLabel,\r\n    ButtonAddSignature,\r\n    RegisterSignatures,\r\n    SearchableListEntryDialogSMS,\r\n    ButtonAddSMS,\r\n    SearchableSMSListView,\r\n    SearchableListEntryDialogEmail,\r\n    ButtonAddEmail,\r\n    SearchableEmailListView,\r\n    MatrixButton,\r\n    DocumentSummaryGrid,\r\n    ButtonSubmitRegister,\r\n    ButtonCloseout,\r\n    ButtonViewDocument,\r\n    ButtonSendEmail,\r\n    ButtonSendSMS,\r\n  };\r\n\r\n  const sectionsAmount = json.Sections !== undefined ? json.Sections.length : 0;\r\n  const sectionJSON =\r\n    json.Sections !== undefined ? json.Sections[currentSectionIndex] : [];\r\n  const { Title, Elements } = sectionJSON;\r\n\r\n  /* Watch for section changes * ---------------------------------------------------------------------------- */\r\n  useEffect(() => {\r\n    // if (Object.keys(json).length > 0)\r\n    //   console.log(\"-------> json section updated: \", Elements);\r\n    if (Elements !== undefined) {\r\n      const controlsFromElements = Elements.map((element, index) => {\r\n        const componentName = getControlName(element.Type);\r\n        // console.log(`--->componentName: `, componentName);\r\n        let controlComponent;\r\n        if (components[componentName] !== undefined) {\r\n          const Component = components[componentName];\r\n          controlComponent = (\r\n            <Component\r\n              key={`${componentName.substring(0, 4).toLowerCase()}-${\r\n                element.ElementId\r\n              }`}\r\n              controlJson={element}\r\n              updateJson={updateJsonHandler}\r\n            />\r\n          );\r\n        }\r\n        return controlComponent;\r\n      });\r\n      setControls(controlsFromElements);\r\n    } else setControls(\"\");\r\n  }, [Elements]);\r\n  /* --------------------------------------------------------------------------- * Watch for section changes */\r\n\r\n  /* Update the JSON * ------------------------------------------------------------------------------------- */\r\n  function updateJsonHandler(pJson) {\r\n    if (documentStatus === \"loaded\") dispatch(setDocumentStatus(\"modified\"));\r\n\r\n    const controlPath = getControlPathById(pJson.Id, currentSectionIndex, json);\r\n    // LOG THE CURRENT UPDATED CONTROL\r\n    // console.log(\r\n    //   \"%c \" + pJson.Id + \" \",\r\n    //   \"background:red;color:white;\",\r\n    //   controlPath,\r\n    //   \"updated:\",\r\n    //   pJson\r\n    // );\r\n\r\n    let jsonToUpdate = JSON.parse(JSON.stringify(json));\r\n    // ONLY FIST SUBLEVEL\r\n    jsonToUpdate.Sections[controlPath.section].Elements[\r\n      controlPath.index\r\n    ] = pJson;\r\n    dispatch(setJson(jsonToUpdate));\r\n  }\r\n  /* ------------------------------------------------------------------------------------ * Update the JSON */\r\n\r\n  const boardControls =\r\n    documentStatus === \"loading\" ? (\r\n      <div className=\"skeleton\">\r\n        {Array(14)\r\n          .fill(\"\")\r\n          .map((item, index) => (\r\n            <div\r\n              key={index}\r\n              className={`${\r\n                index % 2 === 1 ? \"skeleton-bloc-offset\" : \"\"\r\n              } skeleton-bloc`}\r\n            ></div>\r\n          ))}\r\n      </div>\r\n    ) : (\r\n      controls\r\n    );\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"currentSectionIndicator\">\r\n        {currentSectionIndex + 1} of {sectionsAmount}\r\n      </div>\r\n      <div className=\"board\">{boardControls}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectCurrentSectionIndex,\n  callSection,\n  prevSection,\n  nextSection,\n} from \"../features/config/configSlice\";\nimport { selectJson } from \"../features/json/jsonSlice\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faStepBackward,\n  faStepForward,\n  faFastBackward,\n  faFastForward,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./Pagination.module.scss\";\n\nfunction Pagination() {\n  const dispatch = useDispatch();\n  const tabIndex = useSelector(selectCurrentSectionIndex);\n  const json = useSelector(selectJson);\n\n  const tabLength = json.Sections ? json.Sections.length : 0;\n  const tabTitle = json.Sections ? json.Sections[tabIndex].Title : \"\";\n\n  function onFirstSectionHandler(e) {\n    dispatch(callSection(0));\n  }\n  function onPrevSectionHandler(e) {\n    if (tabIndex > 0) dispatch(prevSection());\n  }\n  function onNextSectionHandler(e) {\n    if (tabIndex < tabLength - 1) dispatch(nextSection());\n  }\n  function onLastSectionHandler(e) {\n    dispatch(callSection(tabLength - 1));\n  }\n\n  return (\n    <nav className={styles.row}>\n      <button\n        className=\"btn btn-primary\"\n        disabled={tabLength === 0 || tabIndex === 0}\n        onClick={(e) => onFirstSectionHandler(e)}\n      >\n        <FontAwesomeIcon icon={faFastBackward} />\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        disabled={tabLength === 0 || tabIndex === 0}\n        onClick={(e) => onPrevSectionHandler(e)}\n      >\n        <FontAwesomeIcon icon={faStepBackward} />\n      </button>\n      <div className={styles.title}>\n        <h2>{tabTitle}</h2>\n      </div>\n      <button\n        className=\"btn btn-primary\"\n        disabled={tabLength === 0 || tabIndex === tabLength - 1}\n        onClick={(e) => onNextSectionHandler(e)}\n      >\n        <FontAwesomeIcon icon={faStepForward} />\n      </button>\n      <button\n        className=\"btn btn-primary\"\n        disabled={tabLength === 0 || tabIndex === tabLength - 1}\n        onClick={(e) => onLastSectionHandler(e)}\n      >\n        <FontAwesomeIcon icon={faFastForward} />\n      </button>\n    </nav>\n  );\n}\n\nexport default Pagination;\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport FormSelector from \"./components/FormSelector\";\r\nimport Board from \"./components/Board\";\r\nimport Pagination from \"./components/Pagination\";\r\n\r\nimport {\r\n  selectDebugMode,\r\n  setDebugMode,\r\n  selectCurrentToken,\r\n  setCurrentToken,\r\n  selectCurrentTemplate,\r\n  selectCurrentDocument,\r\n} from \"./features/config/configSlice\";\r\n\r\nimport \"./App.scss\";\r\n\r\nfunction App() {\r\n  const isDebugging = useSelector(selectDebugMode);\r\n  const dispatch = useDispatch();\r\n\r\n  const url = new URL(window.location.href);\r\n  dispatch(setCurrentToken(url.searchParams.get(\"token\")));\r\n\r\n  const currentUserName = url.searchParams.get(\"user\");\r\n  const currentToken = useSelector(selectCurrentToken);\r\n\r\n  const projectId = url.searchParams.get(\"projectId\");\r\n  const templateId = url.searchParams.get(\"templateId\");\r\n  const documentId = url.searchParams.get(\"documentId\");\r\n  const userName = currentUserName;\r\n\r\n  const currentTemplate = useSelector(selectCurrentTemplate);\r\n  const currentDocument = useSelector(selectCurrentDocument);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 title=\"v20.11.24\">DYNAMIC FORM</h1>\r\n        <h2>{currentTemplate.Title1 || selectCurrentDocument.Title}</h2>\r\n        <div className=\"debug-toggle\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"debug\"\r\n            checked={isDebugging}\r\n            id=\"debug\"\r\n            onChange={() => dispatch(setDebugMode(!isDebugging))}\r\n          />\r\n          <label htmlFor=\"debug\">Debug</label>\r\n        </div>\r\n      </header>\r\n      <div className={`App-tools ${isDebugging ? \"\" : \"hidden\"}`}>\r\n        <FormSelector\r\n          projectId={projectId}\r\n          templateId={templateId}\r\n          documentId={documentId}\r\n          userName={userName}\r\n          token={currentToken}\r\n        />\r\n      </div>\r\n      <Pagination />\r\n      <Board />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport jsonReducer from \"../features/json/jsonSlice\";\r\nimport configReducer from \"../features/config/configSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    json: jsonReducer,\r\n    config: configReducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}