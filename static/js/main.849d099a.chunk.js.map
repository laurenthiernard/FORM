{"version":3,"sources":["components/SelectSearchable.module.scss","components/Modal.module.scss","components/Login.module.scss","components/DateTimeInput.module.scss","components/DateInput.module.scss","components/TimeInput.module.scss","components/Figure.module.scss","components/Tabulation.module.scss","features/json/JsonReader.module.scss","features/json/jsonSlice.js","features/tabulation/tabulationSlice.js","features/display/displaySlice.js","components/JsonOptions.js","components/controls/DocumentTableOfContents.js","components/controls/ListMulticontrol.js","components/controls/Label.js","components/Modal.js","components/controls/Text.js","app/utilities.js","components/controls/Repeatable.js","components/controls/ButtonSubmitPurchase.js","components/controls/ButtonAddDocketNumber.js","components/controls/API.js","components/DateInput.js","components/controls/Date.js","components/Figure.js","components/controls/Image.js","components/controls/ImageSingle.js","components/controls/ButtonAddReportDate.js","components/controls/QRScanner.js","components/controls/QRScannerList.js","components/controls/Signature.js","components/controls/SignatureDateTime.js","components/controls/SignatureDate.js","components/controls/Matrix.js","components/controls/Checkbox.js","components/controls/Boolean.js","components/controls/Trilean.js","components/controls/TrileanLabel.js","components/controls/ListSingle.js","components/controls/ListMultiple.js","components/TimeInput.js","components/controls/Time.js","components/DateTimeInput.js","components/controls/DateTime.js","components/controls/TimeLabel.js","components/controls/DateLabel.js","components/controls/ButtonAddSignature.js","components/controls/RegisterSignatures.js","components/SelectSearchable.js","components/controls/SearchableListEntryDialogSMS.js","components/controls/ButtonAddSMS.js","components/controls/SearchableSMSListView.js","components/controls/SearchableListEntryDialogEmail.js","components/controls/ButtonAddEmail.js","components/controls/SearchableEmailListView.js","components/controls/MatrixButton.js","components/controls/DocumentSummaryGrid.js","components/controls/ButtonSubmitRegister.js","components/controls/ButtonCloseout.js","components/controls/ButtonViewDocument.js","features/json/JsonReader.js","components/Tabulation.js","components/Login.js","components/ApiInterface.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","jsonSlice","createSlice","name","initialState","value","JSON","parse","localStorage","getItem","documentStatus","currentAction","currentUser","currentContact","phoneNumber","companyName","repeaterValue","reducers","setJson","state","action","console","log","payload","setItem","stringify","setDocumentStatus","setCurrentAction","setCurrentUser","setCurrentContact","setRepeaterValue","actions","selectJson","json","selectDocumentStatus","selectCurrentAction","selectCurrentUser","selectCurrentContact","selectRepeaterValue","tabulationSlice","callSection","prevSection","nextSection","selectedTabulation","tabulation","displaySlice","debugMode","errorMsg","setControls","setDebugMode","setOpenListId","openListId","setErrorMsg","clearErrorMsg","selectOptionedControls","display","selectDebugMode","selectOpenListId","selectErrorMsg","JsonOptions","dispatch","useDispatch","useSelector","loadedJSON","id","className","onClick","pEvent","icon","faRedo","style","transform","marginLeft","faTrash","htmlFor","type","checked","onChange","target","DocumentTableOfContents","props","sections","Sections","length","map","element","index","Elements","Type","key","Title","faChevronRight","ListMulticontrol","controlJson","Id","Data","IsVisible","options","option","cols","rows","disabled","selectedIndex","Number","visibleControls","undefined","OptionedControls","Controls","hiddenControls","forEach","controlId","push","Label","FontAttributes","FontSize","Margin","HasUnderLine","fontSize","fontWeight","fontStyle","borderBottom","padding","Modal","visibility","toggleVisibility","message","css","backdrop","callback","springBackdropProps","useSpring","opacity","from","zIndex","config","gentle","springModalProps","top","stiff","actionBtns","styles","modalBtn","backdropStyle","backgroundColor","div","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","faTimes","modalHeader","faExclamationTriangle","modalContent","modalFooter","Text","IsEnabled","Value","Format","Warning","WarningMessage","Mandatory","ValidationMessage","AssociatedId","useState","isModalVisible","setIsModalVisible","bgColor","modalOptions","setModalOptions","emailAddressTester","phoneNumberRestrictCodes","onChangeHandler","Names","email","newJson","updateJson","onBlurHandler","focus","Keyboard","test","toLowerCase","useEffect","textfield","Lines","min","Min","max","Max","size","Decimal","maxLength","onKeyDown","includes","keyCode","preventDefault","VarChar","onBlur","warningMarker","mandatoryMarker","getControlName","pControlType","split","part","toUpperCase","slice","join","getElementFromElementId","pJson","pElementID","currentJson","normalizeJson","foundPath","section","sectionIndex","item","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","getCurrentDate","pDate","Date","now","camelcaseKeys","deep","pascalCase","exportMetaData","addToDocumentExport","pValue","controlIndex","findIndex","prevValue","table","Repeatable","components","ButtonSubmitPurchase","ButtonAddDocketNumber","API","Image","ImageSingle","ButtonAddReportDate","QRScanner","QRScannerList","Signature","SignatureDateTime","SignatureDate","Matrix","Checkbox","Boolean","Trilean","TrileanLabel","ListSingle","ListMultiple","Time","DateTime","TimeLabel","DateLabel","ButtonAddSignature","RegisterSignatures","SearchableListEntryDialogSMS","ButtonAddSMS","SearchableSMSListView","SearchableListEntryDialogEmail","ButtonAddEmail","SearchableEmailListView","MatrixButton","DocumentSummaryGrid","ButtonSubmitRegister","ButtonCloseout","ButtonViewDocument","children","repeaterIndex","controls","control","repeaterControl","componentName","Component","pRepeaterIndex","repeaterControlIndex","newRepeaterValues","updateJsonHandler","e","pIndex","filter","faPlusSquare","Api","IncludePhoneNumber","IncludeEmail","IncludeTitle","IncludeBusinessNumber","IncludeAbbreviation","IncludeCode","targetedApi","String","collapsed","setCollapsed","keyword","setKeyword","list","setList","filteredList","setFilteredList","constructor","selectedValues","setSelectedValues","animatedListProps","height","trailPills","useTrail","marginTop","to","apiUrl","getEndpoint","token","apiHeaders","Headers","append","access_token","requestOptions","method","headers","redirect","listItemClickHandler","currentItem","updateJSON","fetch","then","response","text","result","listItems","emailAddress","title","abn","abbr","code","spacer","Contact","Email","NameFirst","NameLast","Company","Name","CompanyName","Abn","Abbr","Code","catch","error","itemList","isSelected","iconCheck","faCheck","selectedPills","targetText","parentNode","innerText","faAngleDown","faAngleUp","placeholder","DateInput","dateformatConverted","format","replace","dateValue","setDateValue","dateString","addMonths","addDays","toTimeString","modifiers","AddDay","AddMonth","dateContainer","datePicker","defaultValue","onDateChange","btnClear","FormatDateTime","IsBlank","DateValue","defaultDate","toDateString","onDateChangeHandler","Figure","container","src","source","alt","btnClose","onClose","Images","onCloseHandler","images","image","faImage","figure","imageData","fileReader","FileReader","onload","readAsDataURL","files","DateTimeValue","isScanning","setIsScanning","updateValues","pScanValue","pTimestamp","qrReader","delay","onError","pErr","onScan","pData","width","btScan","scanOffIndex","setScanOffIndex","newList","ScanOnDateTime","ScanOffDateTime","scanList","signatureDisplay","useRef","username","signatureText","setSignatureText","selectedFont","setSelectedFont","isSigning","setIsSigning","htmlToImage","current","dataUrl","rawData","fontDropdownOptions","label","editSignature","btnSign","signature","ref","Columns","Rows","matrixLayout","i","j","controlComponent","substring","ElementId","gridTemplateColumns","gridTemplateRows","ShowComment","Collapsible","IsCollapsed","EntryTitle","Details","CommentValue","comment","commentText","details","entryTitle","defaultChecked","checkboxValue","booleanValue","HideNa","trileanValue","Buttons","buttons","button","computedBackground","Button","BackgroundColorSelected","BackgroundColor","Fragment","underline","SelectedValue","mass","tension","friction","newValues","TimeInput","timeformatConverted","timeValue","setTimeValue","pTime","timeString","addHours","AddHour","timeContainer","timePicker","onTimeChange","TimeValue","defaultTime","getHours","getMinutes","onTimeChangeHandler","DateTimeInput","dateFormatConverted","dateTimeValue","toLocaleTimeString","dateTimeStringValue","dateTimeContainer","onDateTimeChange","defaultDateTime","setDateTimeValue","pDateTime","onDateTimeChangeHandler","registerValues","document","getElementById","SignOnDateTime","registerList","reverse","SignOffDateTime","pId","signatureIndex","SelectSearchable","input","items","allowMultiple","initialIsVisible","isVisible","setIsVisible","handleClickOutside","event","contains","addEventListener","removeEventListener","useVisible","onClickItemHandler","pItem","stopPropagation","currentTarget","onSelectItem","selectedItems","cssWidth","ListSmall","ListMedium","ListLarge","selectSearchable_Container","selectSearchable_Header","selectSearchable_SelectedContainer","selectSearchable_SelectedItem","selectedItem_delete","selectSearchable_Trigger","position","selectSearchable_List","selectSearchable_SearchContainer","selectSearchable_ItemsContainer","selectItem","selectedItem","selectSearchable_SelectedItem_Selected","contactList","setContactList","contactDropdownList","setContactDropdownList","setSelectedContact","contactIndex","contact","contactDetails","addContact","Title2","pContactIndex","deleteContact","Selection","XAxisName","YAxisName","Legend","showLegend","ShowLegend","buttonClickHandler","pButtonId","buttonPath","buttonValue","LegendValuesY","Values","LegendValuesX","legendValuesX","legendValuesY","legend","JsonReader","optionedControls","activeSectionId","currentJsonToEdit","getControlPathById","pControlId","currentSection","itemPath","controlPath","jsonToUpdate","controlsFromElements","smsRegisterFieldsPath","field","skeleton","Array","fill","fixed","Tabulation","tabIndex","tabLength","tabTitle","row","faFastBackward","faStepBackward","faStepForward","faFastForward","Login","errormsg","springloginProps","setUsername","password","setPassword","member","setMember","loginBackdrop","loginBackdrop_freeze","loginContainer","loginClose","loginHeader","faUser","loginContent","onFocus","clearError","loginFooter","onSubmit","ApiInterface","apiURL","setToken","user","setUser","projects","setProjects","templates","setTemplates","documents","setDocuments","selectedProject","setSelectedProject","selectedProjectId","setSelectedProjectId","setSelectedTemplate","selectedTemplateRef","setSelectedTemplateRef","selectedDocumentRef","setSelectedDocumentRef","isFetchingTemplates","setIsFetchingTemplates","isFetchingDocuments","setIsFetchingDocuments","isPopinLoginVisible","setIsPopinLoginVisible","loginErrorMsg","setLoginErrorMsg","projectId","pProjectID","templatesHeaders","getTemplates","documentsHeaders","getDocuments","getTemplateById","template","getDocumentById","DocumentFormTemplateId","pTemplate","pDocument","templateToUpdate","Config","firstFoundedPath","templateValues","RepeaterValue","aggregateJson","MetaData","metadata","documentBody","documentBodyString","formdata","FormData","body","res","getUser","pToken","userHeaders","pTemplateId","a","templateHeaders","pDocumentId","Document","templateLabel","documentLabel","Title1","pUsername","pPassword","pMember","urlencoded","URLSearchParams","resultJSON","error_description","projectsHeaders","getProjects","App","configureStore","reducer","jsonReducer","tabulationReducer","displayReducer","window","location","hostname","match","ReactDOM","render","store","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.849d099a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectItem\":\"SelectSearchable_selectItem__ytOvQ\",\"selectedItem_delete\":\"SelectSearchable_selectedItem_delete__DzATU\",\"selectSearchable\":\"SelectSearchable_selectSearchable__12vBI\",\"selectSearchable_Container\":\"SelectSearchable_selectSearchable_Container__fToYi\",\"selectSearchable_SearchContainer\":\"SelectSearchable_selectSearchable_SearchContainer__3eaGr\",\"selectSearchable_ItemsContainer\":\"SelectSearchable_selectSearchable_ItemsContainer__34yKg\",\"selectSearchable_Header\":\"SelectSearchable_selectSearchable_Header__20KCq\",\"selectSearchable_SelectedContainer\":\"SelectSearchable_selectSearchable_SelectedContainer__3HBOF\",\"selectSearchable_Trigger\":\"SelectSearchable_selectSearchable_Trigger__2brz3\",\"selectSearchable_SelectedItem\":\"SelectSearchable_selectSearchable_SelectedItem__ya07B\",\"selectSearchable_SelectedItem_Selected\":\"SelectSearchable_selectSearchable_SelectedItem_Selected__3kePe\",\"selectSearchable_List\":\"SelectSearchable_selectSearchable_List__12txV\",\"listCollapsed\":\"SelectSearchable_listCollapsed__2gYJk\",\"ListSmall\":\"SelectSearchable_ListSmall__24zac\",\"ListMedium\":\"SelectSearchable_ListMedium__3_qlO\",\"ListLarge\":\"SelectSearchable_ListLarge__m6apt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBackdrop\":\"Login_loginBackdrop__2-vXb\",\"loginBackdrop_freeze\":\"Login_loginBackdrop_freeze__30wYs\",\"loginContainer\":\"Login_loginContainer__1-kGp\",\"loginHeader\":\"Login_loginHeader__1dDHJ\",\"loginContent\":\"Login_loginContent__pNQUT\",\"loginFooter\":\"Login_loginFooter__1T3EA\",\"loginClose\":\"Login_loginClose__EEt8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"DateTimeInput_timePicker__g55DG\",\"datePicker\":\"DateTimeInput_datePicker__fMbwV\",\"dateTimeContainer\":\"DateTimeInput_dateTimeContainer__3DJHa\",\"btnClear\":\"DateTimeInput_btnClear__1hSf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"DateInput_datePicker__1qUGn\",\"dateContainer\":\"DateInput_dateContainer__3vsHd\",\"btnClear\":\"DateInput_btnClear__hBuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"TimeInput_timePicker__1bwP3\",\"timeContainer\":\"TimeInput_timeContainer__15bEw\",\"btnClear\":\"TimeInput_btnClear__3Cafn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Figure_container__1bF2w\",\"btnClose\":\"Figure_btnClose__3UDU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Tabulation_row__1qqOd\",\"title\":\"Tabulation_title__2BmpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"JsonReader_fixed__1abV0\"};","import { createSlice } from '@reduxjs/toolkit'\n\nexport const jsonSlice = createSlice({\n  name: 'json',\n  initialState: {\n    // value: {},\n    // documentStatus: 'init',\n\n    // // Persistence\n    value: JSON.parse(localStorage.getItem('json')) || {},\n    documentStatus: 'loaded',\n    currentAction: '',\n    currentUser: '',\n    currentContact: { name: '', phoneNumber: '', companyName: '' },\n    repeaterValue: []\n  },\n  reducers: {\n    setJson: (state, action) => {\n      console.log(`setJson : `, action.payload)\n\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = action.payload\n\n      // Initial JSON to be set if json is not present (new document)\n      // localStorage.se  tItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n      localStorage.setItem('json', JSON.stringify(action.payload))\n    },\n    setDocumentStatus: (state, action) => {\n      // console.log(`setDocumentStatut : `, action.payload)\n      state.documentStatus = action.payload\n    },\n    setCurrentAction: (state, action) => {\n      state.currentAction = action.payload\n    },\n    setCurrentUser: (state, action) => {\n      state.currentUser = action.payload\n    },\n    setCurrentContact: (state, action) => {\n      state.currentContact = action.payload\n    },\n    setRepeaterValue: (state, action) => {\n      state.repeaterValue = action.payload\n    }\n  },\n})\n\nexport const { setJson, setDocumentStatus, setCurrentAction, setCurrentUser, setCurrentContact, setRepeaterValue } = jsonSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectJson = state => state.json.value\nexport const selectDocumentStatus = state => state.json.documentStatus\nexport const selectCurrentAction = state => state.json.currentAction\nexport const selectCurrentUser = state => state.json.currentUser\nexport const selectCurrentContact = state => state.json.currentContact\nexport const selectRepeaterValue = state => state.json.repeaterValue\n\nexport default jsonSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\n\nexport const tabulationSlice = createSlice({\n  name: 'tabulation',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    callSection: (state, action) => {\n      state.value = action.payload\n    },\n    prevSection: state => {\n      state.value -= 1\n    },\n    nextSection: state => {\n      state.value += 1\n    },\n  },\n});\n\nexport const { callSection,\n  prevSection,\n  nextSection,\n  } = tabulationSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectedTabulation = state => state.tabulation.value;\n\n\nexport default tabulationSlice.reducer;","import { createSlice } from '@reduxjs/toolkit'\n\nexport const displaySlice = createSlice({\n  name: 'display',\n  initialState: {\n    value: {},\n    debugMode: false,\n    errorMsg: ''\n  },\n  reducers: {\n    setControls: (state, action) => {\n      state.value = action.payload\n    },\n    setDebugMode: (state, action) => {\n      state.debugMode = action.payload\n    },\n    setOpenListId: (state, action) => {\n      state.openListId = action.payload\n    },\n    setErrorMsg: (state, action) => {\n      state.errorMsg = action.payload\n    },\n    //what's that\n    clearErrorMsg: state => {\n      state.errorMsg = ''\n    }\n  }\n})\n\nexport const { setControls, setDebugMode, setOpenListId, setErrorMsg, clearErrorMsg } = displaySlice.actions\n\nexport const selectOptionedControls = state => state.display.value\nexport const selectDebugMode = state => state.display.debugMode\nexport const selectOpenListId = state => state.display.openListId\nexport const selectErrorMsg = state => state.display.errorMsg\n\nexport default displaySlice.reducer","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setDebugMode,\n  selectDebugMode\n} from '../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport default function JsonOptions() {\n\n  const dispatch = useDispatch()\n  const debugMode = useSelector(selectDebugMode)\n  const onDebugChangeHandler = (pEvent) => dispatch(setDebugMode(pEvent.target.checked))\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  let loadedJSON = JSON.parse(localStorage.getItem('initialJson')) || {}\n\n  function clickRevertChangesHandler(pEvent) {\n    dispatch(callSection(0))\n    dispatch(setJson(loadedJSON))\n  }\n\n  function clickClearDocumentHandler(pEvent) {\n    dispatch(setJson({}))\n  }\n\n  // function clickLoadJSONHandler(pEvent) {\n  //   fileLoaderInput = document.querySelector('#fileLoader')\n  //   fileLoaderInput.click()\n  // }\n  // let fileLoaderInput\n  // function loadJSONHandler(pEvent) {\n  //   const file = pEvent.target.files[0]\n  //   const reader = new FileReader()\n\n  //   reader.onloadend = function () {\n  //     try {\n  //       let source = reader.result\n  //       let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n  //       loadedJSON = JSON.parse(atob(newSource))\n  //       console.log(`--->: reader.onloadend -> newData`, loadedJSON)\n\n  //       localStorage.setItem('initialJson', JSON.stringify(loadedJSON))\n  //       dispatch(setJson(loadedJSON))\n  //     }\n  //     catch (err) {\n  //       console.log('---> ', err)\n  //     }\n  //   }\n  //   if (file) {\n  //     reader.readAsDataURL(file)\n  //   }\n  // }\n\n\n  return (\n    <div id=\"jsonOptions\" className={`${(documentStatus === 'modified') ? 'options-visible' : 'options-hidden'}`}>\n      {/* <button className=\"btn btn-ternary\" onClick={clickLoadJSONHandler}>LOAD JSON FILE</button> */}\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickRevertChangesHandler}>\n        <FontAwesomeIcon icon={faRedo} style={{ transform: 'scaleX(-1)', marginLeft: 0 }} />\n        REVERT CHANGES\n      </button>\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickClearDocumentHandler}>\n        <FontAwesomeIcon icon={faTrash} style={{ marginLeft: 0 }} />\n        CLEAR DOCUMENT\n      </button>\n      {/* <input id=\"fileLoader\" type=\"file\" onChange={loadJSONHandler}></input> */}\n      <div className=\"debug\">\n        <label htmlFor=\"debug\">Debug</label>\n        <input type=\"checkbox\" name=\"debug\" id=\"debug\" className=\"debug-check\" checked={debugMode} onChange={onDebugChangeHandler} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectJson\n} from '../../features/json/jsonSlice';\nimport {\n  callSection\n} from '../../features/tabulation/tabulationSlice';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DocumentTableOfContents(props) {\n  const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n\n  // const { Title, Id, Elements }  = json\n\n  function gotToSectionHanlder(pSectionIndex) {\n    // console.log('pSectionIndex: ', pSectionIndex)\n    dispatch(callSection(pSectionIndex))\n  }\n\n  const sections = json.Sections && json.Sections.length > 0 ? json.Sections.map((element, index) => {\n    if (element.Elements[0].Type === 'Document.TableOfContents') return null\n    return (\n      <li key={index}>\n        <button className=\"btn btn-secondary-outlined btn-link fixed-large\" onClick={() => gotToSectionHanlder(index)}>\n          {element.Title}\n          <FontAwesomeIcon icon={faChevronRight} />\n        </button>\n      </li>\n    )\n  }) : ''\n\n  return (\n    <ul className=\"toc-list\">\n      {sections}\n    </ul>\n  )\n}\n\nexport default DocumentTableOfContents\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { setControls } from '../../features/display/displaySlice'\n\nfunction ListMulticontrol(props) {\n\n  const json = props.controlJson\n\n  const { Type, Title, Id, Data, IsVisible = true } = json\n\n  const debugMode = useSelector(selectDebugMode)\n  const dispatch = useDispatch()\n\n\n  function onChangeHandler(pEvent) {\n    const selectedIndex = Number(pEvent.target.value)\n    // console.log(`--->: onChangeHandler -> selectedIndex`, selectedIndex)\n    if (selectedIndex >= 0) {\n      const visibleControls = json.OptionedControls[selectedIndex].Controls !== undefined ? json.OptionedControls[selectedIndex].Controls : []\n      const hiddenControls = []\n\n      json.OptionedControls.forEach((option, index) => {\n        // console.log('index: ', index, '  selectedIndex: ', selectedIndex)\n\n        if (option.Controls !== undefined && index !== selectedIndex) {\n          option.Controls.forEach(controlId => hiddenControls.push(controlId))\n          // console.log('index: ', index, '  selectedIndex: ', selectedIndex, '   hide: ', option.Controls)\n        }\n\n      })\n\n      // console.log('---> hiddenControls: ', hiddenControls)\n      // console.log('---> visibleControls: ', visibleControls)\n      dispatch(setControls({ hiddenControls, visibleControls }))\n      // displayControls(visibleControls)\n    }\n  }\n\n  function displayControls(pControlList) {\n    // console.log('---> pControlList: ', pControlList)\n\n\n    // dispatch(setControls(pControlList))\n\n    // pControlList.forEach((item, index) => {\n    //   console.log('---> ', item)\n    // })\n  }\n\n  const options = Data.map((option, index) => <option key={index} value={index}>{option}</option>)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <label htmlFor=\"listmulticontrol\">{Title}</label>\n          <select name=\"listmulticontrol\" id=\"listmulticontrol\" onChange={onChangeHandler}>\n            <option value=\"-1\">-----</option>\n            {options}\n          </select>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ListMulticontrol\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Label(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, FontAttributes, FontSize = 14, Margin = 0, HasUnderLine = false } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <div className=\"control\" style={{\n            fontSize: FontSize - 2 + 'px',\n            fontWeight: FontAttributes === 'Bold' ? 'bold' : '',\n            fontStyle: FontAttributes === 'Italic' ? 'italic' : '',\n            borderBottom: HasUnderLine ? '1px solid black' : '',\n            padding: Margin ? Margin + 'px' : ''\n          }}>{Title}\n          </div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default Label","import React from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop, callback } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  const actionBtns = callback ? <div>\n    <button className={styles.modalBtn} onClick={toggleVisibility}>Cancel</button>\n    <button className={styles.modalBtn} onClick={callback}>OK</button>\n  </div>\n    :\n    <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springModalProps}>\n          <div\n            className={styles.modalContainer}\n            style={css}>\n            <div className={styles.modalClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.modalHeader}>\n              <FontAwesomeIcon icon={faExclamationTriangle} />\n            </div>\n            <div className={styles.modalContent}>\n              {message}\n            </div>\n            <div className={styles.modalFooter}>\n              {actionBtns}\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Modal from '../Modal'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentContact,\n  selectCurrentContact,\n  // selectDocumentStatus,\n} from '../../features/json/jsonSlice'\n\nfunction Text(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, IsEnabled = true, Value = '', Format, Warning = false, WarningMessage, Mandatory, ValidationMessage, AssociatedId } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n  const currentContact = useSelector(selectCurrentContact)\n  // const status = useSelector(selectDocumentStatus)\n  const dispatch = useDispatch()\n\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalOptions, setModalOptions] = useState(Mandatory ? { message: ValidationMessage, bgColor: '#EF643C' } : { message: WarningMessage, bgColor: '#000000' })\n\n\n  const emailAddressTester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/\n  const phoneNumberRestrictCodes = [49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 16, 57, 48, 16, 187, 32, 8, 35]\n\n  // useEffect(() => {\n  //   if (status === 'reset-currentContact') {\n  //     const newJson = JSON.parse(JSON.stringify(json))\n  //     newJson.Value = ''\n  //     console.log(`---> ~ file: Text.js ~ line 36 ~ useEffect ~ newJson`, newJson)\n  //     props.updateJson(newJson)\n\n  //     // console.log('---> Should reset this: ', document.getElementById('ManualSMSName').value, document.getElementById('ManualSMSPhone').value)\n  //     // document.getElementById('ManualSMSName').value = ''\n  //     // document.getElementById('ManualSMSPhone').value = ''\n  //   }\n  // }, [status])\n\n\n  function onChangeHandler(pEvent) {\n\n    // EMAIL&SMS Register\n    if (AssociatedId && AssociatedId.Names.length > 0) {\n      if (Id === \"ManualSMSName\") dispatch(setCurrentContact({ ...currentContact, name: pEvent.target.value }))\n      if (Id === \"ManualSMSPhone\") dispatch(setCurrentContact({ ...currentContact, phoneNumber: pEvent.target.value }))\n      if (Id === \"ManualEmailName\") dispatch(setCurrentContact({ ...currentContact, name: pEvent.target.value }))\n      if (Id === \"ManualEmailEmail\") dispatch(setCurrentContact({ ...currentContact, email: pEvent.target.value }))\n    }\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    // console.log('value: ', json)\n    props.updateJson(newJson)\n  }\n\n  function onBlurHandler(pEvent) {\n    const target = pEvent.target\n\n    if (Warning && target.value === '') {\n      setIsModalVisible(true)\n    }\n    if (Mandatory && target.value === '') {\n      target.focus()\n      setIsModalVisible(true)\n    }\n    if (Format !== undefined && Format.Keyboard === 'Email') {\n      if (!emailAddressTester.test((pEvent.target.value).toLowerCase())) {\n\n        setModalOptions({ message: \"The email address provided appears not to be valid\", bgColor: '#000000' })\n        setIsModalVisible(true)\n      }\n    }\n  }\n\n  function onKeyDownHandler(pEvent) {\n    // console.log('---> ', pEvent.keyCode)\n    if (Format.Keyboard === 'Telephone') {\n      if (!phoneNumberRestrictCodes.includes(pEvent.keyCode)) pEvent.preventDefault()\n    }\n  }\n\n  useEffect(() => {\n    // console.log('Text set data: ', Value)\n  }, [json])\n\n  const textfield = Format !== undefined ?\n    Format.Lines !== undefined ? <textarea id={Id} rows={Format.Lines} onChange={onChangeHandler}></textarea>\n      :\n      Format.Keyboard === 'Numeric' ? <input type='number' min={Format.Min} max={Format.Max} size={Format.Decimal} onChange={onChangeHandler} />\n        :\n        Format.Keyboard === 'Telephone' ? <input type='text' maxLength=\"20\" onKeyDown={onKeyDownHandler} onChange={onChangeHandler} />\n          :\n          <input id={Id} type=\"text\" value={Value} maxLength={Format.VarChar || -1} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n    :\n    <input id={Id} type=\"text\" value={Value} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n\n  const warningMarker = WarningMessage ? '*' : ''\n  const mandatoryMarker = Mandatory ? <span className=\"warning-red\">*</span> : ''\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <label htmlFor=\"title\">{Title} {warningMarker}{mandatoryMarker}</label>\n          {textfield}\n        </div>\n        <Modal\n          visibility={isModalVisible}\n          toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n          message={`${Id}: ${modalOptions.message}`}\n          css={{ backgroundColor: modalOptions.bgColor }}\n          backdrop={'rgba(0,0,0,0.3)'}\n        />\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Text\n","import camelcaseKeys from 'camelcase-keys'\n\nexport function getControlName(pControlType) {\n  return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n}\n\nexport function getElementFromElementId(pJson, pElementID) {\n  // console.log(`----------------> Looking for pElementID: `, pElementID, ' inside pJson: ', pJson)\n\n  const currentJson = normalizeJson(pJson).Sections\n  // console.log(`--->: getElementFromElementId inside this: `, currentJson)\n  let foundPath = []\n\n  if (pElementID !== 'undefined') {\n    currentJson.forEach((section, sectionIndex) => {\n      section.Elements.forEach((item, index) => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach((subsubitem, subsubindex) => {\n                if (subsubitem.Id !== undefined && subsubitem.Id === pElementID) {\n                  // console.log('--> subsubpath: ', { sectionIndex, index, subindex, subsubindex })\n                  foundPath.push([sectionIndex, index, subindex, subsubindex])\n                }\n              })\n\n            }\n\n            if (subitem.Id !== undefined && subitem.Id === pElementID) {\n              // console.log('--> subpath: ', { sectionIndex, index, subindex })\n              foundPath.push([sectionIndex, index, subindex])\n            }\n\n          })\n        }\n\n        if (item.Id !== undefined && item.Id === pElementID) {\n          // console.log('--> path: ', { sectionIndex, index })\n          foundPath.push([sectionIndex, index])\n        }\n\n      }\n      )\n    }\n    )\n  }\n\n  return foundPath\n}\n\n// Fix conflict with React component 'Date' and Date JS Object\nexport function getCurrentDate(pDate = Date.now()) {\n  // console.log(`--->: getCurrentDate -> pDate`, pDate)\n  // return new Date().toLocaleDateString().split('/').reverse().join('-')\n  // return new Date().toLocaleDateString()\n  // return new Date()\n  return new Date(pDate)\n}\nexport function getDateObjFromDate(pDate) {\n  const dateObj = new Date(pDate + ' ' + new Date().toTimeString())\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromTime(pTime) {\n  const dateObj = new Date(new Date().toDateString() + ' ' + pTime)\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromDateString(pDate) {\n  const dateObj = new Date(pDate)\n  return dateObj\n}\n\nexport function normalizeJson(pJson) {\n  // const json = JSON.parse(pJson)\n  return camelcaseKeys(pJson, { deep: true, pascalCase: true })\n}\n\n//\nconst exportMetaData = []\nexport function addToDocumentExport(pValue) {\n\n  const controlIndex = exportMetaData.findIndex(item => item.Id === pValue.Id)\n  console.log(`--->: addToDocumentExport -> controlIndex`, controlIndex)\n  if (controlIndex === -1) exportMetaData.push(pValue)\n  else {\n    const prevValue = { ...exportMetaData[controlIndex] }\n    exportMetaData[controlIndex] = { ...prevValue, ...pValue }\n  }\n  // console.log(`--->: addToDocumentExport -> pValue`, pValue.Id)\n  console.log(`exportMetaData :`)\n  console.table(exportMetaData)\n\n  // exportMetaData[0].Elements.push(pValue)\n  // console.log('---> addToDocumentExport: ', exportMetaData)\n}\n\nexport function getDocumentExport() {\n  return { Elements: exportMetaData }\n}","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport {\n  setJson,\n  selectJson,\n  setRepeaterValue,\n  selectRepeaterValue\n} from '../../features/json/jsonSlice'\n\n\nimport { getControlName } from '../../app/utilities'\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  // Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from './'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nfunction Repeatable(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Elements, IsVisible = true } = json\n  // console.log(`--->: Repeatable -> props: `, props)\n\n  const dispatch = useDispatch()\n\n  const repeaterValue = useSelector(selectRepeaterValue)\n  const debugMode = useSelector(selectDebugMode)\n\n  // console.log(`--->: Repeatable -> repeaterValue`, repeaterValue)\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n\n  function updateJsonHandler(pJson, pRepeaterIndex) {\n    // console.log('this repeater: ', pRepeaterIndex)\n    // console.log('update this: ', pJson)\n\n    const repeaterControlIndex = repeaterValue[pRepeaterIndex].findIndex((item) => item.Id === pJson.Id)\n\n    const newRepeaterValues = [...repeaterValue]\n    console.log(`--->: updateJsonHandler -> newRepeaterValues`, newRepeaterValues)\n    console.log(`--->: updateJsonHandler -> newRepeaterValues[pRepeaterIndex][repeaterControlIndex]`, newRepeaterValues[pRepeaterIndex][repeaterControlIndex])\n\n    newRepeaterValues[pRepeaterIndex] = [...newRepeaterValues[pRepeaterIndex], pJson]\n\n    // console.log('---> newRepeaterValues[pRepeaterIndex][repeaterControlIndex] ; ', newRepeaterValues[pRepeaterIndex][repeaterControlIndex])\n    dispatch(setRepeaterValue(newRepeaterValues))\n\n    // console.log('in this: ', json.Elements)\n    // const mergedElements = [...json.Elements]\n\n    // const elementIndex = mergedElements.findIndex(element => element.ID === pJson.ID)\n    // mergedElements[elementIndex] = pJson\n    // // console.log('--->elementIndex:  ', elementIndex)\n\n    // props.updateJson({ ...json, Elements: mergedElements })\n  }\n\n  function addRepeatable() {\n    dispatch(setRepeaterValue([...repeaterValue, Elements]))\n  }\n  function removeRepeatableByIndex(pIndex) {\n    // console.log('---> removeRepeatableByIndex: ', pIndex)\n    dispatch(setRepeaterValue([...repeaterValue.filter((item, index) => index !== pIndex)]))\n  }\n\n  // const children = Elements.map((control, index) => {\n  //   const componentName = getControlName(control.Type)\n  //   // console.log(`--->componentName: `, componentName)\n  //   console.log('---> RP create item: ', control)\n\n  //   const Component = components[componentName]\n  //   return <Component key={index} controlJson={control} updateJson={updateJsonHandler} />\n  //   // return <div key={index}>{control.Type}</div>\n  // })\n  const children = repeaterValue.map((value, repeaterIndex) => {\n    // console.log(`--->value: `, value)\n\n    const controls = Elements.map((control, index) => {\n      // console.log('---> ', control)\n\n      value.forEach((repeaterControl, index) => {\n        if (control.Id === repeaterControl.Id) control = { control, ...repeaterControl }\n      })\n\n      const componentName = getControlName(control.Type)\n      const Component = components[componentName]\n      return <Component key={index} controlJson={control} updateJson={(pJson) => updateJsonHandler(pJson, repeaterIndex)} />\n    })\n\n    return (<div className=\"repeatable\" key={`rep-${repeaterIndex}`}>\n      <div className=\"repeatable-header\">\n        <h3 className=\"repeatable-title\">[{repeaterIndex + 1}] {Title}</h3>\n        <button className=\"btn btn-secondary btn-small\" onClick={e => removeRepeatableByIndex(repeaterIndex)}>\n          Remove\n        <FontAwesomeIcon icon={faTimes} />\n        </button>\n      </div>\n      {controls}\n    </div>)\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n\n\n          {/* <div className=\"repeatable-header\">\n            <h3 className=\"repeatable-title\">{Title}</h3>\n            <button className=\"btn btn-secondary btn-small\" onClick={e => console.log('ok')}>\n              Remove\n              <FontAwesomeIcon icon={faTimes} />\n            </button>\n          </div> */}\n          {children}\n\n\n          <button className=\"btn btn-primary\" onClick={addRepeatable}>\n            <FontAwesomeIcon icon={faPlusSquare} />\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default Repeatable","import React, { useState } from 'react'\n\nfunction ButtonSubmitPurchase(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitPurchase<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitPurchase\n","import React, { useState } from 'react'\n\nfunction ButtonAddDocketNumber(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddDocketNumber<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddDocketNumber\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId, selectDebugMode } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction API(props) {\n\n  const json = props.controlJson\n\n  const { Title, Type, Id, IsVisible = true, Value = '', Api,\n    IncludePhoneNumber, IncludeEmail, IncludeTitle, IncludeBusinessNumber, IncludeAbbreviation, IncludeCode } = json\n  const targetedApi = String(Api).toLowerCase()\n\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [list, setList] = useState([])\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // useEffect(() => {\n  //   // console.log(`API (${Title}) has new json: ${JSON.stringify(json)}`)\n  //   // console.log('API: default data: ', Value)\n  // }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - API                                   -----*\n  *----------------------------------------------------*/\n\n  const environment = 'https://api-uat.extrack.com/V1.0/'\n  const projectID = 1249\n\n  const apiUrl = `${environment}${getEndpoint()}`\n\n  const token = JSON.parse(localStorage.getItem('dynFormToken'))\n  // console.log(`--->: API -> Api`, Api, token.access_token)\n\n  const apiHeaders = new Headers()\n  apiHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n  const requestOptions = {\n    method: 'GET',\n    headers: apiHeaders,\n    redirect: 'follow'\n  }\n\n  function getEndpoint() {\n    switch (targetedApi) {\n      case 'projectcompany':\n        return `Project/${projectID}/Directory/Companies`\n      case 'projectcontacts':\n        return `Project/${projectID}/Directory/Contacts`\n      case 'globalcontacts':\n        return `Org/contacts`\n      case 'dockettypes':\n        return `/Docket/Types`\n      case 'abs':\n        return `Project/${projectID}/ABS`\n      case 'tbs':\n        return `Project/${projectID}/TBS`\n      case 'cbs':\n        return `Project/${projectID}/CbsWo`\n      case 'dbs':\n        return `Project/${projectID}/DBS`\n      case 'fbs':\n        return `Project/${projectID}/FBS`\n      case 'wbs':\n        return `Project/${projectID}/WBS`\n      case 'pcbs':\n        return `Project/${projectID}/PCBS`\n      case 'pbs':\n        return `Project/${projectID}/PBS`\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(targetedApi, JSON.parse(result))\n        const dropdownOptions = JSON.parse(result)\n        // console.log(`--->: API -> dropdownOptions`, dropdownOptions)\n\n        const listItems = dropdownOptions.map((item, index) => {\n          let option, phoneNumber, emailAddress, title, abn, abbr, code, spacer\n          switch (Api) {\n\n            case 'ProjectContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Contact.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Contact.Email || `n/a`}` : ``\n              option = `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}${phoneNumber}${emailAddress}`\n              break\n\n            case 'GlobalContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Email || `n/a`}` : ``\n              option = `${item.NameFirst} ${item.NameLast} | ${item.CompanyName}${phoneNumber}${emailAddress}`\n              break\n\n            case 'ProjectCompany':\n              // console.log(`--->: API ${Api} -> item`, item)\n\n              title = IncludeTitle ? ` | ${item.Title || `n/a`}` : ``\n              abn = IncludeBusinessNumber ? ` | ${item.Company.Abn || `n/a`}` : ``\n              abbr = IncludeAbbreviation ? ` | ${item.Company.Abbr || `n/a`}` : ``\n              option = `${item.Company.Name}${title}${abn}${abbr}`\n              // optionLabel = `${item.Company.Name} - ${item.Company.Abbr}`\n              break\n\n            case 'DocketTypes':\n              option = `${item.Title}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n            default:\n              title = IncludeTitle ? `${item.Title || `n/a`}` : ``\n              code = IncludeCode ? `${item.Code || `n/a`}` : ``\n              spacer = (IncludeCode && IncludeTitle) ? ` | ` : ``\n              option = `${title}${spacer}${code}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n          }\n\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          // console.log('component:', {Type: 'Api', Value, optionLabel})\n          // setSelectedValue(optionValue)\n          // }\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          //   currentValue = Value\n          //   console.log('API ---> DefaultValue: ', Value, '----> optionLabel : ', optionLabel)\n\n          // }\n          // return <option key={index} value={optionValue}>{optionLabel}</option>\n          return option\n        })\n        setList(listItems)\n        // console.log(`--->: API -> dropdownNodes`, dropdownNodes)\n\n      })\n      .catch(error => console.log('error', error))\n  }, [])\n\n\n\n\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(list.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [list, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    if (selectedValues[0] !== currentItem) setSelectedValues([currentItem])\n    else setSelectedValues([])\n    updateJSON(currentItem)\n  }\n  function updateJSON(pValue) {\n    // console.log(`--->: updateJSON with Value: `, pValue)\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    // console.log(`--->: updateJSON -> newJson`, newJson)\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = (item === Value) ? true : false\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default API","import React, { useState } from 'react'\n\nimport { format, addDays, addMonths } from 'date-fns'\n// import DatePicker from \"react-datepicker\"\n// import \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DateInput(props) {\n\n  const dateformatConverted = props.format.replace(/ddd/g, 'eee')\n  const [dateValue, setDateValue] = useState(props.dateValue)\n  // console.log(`--->: DateInput -> props.dateValue received: `, props.dateValue)\n\n  function onClearHandler() {\n    setDateValue('')\n    props.onDateChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setDateValue(pValue)\n    props.onDateChange(pValue)\n  }\n\n  const dateString = dateValue === '' ? dateValue : format(addMonths(addDays(getDateObjFromDate(dateValue), props.modifiers.AddDay), props.modifiers.AddMonth), dateformatConverted)\n\n\n  return (\n    <div className={styles.dateContainer}>\n      <input\n        type=\"date\"\n        name=\"\"\n        id=\"\"\n        className={styles.datePicker}\n        defaultValue={dateValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {dateString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { getCurrentDate, getDateObjFromDate } from '../../app/utilities'\nimport DateInput from '../DateInput'\n\nfunction Date(props) {\n\n  const json = props.controlJson\n  let { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd', IsBlank = false, IsVisible = true, AddDay = 0, AddMonth = 0, DateValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultDate = (DateValue === '' || DateValue === undefined) ?\n    `${getCurrentDate().toDateString()}`\n    :\n    DateValue\n\n\n  const [dateValue, setDateValue] = useState(!IsBlank ? defaultDate : '')\n\n  function onDateChangeHandler(pDate) {\n    setDateValue(pDate)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDate !== '') newJson.DateValue = pDate\n    else delete newJson.DateValue\n    newJson.IsBlank = (pDate !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateInput format={FormatDateTime} dateValue={dateValue} modifiers={{ AddDay, AddMonth }} onDateChange={(value) => onDateChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Date","import React from 'react'\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './Figure.module.scss'\n\n\nexport default function Figure(props) {\n\n  function onClickHandler(pEvent) {\n    // console.log('---> ', pEvent)\n\n    props.onClose(pEvent)\n\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.source} alt=\"figure\" />\n      <div className={styles.btnClose} onClick={onClickHandler}><FontAwesomeIcon icon={faTimes} /></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction Image(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, IsVisible = true, Images = [] } = json\n  // console.log(`--->: Image -> IsVisible`, IsVisible)\n\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [selectedFile, setSelectedFile] = useState('')\n\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    // const newJson = JSON.parse(JSON.stringify(json))\n    // newJson.Value = pEvent.target.value\n    console.log('pEvent: ', pEvent)\n    // props.updateJson(newJson)\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const images = Images.map((image, index) => (\n    <div className=\"control-row\" key={`image${index}`}>\n      <Figure source={`data:image/png; base64, ${image}`} onClose={onCloseHandler} />\n    </div>\n  ))\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          {images}\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Image\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction ImageSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, IsVisible = true, Value = '' } = json\n  // console.log(`--->: ImageSingle -> IsVisible`, IsVisible)\n\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    let imageData\n    const fileReader = new FileReader()\n    fileReader.onload = (e) => {\n      imageData = e.target.result.replace(\"data:image/png;base64,\", \"\")\n\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = imageData\n      props.updateJson(newJson)\n    }\n    fileReader.readAsDataURL(pEvent.target.files[0])\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    delete newJson.Value\n    props.updateJson(newJson)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const figure = Value !== '' ? <Figure source={`data:image/png; base64, ${Value}`} onClose={onCloseHandler} /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          <div className=\"control-row\">\n            {figure}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default ImageSingle\n","import React, { useState } from 'react'\n\nfunction ButtonAddReportDate(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddReportDate<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddReportDate","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\n\nimport QrReader from 'react-qr-reader'\nimport { format } from 'date-fns'\n\n\n\nfunction QRScanner(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Value, DateTimeValue } = json\n\n  const [isScanning, setIsScanning] = useState(false)\n  const debugMode = useSelector(selectDebugMode)\n\n  const handleScan = pData => {\n    if (pData) {\n      updateValues(pData, format(new Date(), 'yyyy-MM-dd hh:mm a'))\n      setIsScanning(false)\n    }\n  }\n\n  const handleError = pErr => {\n    console.error(pErr)\n  }\n\n  function deleteValue() {\n    updateValues('', '')\n  }\n\n  function updateValues(pScanValue, pTimestamp) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pScanValue\n    newJson.DateTimeValue = pTimestamp\n    // console.log('value: ', json)\n    props.updateJson(newJson)\n  }\n\n  const qrReader = (isScanning) ? <QrReader\n    delay={300}\n    onError={handleError}\n    onScan={handleScan}\n    style={{ width: '100%' }}\n  /> : ''\n\n  const btScan = (!isScanning) ? <button className=\"btn btn-primary\" onClick={() => setIsScanning(!isScanning)}>Scan a code</button>\n    :\n    ''\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            {btScan}\n            {qrReader}\n          </div>\n          <div className=\"control-row\">\n            <div className=\"qrscan-record qrscan-record-3cols\">\n              <div>{Value}</div>\n              <div>{DateTimeValue}</div>\n              <button className=\"btn btn-secondary btn-small\" onClick={deleteValue}>delete</button>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\n\nexport default QRScanner\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport Modal from '../Modal'\n\nimport QrReader from 'react-qr-reader'\nimport { format } from 'date-fns'\n\n\nfunction QRScannerList(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Value, DateTimeValue } = json\n\n  const [isScanning, setIsScanning] = useState(false)\n  const [scanOffIndex, setScanOffIndex] = useState(-1)\n\n  const debugMode = useSelector(selectDebugMode)\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalOptions, setModalOptions] = useState({ message: '' })\n\n  const handleScan = pData => {\n    if (pData) {\n\n      const newList = JSON.parse(Value)\n\n      if (scanOffIndex < 0) {\n        newList.push({ Id: newList.length, Name: pData, ScanOnDateTime: format(new Date(), 'yyyy-MM-dd hh:mm a') })\n      }\n      else {\n        if (pData === newList[scanOffIndex].Name) {\n          newList[scanOffIndex].ScanOffDateTime = format(new Date(), 'yyyy-MM-dd hh:mm a')\n          // console.log('---> Add scan off, scanOffIndex on: ', newList[scanOffIndex])\n        }\n        else {\n          setModalOptions({ message: 'Please rescan the same QR code to sign off', bgColor: '#000000', callback: null })\n          setIsModalVisible(true)\n        }\n        setScanOffIndex(-1)\n      }\n\n      updateValues(newList)\n      setIsScanning(false)\n\n    }\n  }\n\n  useEffect(() => {\n    console.log(`--->: QRScannerList -> scanOffIndex`, scanOffIndex)\n    if (scanOffIndex >= 0) setIsScanning(true)\n  }, [scanOffIndex])\n\n  const handleError = pErr => {\n    console.error(pErr)\n  }\n\n  function deleteValue(pIndex) {\n    setModalOptions({\n      message: 'Are you sure you want to delete?', bgColor: '#000000', callback: () => {\n        const newList = JSON.parse(Value).filter((value, index) => index !== pIndex)\n        updateValues(newList)\n        setIsModalVisible(false)\n      }\n    })\n    setIsModalVisible(true)\n\n  }\n\n  function updateValues(pValue) {\n    // console.log('value: ', pValue)\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = JSON.stringify(pValue)\n    // newJson.DateTimeValue = pTimestamp\n    props.updateJson(newJson)\n  }\n\n  const qrReader = (isScanning) ? <QrReader\n    delay={300}\n    onError={handleError}\n    onScan={handleScan}\n    style={{ width: '100%' }}\n  /> : ''\n\n  const btScan = (!isScanning) ? <button className=\"btn btn-primary\" onClick={() => setIsScanning(!isScanning)}>Add to QR Scanner list</button>\n    :\n    ''\n\n  const scanList = JSON.parse(Value).map((value, index) => {\n    return (\n      <div key={`scan${index}`} className=\"qrscan-record\">\n        <div>{value.Name}</div>\n        <div>{value.ScanOnDateTime || <button className=\"btn btn-primary btn-small\" onClick={() => setScanOffIndex(index)}>Scan Off</button>}</div>\n        <div>{value.ScanOffDateTime || <button className=\"btn btn-primary btn-small\" onClick={() => setScanOffIndex(index)}>Scan Off</button>}</div>\n        <button className=\"btn btn-secondary btn-small\" onClick={() => deleteValue(index)}>delete</button>\n      </div>\n    )\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            {btScan}\n            {qrReader}\n          </div>\n          <div className=\"control-row\">\n            <div className=\"qrscan-record\">\n              <div>Name</div>\n              <div>Scan On</div>\n              <div>Scan Off</div>\n              <span></span>\n            </div>\n            {scanList}\n          </div>\n        </div>\n        <Modal\n          visibility={isModalVisible}\n          toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n          message={modalOptions.message}\n          css={{ backgroundColor: '#000000' }}\n          backdrop={'rgba(0,0,0,0.3)'}\n          callback={modalOptions.callback}\n        />\n      </div >\n      :\n      ''\n  )\n\n}\n\nexport default QRScannerList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport * as htmlToImage from 'html-to-image'\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image'\n\nimport {\n  selectCurrentUser\n} from '../../features/json/jsonSlice'\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Signature(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature = '' } = json\n  const signatureDisplay = useRef(null)\n\n  const debugMode = useSelector(selectDebugMode)\n  const username = useSelector(selectCurrentUser)\n\n  const [signatureText, setSignatureText] = useState()\n  const [selectedFont, setSelectedFont] = useState('')\n  const [isSigning, setIsSigning] = useState(false)\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" }\n  ]\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage()\n  }, [selectedFont])\n\n  function generateImage() {\n\n    htmlToImage.toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\")\n\n        const newJson = JSON.parse(JSON.stringify(json))\n        newJson.Signature = rawData\n        // console.log('value: ', json)\n        props.updateJson(newJson)\n      })\n      .catch(function (error) {\n        console.error('oops, something went wrong!', error)\n      })\n\n\n  }\n\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value)\n  }\n  function dropdownChangeHandler(pEvent) {\n\n    setSelectedFont(pEvent.target.value)\n\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning)\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => <option key={index} value={value.name}>{value.label}</option>)\n\n  const editSignature = isSigning ? <div className=\"control-row control-inline\">\n    <input type=\"text\" name=\"signatureText\" id=\"signatureText\" placeholder=\"Your Name\" onChange={textChangeHandler} />\n    <select name=\"fontDropdown\" id=\"fontDropdown\" onChange={dropdownChangeHandler}>\n      <option value=\"\">Choose a style</option>\n      {fontDropdownOptions}\n    </select>\n  </div>\n    : ''\n\n  const btnSign = !isSigning ? <div className=\"control-row\">\n    <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>Sign</button>\n  </div>\n    :\n    ''\n\n\n  const signature = <img src={`data:image/png;base64,${Signature}`} id={Id} alt=\"\" width=\"400px\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {editSignature}\n          <div className=\"control-row\">\n            {btnSign}\n            <div className=\"signature-display\">\n              {signature}\n            </div>\n          </div>\n        </div>\n        <div id=\"signaturePad\"></div>\n        <div className=\"signature-container\">\n          <div ref={signatureDisplay} className={`signature-preview ${selectedFont}`}>\n            {signatureText}\n            <div className=\"signature-user\">{username}</div>\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\n\nexport default Signature\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport * as htmlToImage from 'html-to-image'\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image'\nimport { format } from 'date-fns'\n\nimport {\n  selectCurrentUser\n} from '../../features/json/jsonSlice'\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateTimeValue } = json\n  const signatureDisplay = useRef(null)\n\n  const debugMode = useSelector(selectDebugMode)\n  const username = useSelector(selectCurrentUser)\n\n  const [signatureText, setSignatureText] = useState()\n  const [selectedFont, setSelectedFont] = useState('')\n  const [isSigning, setIsSigning] = useState(false)\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" }\n  ]\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage()\n  }, [selectedFont])\n\n  function generateImage() {\n\n    htmlToImage.toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\")\n\n        const newJson = JSON.parse(JSON.stringify(json))\n        newJson.Signature = rawData\n        newJson.DateTimeValue = format(new Date(), 'yyyy-MM-dd hh:mm:ss')\n        props.updateJson(newJson)\n      })\n      .catch(function (error) {\n        console.error('oops, something went wrong!', error)\n      })\n\n\n  }\n\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value)\n  }\n  function dropdownChangeHandler(pEvent) {\n\n    setSelectedFont(pEvent.target.value)\n\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning)\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => <option key={index} value={value.name}>{value.label}</option>)\n\n  const editSignature = isSigning ? <div className=\"control-row control-inline\">\n    <input type=\"text\" name=\"signatureText\" id=\"signatureText\" placeholder=\"Your Name\" onChange={textChangeHandler} />\n    <select name=\"fontDropdown\" id=\"fontDropdown\" onChange={dropdownChangeHandler}>\n      <option value=\"\">Choose a style</option>\n      {fontDropdownOptions}\n    </select>\n  </div>\n    : ''\n\n  const btnSign = !isSigning ? <div className=\"control-row\">\n    <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>Sign</button>\n  </div>\n    :\n    ''\n\n\n  const signature = <img src={`data:image/png;base64,${Signature}`} alt=\"\" width=\"400px\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {editSignature}\n          <div className=\"control-row\">\n            {btnSign}\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateTimeValue}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"signaturePad\"></div>\n        <div className=\"signature-container\">\n          <div ref={signatureDisplay} className={`signature-preview ${selectedFont}`}>\n            {signatureText}\n            <div className=\"signature-user\">{username}</div>\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDateTime\n","import React, { useState, useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport * as htmlToImage from 'html-to-image'\nimport { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image'\nimport { format } from 'date-fns'\n\nimport {\n  selectCurrentUser\n} from '../../features/json/jsonSlice'\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDate(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateValue } = json\n  const signatureDisplay = useRef(null)\n\n  const debugMode = useSelector(selectDebugMode)\n  const username = useSelector(selectCurrentUser)\n\n  const [signatureText, setSignatureText] = useState()\n  const [selectedFont, setSelectedFont] = useState('')\n  const [isSigning, setIsSigning] = useState(false)\n\n  const fontList = [\n    { label: \"Style 01\", name: \"signature-font01\" },\n    { label: \"Style 02\", name: \"signature-font02\" },\n    { label: \"Style 03\", name: \"signature-font03\" },\n    { label: \"Style 04\", name: \"signature-font04\" }\n  ]\n\n  useEffect(() => {\n    if (selectedFont.length > 0) generateImage()\n  }, [selectedFont])\n\n  function generateImage() {\n\n    htmlToImage.toPng(signatureDisplay.current)\n      .then(function (dataUrl) {\n\n        const rawData = dataUrl.replace(\"data:image/png;base64,\", \"\")\n\n        const newJson = JSON.parse(JSON.stringify(json))\n        newJson.Signature = rawData\n        newJson.DateValue = format(new Date(), 'yyyy-MM-dd')\n        props.updateJson(newJson)\n      })\n      .catch(function (error) {\n        console.error('--> Something went wrong!', error)\n      })\n\n\n  }\n\n\n  function textChangeHandler(pEvent) {\n    setSignatureText(pEvent.target.value)\n  }\n  function dropdownChangeHandler(pEvent) {\n\n    setSelectedFont(pEvent.target.value)\n\n  }\n  function signClickHandler(pEvent) {\n    setIsSigning(!isSigning)\n  }\n\n  const fontDropdownOptions = fontList.map((value, index) => <option key={index} value={value.name}>{value.label}</option>)\n\n  const editSignature = isSigning ? <div className=\"control-row control-inline\">\n    <input type=\"text\" name=\"signatureText\" id=\"signatureText\" placeholder=\"Your Name\" onChange={textChangeHandler} />\n    <select name=\"fontDropdown\" id=\"fontDropdown\" onChange={dropdownChangeHandler}>\n      <option value=\"\">Choose a style</option>\n      {fontDropdownOptions}\n    </select>\n  </div>\n    : ''\n\n  const btnSign = !isSigning ? <div className=\"control-row\">\n    <button className=\"btn btn-primary btn-small\" onClick={signClickHandler}>Sign</button>\n  </div>\n    :\n    ''\n\n\n  const signature = <img src={`data:image/png;base64,${Signature}`} alt=\"\" width=\"400px\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {editSignature}\n          <div className=\"control-row\">\n            {btnSign}\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateValue}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div id=\"signaturePad\"></div>\n        <div className=\"signature-container\">\n        <div ref={signatureDisplay} className={`signature-preview ${selectedFont}`}>\n            {signatureText}\n            <div className=\"signature-user\">{username}</div>\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDate\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport {\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\n// import { selectDocumentStatus, setDocumentStatus } from '../../features/json/jsonSlice'\n// import { useDispatch } from 'react-redux'\n\nexport default function Matrix(props) {\n\n  const json = props.controlJson\n  // console.log(`-> json`, json)\n\n  const { Type, Id, Title, Columns, Rows, Elements, IsVisible = true } = json\n\n  console.log(`--->: Matrix -> Elements`, Elements)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  const components = {\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures\n  }\n\n  let matrixLayout = []\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j]\n      // console.log(`--->: Matrix -> element`, element)\n      const componentName = getControlName(element.Type)\n      // console.log(`--->: Matrix -> componentName`, componentName)\n\n      const Component = components[componentName]\n      const controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n\n      matrixLayout.push(<div key={`${i}-${j}`} className=\"matrix-box\" style={{ backgroundColor: i % 2 > 0 ? 'rgb(244, 244, 244)' : '', borderBottom: i % 2 > 0 ? '1px solid #CCC' : '' }}>{controlComponent}</div>)\n\n    }\n\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log(`--->: updateJsonHandler -> pJson`, pJson)\n    // console.log('updating... ', documentStatus)\n    // if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n\n    // const controlPath = getControlPathById(pJson.Id)\n    // // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    // let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // // ONLY FIST SUBLEVEL\n    // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    // dispatch(setJson(jsonToUpdate))\n  }\n\n\n  // let layout = Elements.map((item, index) => <div key={index}>boxCol</div>)\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container control-container-matrix\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div style={{ display: 'grid', gridTemplateColumns: `repeat(${Columns}, 1fr)`, gridTemplateRows: `repeat(${Rows}, 1fr)` }}>\n              {matrixLayout}\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Checkbox(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, EntryTitle, Details, HasUnderLine, IsVisible = true, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Checkbox -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n\n    const checkboxValue = pEvent.target.checked === true ? 'Y' : 'N'\n    const valuesToExport = { Type, Id, Value: checkboxValue }\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = checkboxValue\n    // console.log('value: ', newJson.Value, json)\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const commentText = pEvent.target.value\n    const valuesToExport = { Id, CommentValue: commentText }\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = commentText\n    props.updateJson(newJson)\n  }\n\n  useEffect(() => {\n    // console.log('Checkbox set data :', json)\n  }, [json])\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className={`control ${HasUnderLine ? 'control-underline' : ''}`}>\n          <h3>{Title}</h3>\n          {details}\n          <input type=\"checkbox\" defaultChecked={Value === 'Y'} onChange={onChangeHandler} />\n          {entryTitle}\n          {comment}\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Checkbox\n","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Boolean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, HasUnderLine, EntryTitle, Details, IsVisible = true, Value = '', CommentValue = '' } = json\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n\n  function onChangeHandler(pEvent) {\n\n    const booleanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: booleanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = booleanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-inline\">\n            {details}\n          </div>\n          <div className={`control-inline ${HasUnderLine ? 'control-underline' : ''}`}>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n            </div>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n            </div>\n          </div>\n          <div className=\"control-inline\">\n            {entryTitle}\n          </div>\n          <div className=\"control-inline\">\n            {comment}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Boolean","import React, { useState, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Trilean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, HideNa, IsVisible = true, Collapsible, IsCollapsed, EntryTitle, Details, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Trilean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n\n    const trileanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: trileanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = trileanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n\n  useEffect(() => {\n    // console.log('Trilean set data :', json)\n  }, [json])\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-row\">\n            {details}\n          </div>\n          <div className=\"control-row\">\n            <div className=\"control-inline\">\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"yes\">Yes</label>\n                <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n              </div>\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"no\">No</label>\n                <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n              </div>\n              <div className={`${HideNa ? 'hidden' : ''} control-checkbox`}>\n                <label htmlFor=\"na\">N/A</label>\n                <input type=\"radio\" id=\"na\" name={Id} value=\"NA\" checked={Value === 'NA'} onChange={onChangeHandler} />\n              </div>\n            </div>\n          </div>\n          <div className=\"control-row\">\n            {comment}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Trilean\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction TrileanLabel(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Buttons, CommentValue, HasUnderLine, ShowComment, HideNa, Value } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // console.log('---> radio click: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n\n  const buttons = Buttons !== undefined ? Buttons.map((button, index) => {\n    const computedBackground = Value === button.Button ? button.BackgroundColorSelected : button.BackgroundColor\n    if (!(HideNa && button.Button === 'NA')) return (\n\n      <React.Fragment key={`${Id}${index}`}>\n\n        <input type=\"radio\" name={Id} id={`${Id}${button.Label}`} value={button.Button} className=\"radiocheck-hidden\" onChange={onChangeHandler} />\n        <label htmlFor={`${Id}${button.Label}`} className=\"radiocheck-button\" style={{ backgroundColor: computedBackground }}>\n          {button.Label}\n        </label>\n\n      </React.Fragment>\n    )\n  }) : ''\n\n  const comment = ShowComment ? <div className=\"control-row\">{CommentValue}</div> : ''\n  const underline = HasUnderLine ? <hr /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {comment}\n          <div className=\"control-row\">\n            {buttons}\n            {underline}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\nexport default TrileanLabel\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId, selectDebugMode } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction ListSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, Value = '', IsVisible = true } = json\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    if (selectedValues[0] !== pEvent.target.id) setSelectedValues([pEvent.target.id])\n    else setSelectedValues([])\n    updateJSON(pEvent.target.id)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = selectedValues.findIndex(value => item === value) > -1\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\nexport default ListSingle","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId, selectDebugMode } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction ListMultiple(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, SelectedValue = [], IsVisible = true } = json\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState(SelectedValue || [])\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: { mass: 1, tension: 500, friction: 26 }\n  })\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        const newValues = selectedValues.filter(item => item !== targetText)\n        setSelectedValues(newValues)\n        updateJSON(newValues)\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    const newValues = (selectedValues.findIndex(item => item === currentItem) < 0) ? [...selectedValues, currentItem]\n      : selectedValues.filter(item => item !== currentItem)\n    setSelectedValues(newValues)\n    updateJSON(newValues)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.SelectedValue = pValue\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = selectedValues.findIndex(value => item === value) > -1\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n\n          <h3>{Title}</h3>\n          <div className=\"input-select\" onClick={listClickHandler}>\n            <div className=\"input-select-items\">\n              {selectedPills}\n            </div>\n            <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n          </div>\n          <animated.div style={animatedListProps} className=\"input-list\">\n            <div className=\"input-list-searchbar\">\n              <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n              <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n            </div>\n            <div className=\"input-list-items\">{itemList}</div>\n          </animated.div>\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ListMultiple\n","import React, { useState } from 'react'\n\nimport { format, addHours } from 'date-fns'\n\nimport { getDateObjFromTime } from '../app/utilities'\n\nimport styles from './TimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function TimeInput(props) {\n\n  // console.log(`--->: TimeInput -> timeValue received: `, props.timeValue, getDateObjFromTime(props.timeValue))\n\n  const timeformatConverted = props.format.replace('tt', 'a')\n  const [timeValue, setTimeValue] = useState(props.timeValue)\n\n  function onClearHandler(pEvent) {\n    setTimeValue('')\n    props.onTimeChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setTimeValue(pValue)\n    props.onTimeChange(pValue)\n  }\n\n  const timeString = timeValue !== '' ? format(addHours(getDateObjFromTime(timeValue), props.modifiers.AddHour), timeformatConverted)\n    :\n    ''\n\n  return (\n    <div className={styles.timeContainer}>\n      <input\n        type=\"time\"\n        name=\"\"\n        id=\"\"\n        className={styles.timePicker}\n        value={timeValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {timeString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport TimeInput from '../../components/TimeInput'\n\nfunction Time(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'hh:mm tt', IsBlank = false, IsVisible = true, AddHour = 0, TimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultTime = (TimeValue === '' || TimeValue === undefined) ?\n    `${new Date().getHours() < 10 ?\n      '0' + new Date().getHours()\n      :\n      new Date().getHours()}:${new Date().getMinutes() < 10 ?\n        '0' + new Date().getMinutes()\n        :\n        new Date().getMinutes()}`\n    :\n    TimeValue\n  // console.log(`TimeValue: ${TimeValue} , defaultTime: ${defaultTime}`)\n\n  const [timeValue, setTimeValue] = useState(!IsBlank ? defaultTime : '')\n\n  function onTimeChangeHandler(pTime) {\n    console.log(`--->: onTimeChangeHandler -> pTime`, pTime)\n    setTimeValue(pTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pTime !== '') newJson.TimeValue = pTime\n    else delete newJson.TimeValue\n    newJson.IsBlank = (pTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <TimeInput format={FormatDateTime} timeValue={timeValue} modifiers={{ AddHour }} onTimeChange={(value) => onTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Time\n","import React, { useState } from 'react'\n\nimport { format } from 'date-fns'\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateTimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function DateTimeInput(props) {\n\n  const dateFormatConverted = props.format.replace(/ddd/g, 'eee').replace('tt', 'a')\n  // console.log(`--->: DateTimeInput -> dateFormatConverted`, dateFormatConverted)\n\n  const dateTimeValue = props.dateTimeValue\n  // console.log(`--->: DateTimeInput -> dateTimeValue: `, dateTimeValue)\n\n  let dateValue = (dateTimeValue !== '') ? `${format(new Date(dateTimeValue), 'yyyy-MM-dd')}` : format(new Date(), 'yyyy-MM-dd')\n  let timeValue = (dateTimeValue !== '') ? `${new Date(dateTimeValue).toLocaleTimeString()}` : new Date().toLocaleTimeString()\n\n  function onDateChangeHandler(pEvent) {\n    // console.log('onDateChangeHandler pEvent.target.value: ', pEvent.target.value, timeValue)\n    dateValue = pEvent.target.value\n    props.onDateTimeChange(pEvent.target.value + ' ' + timeValue)\n  }\n  function onTimeChangeHandler(pEvent) {\n    // console.log('onTimeChangeHandler pEvent.target.value', dateValue, pEvent.target.value)\n    timeValue = pEvent.target.value\n    props.onDateTimeChange(dateValue + ' ' + pEvent.target.value)\n  }\n\n  function onClearHandler() {\n    dateValue = ''\n    timeValue = ''\n    props.onDateTimeChange('')\n  }\n\n  const dateTimeStringValue = (dateTimeValue !== '') ? format(new Date(dateTimeValue), dateFormatConverted) : ''\n\n  return (\n    <div className={styles.dateTimeContainer}>\n      <div>\n        <input type=\"date\" className={styles.datePicker} name=\"\" id=\"\" onChange={onDateChangeHandler} />\n        <input type=\"time\" className={styles.timePicker} name=\"\" id=\"\" onChange={onTimeChangeHandler} />\n      </div>\n      {dateTimeStringValue}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport DateTimeInput from '../../components/DateTimeInput'\n\nimport { getCurrentDate, getDateObjFromDateString } from '../../app/utilities'\n\nfunction DateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd hh:mm tt', IsBlank = false, IsVisible = true, DateTimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const defaultDateTime = (DateTimeValue === '' || DateTimeValue === undefined) ?\n    `${getCurrentDate().toDateString() + ' ' + getCurrentDate().toLocaleTimeString()}`\n    :\n    DateTimeValue\n\n  const [dateTimeValue, setDateTimeValue] = useState(!IsBlank ? defaultDateTime : '')\n  // const dateTimeValue = (typeof DateTimeValue === 'string' && DateTimeValue !== '') ? getDateObjFromDateString(DateTimeValue) : DateTimeValue\n  // console.log(`--->: DateTime -> dateTimeValue: `, dateTimeValue)\n\n\n  function onDateTimeChangeHandler(pDateTime) {\n    // console.log('---> onDateTimeChangeHandler: ', pDateTime)\n\n    setDateTimeValue(pDateTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDateTime !== '') newJson.DateTimeValue = pDateTime\n    else delete newJson.DateTimeValue\n    newJson.IsBlank = (pDateTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateTimeInput format={FormatDateTime} dateTimeValue={dateTimeValue} onDateTimeChange={(value) => onDateTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default DateTime\n","import React from 'react'\n\nfunction TimeLabel() {\n  return (\n    <div>\n      TimeLabel\n    </div>\n  )\n}\n\nexport default TimeLabel\n","import React from 'react'\n\nfunction DateLabel() {\n  return (\n    <div>\n      DateLabel\n    </div>\n  )\n}\n\nexport default DateLabel\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentAction\n} from '../../features/json/jsonSlice'\n\nfunction ButtonAddSignature(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function clickAddSignatureHandler() {\n    dispatch(setCurrentAction('add-signature'))\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\" onClick={clickAddSignatureHandler}>\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddSignature\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Modal from '../Modal'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentAction,\n  selectCurrentAction\n} from '../../features/json/jsonSlice'\n\n\nimport { format } from 'date-fns'\n\nfunction RegisterSignatures(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Value } = json\n\n  const debugMode = useSelector(selectDebugMode)\n  const currentAction = useSelector(selectCurrentAction)\n  const dispatch = useDispatch()\n\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalOptions, setModalOptions] = useState({ message: '' })\n\n  useEffect(() => {\n    // console.log('---> currentAction: ', currentAction)\n    if (currentAction === 'add-signature') {\n      // CHECK IF SIGNATURE IS EMPTY\n      const registerValues = JSON.parse(Value)\n      registerValues.push({\n        Id: registerValues.length + 1,\n        Name: document.getElementById('SignatureSignOnOffName').value,\n        SignOnDateTime: format(new Date(), 'yyyy-MM-dd hh:mm:ss'),\n        Signature: document.getElementById('SignatureSignOnOffSignature').src.replace(\"data:image/png;base64,\", \"\"),\n      })\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = JSON.stringify(registerValues)\n      props.updateJson(newJson)\n\n      // Need to be cleared in the JSON\n      // document.getElementById('SignatureSignOnOffName').value = ''\n      document.getElementById('signatureText').value = ''\n      document.getElementById('SignatureSignOnOffSignature').src = ''\n      dispatch(setCurrentAction(''))\n    }\n\n  }, [currentAction])\n\n  function signOffClickHandler(pId) {\n    setModalOptions({\n      message: 'Are you sure you want to sign off?', bgColor: '#000000', callback: () => {\n        const registerValues = JSON.parse(Value)\n        const signatureIndex = registerValues.findIndex(element => element.Id === pId)\n\n        registerValues[signatureIndex].SignOffDateTime = format(new Date(), 'yyyy-MM-dd hh:mm:ss')\n        // console.log('---> SIGNING OFF: ', registerValues)\n\n        const newJson = JSON.parse(JSON.stringify(json))\n        // console.log(`--->: signOffClickHandler -> newJson`, newJson)\n        newJson.Value = JSON.stringify(registerValues)\n        props.updateJson(newJson)\n\n        setIsModalVisible(false)\n      }\n    })\n    setIsModalVisible(true)\n\n\n\n  }\n\n  const registerList = JSON.parse(Value).reverse().map((item, index) => {\n    return (\n      <div key={index} className=\"register-signature-row\">\n        <img src={`data:image/png;base64,${item.Signature}`} alt=\"\" width=\"250px\" />\n        <div>\n          <p>{item.Name}</p>\n          <p>Sign On: {item.SignOnDateTime}</p>\n          <p>Sign Off: {item.SignOffDateTime || <button className=\"btn btn-primary btn-small\" onClick={() => signOffClickHandler(item.Id)}>Sign</button>}</p>\n        </div>\n      </div>\n    )\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          {registerList}\n        </div>\n        <Modal\n          visibility={isModalVisible}\n          toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n          message={modalOptions.message}\n          css={{ backgroundColor: '#000000' }}\n          backdrop={'rgba(0,0,0,0.3)'}\n          callback={modalOptions.callback}\n        />\n      </div>\n      :\n      ''\n  )\n}\n\nexport default RegisterSignatures","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './SelectSearchable.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction useVisible(initialIsVisible) {\n  const [isVisible, setIsVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  }, [])\n  return { ref, isVisible, setIsVisible }\n}\n\n\nexport default function SelectSearchable(props) {\n\n  const [keyword, setKeyword] = useState('')\n  const input = useRef(null)\n\n  const items = props.items\n  const allowMultiple = props.allowMultiple\n  const width = props.width\n\n\n  const filteredList = keyword.length > 0 ? items.filter(item => String(item.label).toLowerCase().includes(keyword.toLowerCase())) : items\n\n  const { ref, isVisible, setIsVisible } = useVisible(false, input)\n\n  function onClickItemHandler(pEvent, pItem) {\n    pEvent.stopPropagation()\n    // console.log(`--->: onClickItemHandler -> pEvent.target.className: `, pEvent.currentTarget.className)\n    // console.log('---> delete here: ', pEvent.currentTarget.className.includes('delete'))\n\n    if (pEvent.currentTarget.className.includes('delete')) {\n      props.onSelectItem(props.selectedItems.filter(item => item.Id !== pItem.Id))\n      return\n    }\n\n    if (allowMultiple) {\n      const clickedItemIndex = props.selectedItems.findIndex(item => item === pItem)\n\n      if (clickedItemIndex > -1) {\n        props.onSelectItem(props.selectedItems.filter(item => item !== pItem))\n      }\n      else props.onSelectItem([...props.selectedItems, pItem])\n    }\n    else {\n      props.onSelectItem([pItem])\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    if (input.current) input.current.focus()\n  }, [isVisible])\n\n  const cssWidth = width === \"s\" ? styles.ListSmall : width === \"m\" ? styles.ListMedium : styles.ListLarge\n\n  return (\n    <div className={styles.selectSearchable_Container}>\n      <div className={styles.selectSearchable_Header} onClick={e => setIsVisible(!isVisible)}>\n        <div className={styles.selectSearchable_SelectedContainer}>\n          {props.selectedItems.map((item, index) => <div key={index} className={styles.selectSearchable_SelectedItem}>\n            {item.label}\n            <span className={styles.selectedItem_delete} onClick={(e) => onClickItemHandler(e, item)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>)}\n        </div>\n        <div className={styles.selectSearchable_Trigger}>\n          <FontAwesomeIcon icon={isVisible ? faAngleDown : faAngleUp} />\n        </div>\n      </div>\n      {isVisible && <div style={{ position: 'absolute' }} className={`${styles.selectSearchable_List} ${cssWidth}`} ref={ref}>\n        <div className={styles.selectSearchable_SearchContainer}>\n          <input type=\"text\" value={keyword} onChange={e => setKeyword(e.target.value)} ref={input}></input>\n          <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n        </div>\n        <div className={styles.selectSearchable_ItemsContainer}>\n          {filteredList.map((item, index) => <span key={index} className={`${styles.selectItem} ${props.selectedItems.findIndex(selectedItem => item.label === selectedItem.label) > -1 ? styles.selectSearchable_SelectedItem_Selected : ''}`} onClick={(e) => onClickItemHandler(e, item)}>{item.label}</span>)}\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport SelectSearchable from './../SelectSearchable'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentContact,\n  setCurrentAction\n} from '../../features/json/jsonSlice'\n\n\n\nfunction SearchableListEntryDialogSMS(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n\n  const debugMode = useSelector(selectDebugMode)\n  const dispatch = useDispatch()\n\n  const [contactList, setContactList] = useState([])\n  const [contactDropdownList, setContactDropdownList] = useState([])\n  const [selectedContact, setSelectedContact] = useState([])\n\n  const environment = 'https://api-uat.extrack.com/V1.0/'\n  const projectID = 1810\n\n  const apiUrl = `${environment}Project/${projectID}/Directory/Contacts`\n  const token = JSON.parse(localStorage.getItem('dynFormToken'))\n\n  const apiHeaders = new Headers()\n  apiHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n  const requestOptions = {\n    method: 'GET',\n    headers: apiHeaders,\n    redirect: 'follow'\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        setContactList(result)\n        setContactDropdownList(\n          result.map(item => {\n            return { Id: item.Id, label: `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}` }\n          })\n        )\n      })\n  }, [])\n\n  const addContact = (pItem) => {\n\n    const contactIndex = contactList.findIndex((contact) => contact.Id === pItem[0].Id)\n    const contactDetails = contactList[contactIndex]\n\n    dispatch(setCurrentContact({ name: `${contactDetails.Contact.NameFirst} ${contactDetails.Contact.NameLast}`, phoneNumber: contactDetails.Contact.Number, companyName: contactDetails.Company.Name }))\n    dispatch(setCurrentAction('add-contact'))\n    setSelectedContact(pItem)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n\n          <SelectSearchable items={contactDropdownList} selectedItems={[]} allowMultiple={false} onSelectItem={(item) => addContact(item)} />\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default SearchableListEntryDialogSMS\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentAction\n} from '../../features/json/jsonSlice'\n\n\nfunction ButtonAddSMS(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function clickAddContactHandler(pEvent) {\n    dispatch(setCurrentAction('add-contact'))\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\" onClick={clickAddContactHandler}>\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonAddSMS","import React, { useEffect } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentAction,\n  setDocumentStatus,\n  selectCurrentAction,\n  setCurrentContact,\n  selectCurrentContact\n} from '../../features/json/jsonSlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nfunction SearchableSMSListView(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Title2, Id, Api, Value, IsVisible = true } = json\n  // console.log(`--->: Text -> json:`, json)\n\n  const currentAction = useSelector(selectCurrentAction)\n  const currentContact = useSelector(selectCurrentContact)\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  useEffect(() => {\n    if (currentAction === 'add-contact') {\n      console.log('---> currentAction: ', currentAction)\n      console.log('---> currentContact: ', currentContact)\n\n      const registerValues = JSON.parse(Value)\n      registerValues.push({\n        Name: currentContact.name,\n        Number: currentContact.phoneNumber,\n        CompanyName: currentContact.companyName,\n      })\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = JSON.stringify(registerValues)\n      props.updateJson(newJson)\n\n      dispatch(setCurrentAction('reset-currentContact'))\n      dispatch(setCurrentContact(''))\n    }\n\n  }, [currentAction])\n\n  function deleteContact(pContactIndex) {\n    const registerValues = JSON.parse(Value).filter((item, index) => index !== pContactIndex)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = JSON.stringify(registerValues)\n    props.updateJson(newJson)\n  }\n\n  const contactList = JSON.parse(Value).map((contact, index) => {\n    return (\n      <div key={index} className=\"listview-record\">\n        <div>{contact.Name}</div>\n        <div>{contact.CompanyName}</div>\n        <div>{contact.Number}</div>\n        <button className=\"btn btn-secondary btn-small btn-icon\" onClick={() => deleteContact(index)}><FontAwesomeIcon icon={faTrash} />delete</button>\n      </div>\n    )\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          {/* <h3>{Title}</h3> */}\n          <div className=\"control-row\">\n            {contactList}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default SearchableSMSListView\n","import React, { useState, useEffect } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\n\nimport SelectSearchable from './../SelectSearchable'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentContact,\n  setCurrentAction\n} from '../../features/json/jsonSlice'\n\n\n\nfunction SearchableListEntryDialogEmail(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n\n  const debugMode = useSelector(selectDebugMode)\n  const dispatch = useDispatch()\n\n  const [contactList, setContactList] = useState([])\n  const [contactDropdownList, setContactDropdownList] = useState([])\n  const [selectedContact, setSelectedContact] = useState([])\n\n  const environment = 'https://api-uat.extrack.com/V1.0/'\n  const projectID = 1810\n\n  const apiUrl = `${environment}Project/${projectID}/Directory/Contacts`\n  const token = JSON.parse(localStorage.getItem('dynFormToken'))\n\n  const apiHeaders = new Headers()\n  apiHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n  const requestOptions = {\n    method: 'GET',\n    headers: apiHeaders,\n    redirect: 'follow'\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        setContactList(result)\n        setContactDropdownList(\n          result.map(item => {\n            return { Id: item.Id, label: `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Contact.Email || ''} | ${item.Company.Name}` }\n          })\n        )\n      })\n  }, [])\n\n  const addContact = (pItem) => {\n\n    const contactIndex = contactList.findIndex((contact) => contact.Id === pItem[0].Id)\n    const contactDetails = contactList[contactIndex]\n\n    dispatch(setCurrentContact({ name: `${contactDetails.Contact.NameFirst} ${contactDetails.Contact.NameLast}`, email: contactDetails.Contact.Email, companyName: contactDetails.Company.Name }))\n    dispatch(setCurrentAction('add-contact'))\n    setSelectedContact(pItem)\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n\n          <SelectSearchable items={contactDropdownList} selectedItems={[]} allowMultiple={false} onSelectItem={(item) => addContact(item)} />\n\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default SearchableListEntryDialogEmail\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentAction\n} from '../../features/json/jsonSlice'\n\n\nfunction ButtonAddEmail(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function clickAddContactHandler(pEvent) {\n    dispatch(setCurrentAction('add-contact'))\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\" onClick={clickAddContactHandler}>\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default ButtonAddEmail\n","import React, { useEffect } from 'react'\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\nimport {\n  setCurrentAction,\n  setDocumentStatus,\n  selectCurrentAction,\n  setCurrentContact,\n  selectCurrentContact\n} from '../../features/json/jsonSlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nfunction SearchableEmailListView(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Title2, Id, Api, Value, IsVisible = true } = json\n  // console.log(`--->: Text -> json:`, json)\n\n  const currentAction = useSelector(selectCurrentAction)\n  const currentContact = useSelector(selectCurrentContact)\n  const dispatch = useDispatch()\n\n  const debugMode = useSelector(selectDebugMode)\n\n  useEffect(() => {\n    if (currentAction === 'add-contact') {\n      console.log('---> currentAction: ', currentAction)\n      console.log('---> currentContact: ', currentContact)\n\n      const registerValues = JSON.parse(Value)\n      registerValues.push({\n        Name: currentContact.name,\n        Email: currentContact.email,\n        CompanyName: currentContact.companyName,\n      })\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = JSON.stringify(registerValues)\n      props.updateJson(newJson)\n\n      dispatch(setCurrentAction('reset-currentContact'))\n      dispatch(setCurrentContact(''))\n    }\n\n  }, [currentAction])\n\n  function deleteContact(pContactIndex) {\n    const registerValues = JSON.parse(Value).filter((item, index) => index !== pContactIndex)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = JSON.stringify(registerValues)\n    props.updateJson(newJson)\n  }\n\n  const contactList = JSON.parse(Value).map((contact, index) => {\n    return (\n      <div key={index} className=\"listview-record\">\n        <div>{contact.Name}</div>\n        <div>{contact.CompanyName}</div>\n        <div>{contact.Email}</div>\n        <button className=\"btn btn-secondary btn-small btn-icon\" onClick={() => deleteContact(index)}><FontAwesomeIcon icon={faTrash} />delete</button>\n      </div>\n    )\n  })\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          {/* <h3>{Title}</h3> */}\n          <div className=\"control-row\">\n            {contactList}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\n\nexport default SearchableEmailListView\n","import React, { useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nexport default function MatrixButton(props) {\n  const json = props.controlJson\n  // console.log(`-> json`, json)\n\n  const { Id, Title, Type, IsVisible = true, Selection, XAxisName, YAxisName, Legend, Columns, Rows, Elements } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const showLegend = Legend.ShowLegend\n\n  const [selectedButton, setSelectedButton] = useState([])\n\n  // const dispatch = useDispatch()\n  // dispatch(setDocumentStatus('modified'))\n\n  function buttonClickHandler(pButtonId) {\n    const buttonPath = pButtonId.split('-')\n    // console.log('---> ', buttonPath)\n    // console.log('---> Selection is: ', Selection)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n\n    if (Selection === 'single') {\n      for (let i = 0; i < newJson.Elements.length; i++) {\n        for (let j = 0; j < newJson.Elements[i].Elements.length; j++) {\n          if (newJson.Elements[i].Elements[j].Value) newJson.Elements[i].Elements[j].Value = false\n        }\n      }\n    }\n    const buttonValue = Elements[buttonPath[0]].Elements[buttonPath[1]].Value !== undefined ? Elements[buttonPath[0]].Elements[buttonPath[1]].Value : false\n\n    newJson.Elements[buttonPath[0]].Elements[buttonPath[1]].Value = !buttonValue\n    props.updateJson(newJson)\n  }\n\n  let matrixLayout = []\n  for (let i = 0; i < Elements.length; i++) {\n    // console.log('---> ROW', i)\n    for (let j = 0; j < Elements[i].Elements.length; j++) {\n      // console.log('---> COL', j)\n      const element = Elements[i].Elements[j]\n      const id = `${i}-${j}`\n      const title = `${Legend.LegendValuesY.Name}: ${Legend.LegendValuesY.Values[i]}\\n${Legend.LegendValuesX.Name}: ${Legend.LegendValuesX.Values[j]}`\n\n      matrixLayout.push(<div key={id} id={id} title={title} className=\"matrix-box matrix-button\" style={{ backgroundColor: element.Value ? element.BackgroundColorSelected : element.BackgroundColor }} onClick={() => buttonClickHandler(id)}>{element.Title}</div>)\n\n    }\n\n  }\n\n\n  const legendValuesX = Legend.LegendValuesX.Values.map((item, index) => <li key={index}>{item}</li>)\n  const legendValuesY = Legend.LegendValuesY.Values.map((item, index) => <li key={index}>{item}</li>)\n\n  const legend = showLegend ?\n    <div className=\"matrix-legend\">\n      <div>\n        <h5>{Legend.LegendValuesY.Name}:</h5>\n        {legendValuesY}\n      </div>\n      <div>\n        <h5>{Legend.LegendValuesX.Name}:</h5>\n        {legendValuesX}\n      </div>\n    </div>\n    :\n    ''\n\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"matrix-container\">\n              <h4 className=\"matrix-yaxis\">{YAxisName}</h4>\n              <div style={{ display: 'grid', gridTemplateColumns: `repeat(${Columns}, 1fr)`, gridTemplateRows: `repeat(${Rows}, 1fr)` }}>\n                {matrixLayout}\n              </div>\n              <h4 className=\"matrix-xaxis\">{XAxisName}</h4>\n            </div>\n            <div className=\"matrix-footer\">\n              {legend}\n            </div>\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}","import React from 'react'\n\nfunction DocumentSummaryGrid() {\n  return (\n    <div>\n      DocumentSummaryGrid\n    </div>\n  )\n}\n\nexport default DocumentSummaryGrid\n","import React from 'react'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setDocumentStatus } from '../../features/json/jsonSlice'\n\n\nfunction ButtonSubmitRegister(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\\\n\n  const dispatch = useDispatch()\n  const debugMode = useSelector(selectDebugMode)\n\n  function onSubmitToRegisterHandler(pEvent) {\n    // console.log('onSubmitToRegisterHandler: ', pEvent )\n    dispatch(setDocumentStatus('tosend'))\n  }\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\" onClick={onSubmitToRegisterHandler}>\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonSubmitRegister\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonCloseout(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonCloseout\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction ButtonViewDocument(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const debugMode = useSelector(selectDebugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" cols=\"10\" rows=\"5\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n\n        <div className=\"control\">\n          <button className=\"btn btn-secondary\">\n            {Title}\n          </button>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ButtonViewDocument\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus,\n  selectCurrentAction,\n  setCurrentAction\n} from './jsonSlice'\n\nimport {\n  selectOptionedControls,\n  selectDebugMode,\n  selectErrorMsg,\n} from '../display/displaySlice'\n\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\n// import { useSpring, animated, config } from 'react-spring'\n// import { Keyframes, delay } from 'react-spring/renderprops'\n\nimport styles from './JsonReader.module.scss'\n\nexport default function JsonReader() {\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n  const json = useSelector(selectJson)\n  const debugMode = useSelector(selectDebugMode)\n  const errorMsg = useSelector(selectErrorMsg)\n  const optionedControls = useSelector(selectOptionedControls)\n  const documentStatus = useSelector(selectDocumentStatus)\n  const currentAction = useSelector(selectCurrentAction)\n  const dispatch = useDispatch()\n\n  const activeSectionId = useSelector(state => state.tabulation.value)\n  const currentJsonToEdit = (json.Sections !== undefined) ? json.Sections[activeSectionId] : {}\n\n  const { Title, Elements } = currentJsonToEdit\n\n  const [controls, setControls] = useState([])\n\n  useEffect(() => {\n    // console.log(`--->: JsonReader -> Section Updated: `, Elements)\n\n    if (Elements !== undefined) {\n      const controlsFromElements = Elements.map((element, index) => {\n        const componentName = getControlName(element.Type)\n        // console.log(`--->componentName: `, componentName)\n        let controlComponent\n        if (components[componentName] !== undefined) {\n          const Component = components[componentName]\n          controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n        }\n        return controlComponent\n      })\n      setControls(controlsFromElements)\n    }\n    else setControls('')\n  }, [Elements])\n\n\n  useEffect(() => {\n    if (currentAction === 'reset-currentContact') {\n\n      const smsRegisterFieldsPath = [getControlPathById('ManualSMSName'), getControlPathById('ManualSMSPhone'), getControlPathById('ManualEmailName'), getControlPathById('ManualEmailEmail')]\n\n      const newJson = JSON.parse(JSON.stringify(json))\n      smsRegisterFieldsPath.forEach((field) => {\n        if (field.index !== undefined) newJson.Sections[field.section].Elements[field.index].Value = ''\n      })\n      dispatch(setJson(newJson))\n      dispatch(setCurrentAction(''))\n    }\n\n  }, [currentAction])\n\n  // Optioned Controls ------------------------------- //\n  useEffect(() => {\n    // console.log('displayedControls updated... ', optionedControls)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n\n    if (optionedControls.hiddenControls !== undefined) optionedControls.hiddenControls.forEach(controlId => {\n      const controlPath = getControlPathById(controlId)\n      // console.log(`--->: setHidden -> controlPath`, controlPath)\n      // console.log('---> hide: ', controlId)\n\n      if (controlPath.hasOwnProperty('subsubindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = false\n      }\n      else if (controlPath.hasOwnProperty('subindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = false\n      }\n      else {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n      }\n\n      // jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n\n      // if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n      //   jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n      // }\n    })\n\n    if (optionedControls.visibleControls !== undefined) optionedControls.visibleControls.forEach(controlId => {\n      const controlPath = getControlPathById(controlId)\n      // console.log(`--->: setVisible -> controlPath`, controlPath)\n      // console.log('---> show: ', controlId)\n\n      if (controlPath.hasOwnProperty('subsubindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = true\n      }\n      else if (controlPath.hasOwnProperty('subindex')) {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].Elements[controlPath.subindex].Elements[controlPath.subsubindex].IsVisible = true\n      }\n      else {\n        jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = true\n      }\n    })\n\n    // if (json.Sections !== undefined) {\n    //   json.Sections[activeSectionId].Elements.forEach(control => {\n    //     // console.log(`--->: JsonReader -> control`, control.Id)\n    //     const controlPath = getControlPathById(control.Id)\n    //     // console.log(`--->: JsonReader -> controlPath`, controlPath)\n    //     if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n    //       jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n    //       console.log('---> reset control visibility ', control.Id, control.isVisible)\n    //     }\n    //   })\n    // }\n\n    dispatch(setJson(jsonToUpdate))\n  }, [optionedControls])\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  // function getControlName(pControlType) {\n  //   return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n  // }\n\n  function getControlPathById(pControlId) {\n    // console.log(`--->: getControlPathById -> pControlId`, pControlId)\n    const currentSection = json.Sections[activeSectionId]\n    let foundItem = {}\n    let itemPath = {}\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.Id === pControlId) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                itemPath = { section: activeSectionId, index, subindex, subsubindex }\n                foundItem = subsubitem\n              }\n            })\n          }\n\n          if (subitem.Id === pControlId) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            itemPath = { section: activeSectionId, index, subindex }\n            foundItem = subitem\n          }\n        })\n      }\n\n      if (item.Id === pControlId) {\n        // console.log('---> Trouvé item: ', item)\n        itemPath = { section: activeSectionId, index }\n        foundItem = json.Sections[activeSectionId].Elements[index]\n      }\n    })\n    // console.log('-- itemPath -> ', itemPath)\n    // return foundItem\n    return itemPath\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log('updating... ', documentStatus)\n    if (documentStatus === 'loaded') dispatch(setDocumentStatus('modified'))\n\n    const controlPath = getControlPathById(pJson.Id)\n    // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // ONLY FIST SUBLEVEL\n    jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    dispatch(setJson(jsonToUpdate))\n  }\n\n\n  // RETURN ----------------------------------------------------------------------------------------------------------------/\n\n  const skeleton = documentStatus === 'loading' ?\n    <div className=\"skeleton\">\n      {Array(12).fill('').map((item, index) => <div key={index} className={`${index % 2 === 1 ? 'skeleton-bloc-offset' : ''} skeleton-bloc`}></div>)}\n    </div>\n    :\n    ''\n\n  return (\n    <div className=\"board\">\n\n      <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div>\n\n      {skeleton}\n\n      {controls}\n\n      <textarea\n        name=\"jsonviewer\"\n        id=\"jsonviewer\"\n        className={debugMode ? `${styles.fixed}` : 'hidden'}\n        // className={styles.fixed}\n        rows=\"16\"\n        value={JSON.stringify(Elements)}\n        onChange={e => dispatch(setJson(JSON.parse(e.target.value)))}>\n      </textarea>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  selectedTabulation,\n  callSection,\n  prevSection,\n  nextSection,\n} from '../features/tabulation/tabulationSlice'\nimport { selectJson } from '../features/json/jsonSlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepBackward, faStepForward, faFastBackward, faFastForward } from '@fortawesome/free-solid-svg-icons'\nimport styles from './Tabulation.module.scss'\n\nfunction Tabulation() {\n\n  const dispatch = useDispatch()\n\n  const tabIndex = useSelector(selectedTabulation)\n  const json = useSelector(selectJson)\n\n  // const tabs = (json.Sections) ? json.Sections.map((item, index) => <div key={index}>{item.Title}</div>) : ''\n  const tabLength = (json.Sections) ? json.Sections.length : 0\n  const tabTitle = (json.Sections) ? json.Sections[tabIndex].Title : ''\n\n  // React.useEffect(() => {\n  //   console.log('TabulationUpdated! : ',json);\n  // })\n\n  function onFirstSectionHandler(e) {\n    dispatch(callSection(0))\n  }\n  function onPrevSectionHandler(e) {\n    if (tabIndex > 0) dispatch(prevSection())\n  }\n  function onNextSectionHandler(e) {\n    if (tabIndex < tabLength - 1) dispatch(nextSection())\n  }\n  function onLastSectionHandler(e) {\n    dispatch(callSection(tabLength - 1))\n  }\n\n  return (\n    <nav className={styles.row}>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onFirstSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastBackward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onPrevSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepBackward} />\n      </button>\n      <div className={styles.title}>\n        <h2>{tabTitle}</h2>\n      </div>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onNextSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepForward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onLastSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastForward} />\n      </button>\n    </nav>\n  )\n}\n\nexport default Tabulation\n","import React, { useState } from 'react'\nimport styles from './Login.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faUser } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Login(props) {\n\n  const { visibility, toggleVisibility, css, backdrop, errormsg } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springloginProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [member, setMember] = useState('')\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.loginBackdrop} ${visibility ? '' : styles.loginBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springloginProps}>\n          <div\n            className={styles.loginContainer}\n            style={css}>\n            <div className={styles.loginClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.loginHeader}>\n              <FontAwesomeIcon icon={faUser} />\n            </div>\n            <div className={styles.loginContent}>\n              <form>\n                <label htmlFor=\"username\">username</label>\n                <input type=\"text\" name=\"username\" id=\"username\" onChange={e => setUsername(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"password\">password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"member\">member</label>\n                <input type=\"text\" name=\"member\" id=\"member\" onChange={e => setMember(e.target.value)} onFocus={() => props.clearError()} />\n              </form>\n            </div>\n            <div className={styles.loginFooter}>\n              <button className=\"btn btn-primary\" onClick={e => props.onSubmit(username, password, member)}>SUBMIT</button>\n              {errormsg}\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setJson,\n  setCurrentUser,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus,\n  setRepeaterValue,\n  selectRepeaterValue\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setErrorMsg,\n  clearErrorMsg\n} from '../features/display/displaySlice'\n\n\nimport Login from './Login'\nimport SelectSearchable from './SelectSearchable'\n\nimport { normalizeJson, getElementFromElementId, getDocumentExport } from '../app/utilities'\n\nfunction ApiInterface() {\n\n  // const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n  const documentStatus = useSelector(selectDocumentStatus)\n  const repeaterValue = useSelector(selectRepeaterValue)\n\n  const apiURL = 'https://api-uat.extrack.com/'\n\n  const [token, setToken] = useState({})\n  const [user, setUser] = useState({})\n\n  const [projects, setProjects] = useState([])\n  const [templates, setTemplates] = useState([])\n  const [documents, setDocuments] = useState([])\n\n  const [selectedProject, setSelectedProject] = useState([])\n  const [selectedProjectId, setSelectedProjectId] = useState('')\n\n  const [selectedTemplate, setSelectedTemplate] = useState([])\n  const [selectedTemplateRef, setSelectedTemplateRef] = useState([])\n\n  const [selectedDocumentRef, setSelectedDocumentRef] = useState([])\n\n  const [isFetchingTemplates, setIsFetchingTemplates] = useState(false)\n  const [isFetchingDocuments, setIsFetchingDocuments] = useState()\n\n  // const [errorMsg, setErrorMsg] = useState('')\n\n  const [isPopinLoginVisible, setIsPopinLoginVisible] = useState(false)\n  const [loginErrorMsg, setLoginErrorMsg] = useState('')\n\n\n\n  // PROJECT ---------------------------------------------------------------------//\n  useEffect(() => {\n    const projectId = selectedProject.length > 0 ? selectedProject[0].id : ''\n    // console.log('---> new selected Project: ', projectId)\n    if (projectId > 0) {\n      setSelectedProjectId(projectId)\n      getTemplates(projectId)\n      getDocuments(projectId)\n    }\n  }, [selectedProject])\n\n  // TEMPLATE ---------------------------------------------------------------------//\n  useEffect(() => {\n    // console.log('---> template selected: ', selectedTemplateRef)\n    if (selectedTemplateRef.length > 0) {\n      getTemplateById(selectedTemplateRef[0].Id)\n        .then(template => {\n          console.log(`--->: useEffect -> template: `, template)\n          setSelectedTemplate(template)\n          dispatch(setDocumentStatus('loaded'))\n        })\n    }\n  }, [selectedTemplateRef])\n\n  // OLD LOCAL STORAGE FOR REVERT\n  // useEffect(() => {\n  //   console.log('---> template set: ', selectedTemplate)\n  //   if (selectedTemplate.Config !== undefined) {\n  //     const configJson = selectedTemplate.Config\n  //     localStorage.setItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n  //     dispatch(setJson(normalizeJson(JSON.parse(configJson))))\n  //   }\n  // }, [selectedTemplate])\n\n  // DOCUMENT ---------------------------------------------------------------------//\n  useEffect(() => {\n    // console.log('---> selectedDocumentRef changed: ', selectedDocumentRef)\n    if (selectedDocumentRef.length > 0) {\n      dispatch(setDocumentStatus('loading'))\n\n      let document\n      getDocumentById(selectedDocumentRef[0].Id)\n        .then(value => document = value)\n\n        .then(value =>\n          getTemplateById(value.DocumentFormTemplateId)\n            .then(template => {\n              // console.log(`--->: useEffect -> template: `, template)\n              aggregateJson(template, JSON.parse(document.MetaData)[0])\n              dispatch(setDocumentStatus('loaded'))\n            })\n        )\n    }\n  }, [selectedDocumentRef])\n\n  // SENDING DOCUMENT\n  useEffect(() => {\n    if (documentStatus === 'tosend') {\n      // console.log(`---> Sending document: ${JSON.stringify(getDocumentExport())} for project: ${selectedProjectId} and template: ${selectedTemplateId}`)\n\n      let metadata = JSON.stringify([getDocumentExport()])\n      console.log(`----> metadata`, metadata)\n\n\n      const headers = new Headers()\n      // headers.append(\"Content-Type\", \"application/json\")\n      headers.append(\"Authorization\", `Bearer ${token.access_token}`)\n\n      // JSON.stringify triple metadata backslashes\n      const documentBody = JSON.stringify({\n        \"ID\": 0,\n        \"ProjectID\": selectedProjectId,\n        \"Description\": \"\",\n        \"Title\": \"Test-NewDoc\",\n        \"DocumentTypeId\": 1088,\n        \"DocumentFormTemplateID\": selectedDocumentRef.Id,\n        \"UserRevisionNumber\": \"0\",\n        \"UserRevisionDate\": \"2020-09-25\",\n        \"MetaData\": metadata,\n        \"OpenClosedStatus\": \"O\",\n        \"CreatedByContactID\": 1059,\n        \"CreatedByCompanyID\": 1009\n      })\n\n      const documentBodyString = JSON.stringify(documentBody)\n\n      let formdata = new FormData()\n      formdata.append(\"Document\", documentBody)\n\n      console.log(`--->: sendind with body ------>  :   `, documentBodyString)\n\n      const requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: formdata\n        // body: JSON.stringify(requestBody)\n        // body: JSON.stringify({\n        //   \"ID\": 0,\n        //   \"ProjectID\": 1249,\n        //   \"Description\": \"\",\n        //   \"Title\": \"Test-NewDoc\",\n        //   \"DocumentTypeId\": 1088,\n        //   \"DocumentFormTemplateID\": 25,\n        //   \"UserRevisionNumber\": \"0\",\n        //   \"UserRevisionDate\": \"2020-09-10\",\n        //   \"MetaData\": \"[{\\\"Elements\\\":[{\\\"Type\\\":\\\"Trilean\\\",\\\"Value\\\":\\\"N\\\",\\\"Id\\\":\\\"S032\\\",\\\"CommentValue\\\":\\\"TrileanCommentvaluefromdocument\\\"}]}]\",\n        //   \"OpenClosedStatus\": \"O\",\n        //   \"CreatedByContactID\": 1059,\n        //   \"CreatedByCompanyID\": 1009\n        // })\n      }\n\n      fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/Template/${selectedTemplateRef.Id}/Create`, requestOptions)\n        .then(res => res.text())\n        .then(result => console.log('response: ', result))\n        .catch(error => console.log('error', error))\n\n\n    }\n    // dispatch(setDocumentStatus('sent'))\n  }, [documentStatus])\n\n\n  const getTokenHandler = (pUsername, pPassword, pMember) => {\n\n    dispatch(setCurrentUser(pUsername))    \n\n    const headers = new Headers()\n    headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    let urlencoded = new URLSearchParams()\n    urlencoded.append(\"username\", pUsername)\n    urlencoded.append(\"password\", pPassword)\n    urlencoded.append(\"MemberCode\", pMember)\n    urlencoded.append(\"grant_type\", \"password\")\n    urlencoded.append(\"timezone\", \"Australia/Sydney\")\n\n    fetch(`${apiURL}oAuth/Token`, {\n      method: 'POST',\n      headers: headers,\n      body: urlencoded\n    })\n      .then(res => res.text())\n      .then(result => {\n        const resultJSON = JSON.parse(result)\n        // console.log('result: ', resultJSON)\n        if (resultJSON.error) {\n          setLoginErrorMsg(resultJSON.error_description)\n        }\n        else {\n          getUser(resultJSON.access_token)\n          getProjects(resultJSON.access_token)\n          setToken(resultJSON)\n          localStorage.setItem('dynFormToken', JSON.stringify(resultJSON))\n          setIsPopinLoginVisible(false)\n        }\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  const getUser = (pToken) => {\n    const userHeaders = new Headers()\n    userHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n\n    const requestOptions = {\n      method: 'GET',\n      headers: userHeaders\n    }\n\n    fetch(`${apiURL}V1.0/User`, requestOptions)\n      .then(response => response.text())\n      .then(result => setUser(JSON.parse(result)))\n      .catch(error => console.log('error', error))\n  }\n\n  function aggregateJson(pTemplate, pDocument) {\n\n    const templateToUpdate = normalizeJson(JSON.parse(pTemplate.Config))\n\n    // console.log('Document\\'s Elements:', pDocument.Elements)\n    // console.log('Template to update:', templateToUpdate)\n\n    pDocument.Elements.forEach(item => {\n\n      let itemPath = getElementFromElementId(templateToUpdate, item.Id)\n      let firstFoundedPath = itemPath[0]\n\n      if (item.Type === 'Matrix') {\n        item.Elements.forEach((subitem, index) => {\n          itemPath = getElementFromElementId(JSON.parse(pTemplate.Config), subitem.Id)\n          if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n          if (itemPath.length === 0) return\n\n          firstFoundedPath = itemPath[0]\n\n          const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]].Elements[firstFoundedPath[2]].Elements[firstFoundedPath[3]]\n          templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]].Elements[firstFoundedPath[2]].Elements[firstFoundedPath[3]] = { ...templateValues, ...subitem }\n\n          // console.log(`subItem path received: `, itemPath)\n        })\n      }\n\n      else if (item.Type === 'Repeatable') {\n        // console.log('doc item: ', item)\n\n        // itemPath = getElementFromElementId(JSON.parse(pTemplate.Config), item.Id)\n        // if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n        // if (itemPath.length === 0) return\n\n        // firstFoundedPath = itemPath[0]\n        // const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n        // console.log(`--->: template item: `, templateValues)\n\n        dispatch(setRepeaterValue(item.RepeaterValue))\n      }\n\n      else {\n\n\n        if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n        if (itemPath.length === 0) return\n\n        // console.log('item value: ', item, ' --> path:  ', { sectionIndex: firstFoundedPath[0], pos: firstFoundedPath[1] })\n\n        const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n        templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]] = { ...templateValues, ...item }\n\n        // switch (itemPath[0].length) {\n        //   case 2:\n        //     const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n        //     templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]] = { ...templateValues, ...item }\n        //     // console.log('---> valuesToInsert', templateValues)\n        //     break\n        //   case 3:\n        //     console.log('---> two levels')\n        //     break\n        //   case 4:\n        //     console.log('---> three levels')\n        //     break\n        //   default:\n        //     break\n        // }\n\n      }\n\n\n    })\n    // console.log('Json created from Template with Document\\'s data: ', templateToUpdate)\n    dispatch(setJson(templateToUpdate))\n  }\n\n  /**-------------------------------------------------**\n  * @desc - PROJECTS                             -----*\n  *----------------------------------------------------*/\n  function getProjects(pToken) {\n    const projectsHeaders = new Headers()\n    projectsHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n    projectsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: projectsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project?selectorFields=(Id,Abbr)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('projects: ', JSON.parse(result))\n        setProjects(JSON.parse(result))\n      })\n      .catch(error => console.log('error', error))\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - TEMPLATES                             -----*\n  *----------------------------------------------------*/\n  function getTemplates(pProjectID) {\n    // console.log(`--->: getTemplates -> pProjectID: `, pProjectID)\n    setIsFetchingTemplates(true)\n\n    const templatesHeaders = new Headers()\n    templatesHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templatesHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templatesHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Document/Form/Templates?selectorFields=(Id,Title1)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('templates: ', JSON.parse(result))\n        setTemplates(JSON.parse(result))\n        setIsFetchingTemplates(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  async function getTemplateById(pTemplateId) {\n    // console.log('---> getTemplateById: ', pTemplateId)\n    let template\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProject[0].id}/Document/Form/Template/${pTemplateId}`, requestOptions)\n      .then(response => response.json())\n      .then(result => {\n        // console.log('result: ', result)\n        // template = JSON.parse(result)\n        template = result\n        // console.log('template: ', template.Config)\n      })\n      .catch(error => console.log('error', error))\n    // setSelectedTemplate(template)\n    return template\n\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - DOCUMENTS                             -----*\n  *----------------------------------------------------*/\n  function getDocuments(pProjectID) {\n    setIsFetchingDocuments(true)\n\n    const documentsHeaders = new Headers()\n    documentsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    documentsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: documentsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Documents?selectorFields=Id,Title,DocumentNumber,DocumentFormTemplateId&orderBy=Id desc`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(' ====> doucments: ', JSON.parse(result))\n        setDocuments(JSON.parse(result))\n        setIsFetchingDocuments(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  async function getDocumentById(pDocumentId) {\n    // console.log('---> getDocumentById: ', pDocumentId)\n    let document = {}\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/${pDocumentId}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('---> result fron fetch: ', result, JSON.parse(result), JSON.parse(result).Document)\n\n        document = JSON.parse(result).Document\n        // console.log('--> document from fetch: ', document)\n      })\n      .catch(error => console.log('error', error))\n    return document\n  }\n\n\n  // RETURN ----------------------------------------------------------------------------------------------------------------/\n\n  const templateLabel = isFetchingTemplates ? <div className=\"spinner\">Fetching Templates...</div> : selectedProject.length > 0 ? 'Select a template' : ''\n  const documentLabel = isFetchingDocuments ? <div className=\"spinner\">Fetching Documents...</div> : selectedProject.length > 0 ? 'Select a document' : ''\n\n  return (\n    <div className=\"bloc\">\n\n      <button className={`btn btn-ternary ${user.NameFirst ? 'hidden' : ''}`} onClick={() => setIsPopinLoginVisible(true)}>LOGIN</button>\n\n      <div className={`bloc-menu ${projects.length > 0 ? '' : 'hidden'}`}>\n        <h2 className=\"dropdown-label\">\n          Select a project\n        </h2>\n        <SelectSearchable allowMultiple={false} width=\"s\" items={projects.map(item => ({ label: item.Abbr, id: item.Id }))} selectedItems={selectedProject} onSelectItem={(item) => setSelectedProject(item)} />\n      </div>\n\n\n      <div className={`bloc-menu ${selectedProject.length === 0 ? '' : 'bloc-menu__separator'}`}>\n        <h2 className=\"dropdown-label\">{templateLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <SelectSearchable allowMultiple={false} width=\"m\" items={templates.map(item => ({ label: item.Title1, Id: item.Id }))} selectedItems={selectedTemplateRef} onSelectItem={(item) => setSelectedTemplateRef(item)} />\n        </div>\n      </div>\n\n      <div className='bloc-spacer'>\n        <span className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          OR\n        </span>\n      </div>\n\n\n      <div className=\"bloc-menu\">\n        <h2 className=\"dropdown-label\">{documentLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <SelectSearchable allowMultiple={false} width=\"m\" items={documents.map(item => ({ label: item.Title, Id: item.Id }))} selectedItems={selectedDocumentRef} onSelectItem={(item) => setSelectedDocumentRef(item)} />\n        </div>\n      </div>\n\n      {/* <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div> */}\n\n      <Login\n        visibility={isPopinLoginVisible}\n        toggleVisibility={() => setIsPopinLoginVisible(!isPopinLoginVisible)}\n        css={{ backgroundColor: '#007db4' }}\n        backdrop={'rgba(0,0,0,0.3)'}\n        onSubmit={getTokenHandler}\n        errormsg={loginErrorMsg}\n        clearError={() => setLoginErrorMsg('')\n        }\n      />\n\n    </div>\n  )\n}\n\nexport default ApiInterface","import React from 'react'\r\n\r\n\r\nimport JsonOptions from './components/JsonOptions'\r\nimport JsonReader from './features/json/JsonReader'\r\nimport Tabulation from './components/Tabulation'\r\nimport ApiInterface from './components/ApiInterface'\r\n\r\n\r\nimport './App.scss'\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <h1 title=\"v20.11.24\">\r\n          DYNAMIC FORM\r\n        </h1>\r\n        <ApiInterface />\r\n      </header>\r\n      <div className=\"options-container\">\r\n        <JsonOptions />\r\n      </div>\r\n      <Tabulation />\r\n      <main>\r\n        <JsonReader />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport jsonReducer from '../features/json/jsonSlice';\r\nimport tabulationReducer from '../features/tabulation/tabulationSlice';\r\nimport displayReducer from '../features/display/displaySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    json: jsonReducer,\r\n    tabulation: tabulationReducer,\r\n    display: displayReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\n\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}