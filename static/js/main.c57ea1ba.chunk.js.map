{"version":3,"sources":["components/SelectSearchable.module.scss","components/Modal.module.scss","components/Login.module.scss","components/DateTimeInput.module.scss","components/DateInput.module.scss","components/TimeInput.module.scss","components/Figure.module.scss","components/Tabulation.module.scss","features/json/JsonReader.module.scss","features/json/jsonSlice.js","features/tabulation/tabulationSlice.js","features/display/displaySlice.js","components/JsonOptions.js","components/controls/DocumentTableOfContents.js","components/controls/ListMulticontrol.js","components/controls/Label.js","components/Modal.js","components/controls/Text.js","app/utilities.js","components/controls/Repeatable.js","components/controls/ButtonSubmitPurchase.js","components/controls/ButtonAddDocketNumber.js","components/controls/API.js","components/DateInput.js","components/controls/Date.js","components/Figure.js","components/controls/Image.js","components/controls/ImageSingle.js","components/controls/ButtonAddReportDate.js","components/controls/QRScanner.js","components/controls/QRScannerList.js","components/controls/Signature.js","components/controls/SignatureDateTime.js","components/controls/SignatureDate.js","components/controls/Matrix.js","components/controls/Checkbox.js","components/controls/Boolean.js","components/controls/Trilean.js","components/controls/TrileanLabel.js","components/controls/ListSingle.js","components/controls/ListMultiple.js","components/TimeInput.js","components/controls/Time.js","components/DateTimeInput.js","components/controls/DateTime.js","components/controls/TimeLabel.js","components/controls/DateLabel.js","components/controls/ButtonAddSignature.js","components/controls/RegisterSignatures.js","components/controls/SearchableListEntryDialogSMS.js","components/controls/ButtonAddSMS.js","components/controls/SearchableSMSListView.js","components/controls/SearchableListEntryDialogEmail.js","components/controls/ButtonAddEmail.js","components/controls/SearchableEmailListView.js","components/controls/MatrixButton.js","components/controls/DocumentSummaryGrid.js","components/controls/ButtonSubmitRegister.js","components/controls/ButtonCloseout.js","components/controls/ButtonViewDocument.js","features/json/JsonReader.js","components/Tabulation.js","components/Login.js","components/SelectSearchable.js","components/ApiInterface.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["module","exports","jsonSlice","createSlice","name","initialState","value","documentStatus","reducers","setJson","state","action","payload","localStorage","setItem","JSON","stringify","setDocumentStatus","actions","selectJson","json","selectDocumentStatus","tabulationSlice","callSection","prevSection","nextSection","selectedTabulation","tabulation","displaySlice","debugMode","errorMsg","setControls","setDebugMode","setOpenListId","openListId","setErrorMsg","clearErrorMsg","selectDisplayedControls","display","selectDebugMode","selectOpenListId","selectErrorMsg","JsonOptions","dispatch","useDispatch","useState","useSelector","loadedJSON","parse","getItem","id","className","onClick","pEvent","icon","faRedo","style","transform","marginLeft","faTrash","htmlFor","type","checked","onChange","target","DocumentTableOfContents","props","sections","Sections","length","map","element","index","Elements","Type","key","Title","faChevronRight","ListMulticontrol","controlJson","Id","Data","options","option","cols","rows","defaultValue","selectedIndex","visibleControls","OptionedControls","Controls","Label","IsVisible","FontAttributes","FontSize","HasUnderLine","fontSize","fontWeight","fontStyle","textDecoration","Modal","visibility","toggleVisibility","message","css","backdrop","springBackdropProps","useSpring","opacity","from","zIndex","config","gentle","springModalProps","top","stiff","backdropStyle","backgroundColor","div","styles","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","faTimes","modalHeader","faExclamationTriangle","modalContent","modalFooter","modalBtn","Text","IsEnabled","Value","Format","Warning","WarningMessage","Mandatory","ValidationMessage","isModalVisible","setIsModalVisible","bgColor","modalOptions","setModalOptions","emailAddressTester","phoneNumberRestrictCodes","onChangeHandler","newJson","updateJson","useEffect","textfield","undefined","Lines","Keyboard","min","Min","max","Max","size","Decimal","maxLength","onKeyDown","includes","keyCode","preventDefault","VarChar","disabled","onBlur","focus","test","toLowerCase","warningMarker","mandatoryMarker","getControlName","pControlType","split","part","toUpperCase","slice","join","getCurrentDate","pDate","Date","now","normalizeJson","pJson","camelcaseKeys","deep","pascalCase","exportMetaData","addToDocumentExport","pValue","controlIndex","findIndex","item","console","log","push","prevValue","table","Repeatable","components","ButtonSubmitPurchase","ButtonAddDocketNumber","API","Image","ImageSingle","ButtonAddReportDate","QRScanner","QRScannerList","Signature","SignatureDateTime","SignatureDate","Matrix","Checkbox","Boolean","Trilean","TrileanLabel","ListSingle","ListMultiple","Time","DateTime","TimeLabel","DateLabel","ButtonAddSignature","RegisterSignatures","SearchableListEntryDialogSMS","ButtonAddSMS","SearchableSMSListView","SearchableListEntryDialogEmail","ButtonAddEmail","SearchableEmailListView","MatrixButton","DocumentSummaryGrid","ButtonSubmitRegister","ButtonCloseout","ButtonViewDocument","updateJsonHandler","mergedElements","elementIndex","ID","children","control","componentName","Component","Api","IncludePhoneNumber","IncludeEmail","IncludeTitle","IncludeBusinessNumber","IncludeAbbreviation","IncludeCode","targetedApi","String","collapsed","setCollapsed","keyword","setKeyword","list","setList","filteredList","setFilteredList","constructor","selectedValues","setSelectedValues","animatedListProps","height","trailPills","useTrail","marginTop","to","apiUrl","getEndpoint","token","apiHeaders","Headers","append","access_token","requestOptions","method","headers","redirect","listItemClickHandler","currentItem","updateJSON","fetch","then","response","text","result","listItems","phoneNumber","emailAddress","title","abn","abbr","code","spacer","Contact","Number","Email","NameFirst","NameLast","Company","Name","CompanyName","Abn","Abbr","Code","catch","error","filter","itemList","isSelected","iconCheck","faCheck","selectedPills","targetText","parentNode","innerText","faAngleDown","faAngleUp","placeholder","e","DateInput","dateformatConverted","format","replace","dateValue","setDateValue","dateString","addMonths","addDays","toTimeString","modifiers","AddDay","AddMonth","dateContainer","datePicker","onDateChange","btnClear","FormatDateTime","IsBlank","DateValue","defaultDate","toDateString","onDateChangeHandler","Figure","container","src","source","alt","btnClose","onClose","Images","onCloseHandler","images","image","faImage","figure","imageData","fileReader","FileReader","onload","readAsDataURL","files","signature","width","DateTimeValue","ShowComment","Collapsible","IsCollapsed","EntryTitle","Details","CommentValue","comment","commentText","details","entryTitle","defaultChecked","checkboxValue","booleanValue","HideNa","trileanValue","Buttons","buttons","button","computedBackground","Button","BackgroundColorSelected","BackgroundColor","Fragment","underline","SelectedValue","mass","tension","friction","newValues","TimeInput","timeformatConverted","timeValue","setTimeValue","pTime","timeString","addHours","AddHour","timeContainer","timePicker","onTimeChange","TimeValue","defaultTime","getHours","getMinutes","onTimeChangeHandler","DateTimeInput","dateFormatConverted","dateTimeValue","toLocaleTimeString","dateTimeStringValue","dateTimeContainer","onDateTimeChange","defaultDateTime","setDateTimeValue","pDateTime","onDateTimeChangeHandler","JsonReader","displayedControls","activeSectionId","currentJsonToEdit","controls","getControlPathById","pControlId","currentSection","itemPath","forEach","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","section","controlPath","jsonToUpdate","controlsFromElements","controlComponent","substring","ElementId","isVisible","skeleton","Array","fill","fixed","Tabulation","tabIndex","tabLength","tabTitle","row","faFastBackward","faStepBackward","faStepForward","faFastForward","Login","errormsg","springloginProps","username","setUsername","password","setPassword","member","setMember","loginBackdrop","loginBackdrop_freeze","loginContainer","loginClose","loginHeader","faUser","loginContent","onFocus","clearError","loginFooter","onSubmit","SelectSearchable","items","allowMultiple","label","initialIsVisible","setIsVisible","ref","useRef","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","useVisible","onClickItemHandler","pItem","stopPropagation","currentTarget","onSelectItem","selectedItems","selectSearchable_Container","selectSearchable_Header","selectSearchable_SelectedContainer","selectSearchable_SelectedItem","selectedItem_delete","selectSearchable_Trigger","position","selectSearchable_List","selectSearchable_SearchContainer","selectSearchable_ItemsContainer","selectItem","selectedItem","selectSearchable_SelectedItem_Selected","ApiInterface","apiURL","setToken","user","setUser","projects","setProjects","templates","setTemplates","documents","setDocuments","selectedProject","setSelectedProject","selectedProjectId","setSelectedProjectId","selectedTemplate","setSelectedTemplate","selectedTemplateRef","setSelectedTemplateRef","selectedDocumentRef","setSelectedDocumentRef","isFetchingTemplates","setIsFetchingTemplates","isFetchingDocuments","setIsFetchingDocuments","isPopinLoginVisible","setIsPopinLoginVisible","loginErrorMsg","setLoginErrorMsg","projectId","pProjectID","templatesHeaders","getTemplates","documentsHeaders","getDocuments","getTemplateById","template","Config","configJson","getDocumentById","DocumentFormTemplateId","pTemplate","pDocument","templateToUpdate","pElementID","currentJson","foundPath","sectionIndex","getElementFromElementId","firstFoundedPath","templateValues","aggregateJson","MetaData","metadata","documentBody","documentBodyString","formdata","FormData","body","res","getUser","pToken","userHeaders","pTemplateId","a","templateHeaders","pDocumentId","Document","templateLabel","documentLabel","Title1","urlencoded","URLSearchParams","resultJSON","error_description","projectsHeaders","getProjects","App","configureStore","reducer","jsonReducer","tabulationReducer","displayReducer","window","location","hostname","match","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,WAAa,qCAAqC,oBAAsB,8CAA8C,iBAAmB,2CAA2C,2BAA6B,qDAAqD,iCAAmC,2DAA2D,gCAAkC,0DAA0D,wBAA0B,kDAAkD,mCAAqC,6DAA6D,yBAA2B,mDAAmD,8BAAgC,wDAAwD,uCAAyC,iEAAiE,sBAAwB,gDAAgD,cAAgB,0C,mBCAx+BD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,qBAAuB,oCAAoC,eAAiB,8BAA8B,YAAc,2BAA2B,aAAe,4BAA4B,YAAc,2BAA2B,SAAW,wBAAwB,WAAa,4B,mBCAtVD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,qBAAuB,oCAAoC,eAAiB,8BAA8B,YAAc,2BAA2B,aAAe,4BAA4B,YAAc,2BAA2B,WAAa,4B,mBCAnTD,EAAOC,QAAU,CAAC,WAAa,kCAAkC,WAAa,kCAAkC,kBAAoB,yCAAyC,SAAW,kC,mBCAxLD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,cAAgB,iCAAiC,SAAW,8B,mBCAzHD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,cAAgB,iCAAiC,SAAW,8B,mBCAzHD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,SAAW,2B,mBCAnED,EAAOC,QAAU,CAAC,IAAM,wBAAwB,MAAQ,4B,mBCAxDD,EAAOC,QAAU,CAAC,MAAQ,4B,wLCCbC,EAAYC,YAAY,CACnCC,KAAM,OACNC,aAAc,CACZC,MAAO,GACPC,eAAgB,IAElBC,SAAU,CACRC,QAAS,SAACC,EAAOC,GAOfD,EAAMJ,MAAQK,EAAOC,QACrBC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAAOC,WAErDK,kBAAmB,SAACP,EAAOC,GAEzBD,EAAMH,eAAiBI,EAAOC,Y,EAKUV,EAAUgB,QAAzCT,E,EAAAA,QAASQ,E,EAAAA,kBAKXE,EAAa,SAAAT,GAAK,OAAIA,EAAMU,KAAKd,OACjCe,EAAuB,SAAAX,GAAK,OAAIA,EAAMU,KAAKb,gBAEzCL,IAAf,QChCaoB,EAAkBnB,YAAY,CACzCC,KAAM,aACNC,aAAc,CACZC,MAAO,GAETE,SAAU,CACRe,YAAa,SAACb,EAAOC,GACnBD,EAAMJ,MAAQK,EAAOC,SAEvBY,YAAa,SAAAd,GACXA,EAAMJ,OAAS,GAEjBmB,YAAa,SAAAf,GACXA,EAAMJ,OAAS,M,EAQfgB,EAAgBJ,QAHPK,E,EAAAA,YACbC,E,EAAAA,YACAC,E,EAAAA,YAMWC,EAAqB,SAAAhB,GAAK,OAAIA,EAAMiB,WAAWrB,OAG7CgB,IAAf,QC7BaM,EAAezB,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,MAAO,GACPuB,WAAW,EACXC,SAAU,IAEZtB,SAAU,CACRuB,YAAa,SAACrB,EAAOC,GACnBD,EAAMJ,MAAQK,EAAOC,SAEvBoB,aAAc,SAACtB,EAAOC,GACpBD,EAAMmB,UAAYlB,EAAOC,SAE3BqB,cAAe,SAACvB,EAAOC,GACrBD,EAAMwB,WAAavB,EAAOC,SAE5BuB,YAAa,SAACzB,EAAOC,GACnBD,EAAMoB,SAAWnB,EAAOC,SAG1BwB,cAAe,SAAA1B,GACbA,EAAMoB,SAAW,O,EAKiEF,EAAaV,QAAtFa,E,EAAAA,YAAaC,E,EAAAA,aAAcC,E,EAAAA,cAAeE,E,EAAAA,YAE5CE,G,EAFyDD,cAE/B,SAAA1B,GAAK,OAAIA,EAAM4B,QAAQhC,QACjDiC,EAAkB,SAAA7B,GAAK,OAAIA,EAAM4B,QAAQT,WACzCW,EAAmB,SAAA9B,GAAK,OAAIA,EAAM4B,QAAQJ,YAC1CO,EAAiB,SAAA/B,GAAK,OAAIA,EAAM4B,QAAQR,UAEtCF,IAAf,Q,cCnBe,SAASc,IAEtB,IAAMC,EAAWC,cAFmB,EAIJC,oBAAS,GAJL,mBAM9BhB,GAN8B,UAMlBiB,YAAYP,IAExBhC,EAAiBuC,YAAYzB,GAE/B0B,EAAahC,KAAKiC,MAAMnC,aAAaoC,QAAQ,iBAAmB,GAyCpE,OACE,yBAAKC,GAAG,cAAcC,UAAS,UAAyB,aAAnB5C,EAAiC,kBAAoB,mBAExF,4BAAQ4C,UAAU,sCAAsCC,QA1C5D,SAAmCC,GACjCV,EAASpB,EAAY,IACrBoB,EAASlC,EAAQsC,MAyCb,kBAAC,IAAD,CAAiBO,KAAMC,IAAQC,MAAO,CAAEC,UAAW,aAAcC,WAAY,KAD/E,kBAIA,4BAAQP,UAAU,sCAAsCC,QAzC5D,SAAmCC,GACjCV,EAASlC,EAAQ,OAyCb,kBAAC,IAAD,CAAiB6C,KAAMK,IAASH,MAAO,CAAEE,WAAY,KADvD,kBAKA,yBAAKP,UAAU,SACb,2BAAOS,QAAQ,SAAf,SACA,2BAAOC,KAAK,WAAWzD,KAAK,QAAQ8C,GAAG,QAAQC,UAAU,cAAcW,QAASjC,EAAWkC,SA1DpE,SAACV,GAAD,OAAYV,EAASX,EAAaqB,EAAOW,OAAOF,eCkBhEG,MA9Bf,SAAiCC,GAC/B,IAAM9C,EAAO0B,YAAY3B,GACnBwB,EAAWC,cASXuB,EAAW/C,EAAKgD,UAAYhD,EAAKgD,SAASC,OAAS,EAAIjD,EAAKgD,SAASE,KAAI,SAACC,EAASC,GACvF,MAAiC,6BAA7BD,EAAQE,SAAS,GAAGC,KAA4C,KAElE,wBAAIC,IAAKH,GACP,4BAAQrB,UAAU,kDAAkDC,QAAS,WAPjFT,EAASpB,EAOkGiD,MACpGD,EAAQK,MACT,kBAAC,IAAD,CAAiBtB,KAAMuB,WAI1B,GAEL,OACE,wBAAI1B,UAAU,YACXgB,ICkBQW,MAlDf,SAA0BZ,GAExB,IAAM9C,EAAO8C,EAAMa,YAEXH,EAAoBxD,EAApBwD,MAAOI,EAAa5D,EAAb4D,GAAIC,EAAS7D,EAAT6D,KAEbtC,EAAWC,cANc,EAQGC,oBAAS,GARZ,mBAQxBhB,EARwB,KAQbG,EARa,KA8BzBkD,EAAUD,EAAKX,KAAI,SAACa,EAAQX,GAAT,OAAmB,4BAAQG,IAAKH,EAAOlE,MAAOkE,GAAQW,MAC/E,OACE,yBAAKhC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAtBhCpB,GAAcH,KAsBZ,OACM,6BADN,eAEc,6BACZ,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAIC,aAAcvE,KAAKC,UAAUI,KAC9G,yBAAK+B,UAAU,WACb,2BAAOS,QAAQ,oBAAoBgB,GACnC,4BAAQxE,KAAK,mBAAmB8C,GAAG,mBAAmBa,SA5B5D,SAAyBV,GACvB,IAAMkC,EAAgBlC,EAAOW,OAAO1D,MAEpC,GAAIiF,GAAiB,EAAG,CACtB,IAAMC,EAAkBpE,EAAKqE,iBAAiBF,GAAeG,SAO/D/C,EAASZ,EALSyD,OAuBZ,4BAAQlF,MAAM,MAAd,SACC4E,MCZIS,MAlCf,SAAezB,GAEb,IAAM9C,EAAO8C,EAAMa,YACXH,EAAqFxD,EAArFwD,MAAOI,EAA8E5D,EAA9E4D,GAHK,EAGyE5D,EAA1EwE,iBAHC,SAGiBC,EAAwDzE,EAAxDyE,eAHjB,EAGyEzE,EAAxC0E,gBAHjC,MAG4C,GAH5C,IAGyE1E,EAAzB2E,oBAHhD,WAKclD,oBAAS,GALvB,mBAKbhB,EALa,KAKFG,EALE,KAYpB,OACE4D,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAPlCpB,GAAcH,KAOV,QACO,6BACL,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAIC,aAAcvE,KAAKC,UAAUI,KAC9G,yBAAK+B,UAAU,UAAUK,MAAO,CAC9BwC,SAAUF,EAAW,EAAI,KACzBG,WAAgC,SAAnBJ,EAA4B,OAAS,GAClDK,UAA+B,WAAnBL,EAA8B,SAAW,GACrDM,eAAgBJ,EAAe,YAAc,KAE5CnB,IAIL,I,wBCvBS,SAASwB,EAAMlC,GAAQ,IAE5BmC,EAAyDnC,EAAzDmC,WAAYC,EAA6CpC,EAA7CoC,iBAAkBC,EAA2BrC,EAA3BqC,QAASC,EAAkBtC,EAAlBsC,IAAKC,EAAavC,EAAbuC,SAC9CC,EAAsBC,YAC1B,CACEC,QAASP,EAAa,EAAI,EAC1BQ,KAAM,CAAED,QAAS,EAAGE,OAAQ,IAC5BC,OAAQA,IAAOC,SAGbC,EAAmBN,YACvB,CACEC,QAASP,EAAa,EAAI,EAC1Ba,IAAKb,EAAa,GAAK,GACvBQ,KAAM,CAAED,QAAS,GACjBG,OAAQA,IAAOI,QAQnB,IAAMC,EAAgBX,EAAW,CAAEY,gBAAiBZ,GAAa,GAEjE,OACE,kBAAC,IAASa,IAAV,CAAc9D,MAAOkD,GACnB,yBACExD,GAAG,WACHC,UAAS,UAAKoE,IAAOC,cAAZ,YAA6BnB,EAAa,GAAKkB,IAAOE,sBAC/DrE,QAXN,SAAgCC,GACL,aAArBA,EAAOW,OAAOd,IAAmBoD,KAWjC9C,MAAO4D,GACP,kBAAC,IAASE,IAAV,CAAc9D,MAAOyD,GACnB,yBACE9D,UAAWoE,IAAOG,eAClBlE,MAAOgD,GACP,yBAAKrD,UAAWoE,IAAOI,WAAYvE,QAASkD,GAC1C,kBAAC,IAAD,CAAiBhD,KAAMsE,OAEzB,yBAAKzE,UAAWoE,IAAOM,aACrB,kBAAC,IAAD,CAAiBvE,KAAMwE,OAEzB,yBAAK3E,UAAWoE,IAAOQ,cACpBxB,GAEH,yBAAKpD,UAAWoE,IAAOS,aACrB,4BAAQ7E,UAAWoE,IAAOU,SAAU7E,QAASkD,GAA7C,WC8CC4B,MAjGf,SAAchE,GAEZ,IAAM9C,EAAO8C,EAAMa,YACXH,EAAqIxD,EAArIwD,MAAOI,EAA8H5D,EAA9H4D,GAHI,EAG0H5D,EAA1HwE,iBAHA,WAG0HxE,EAAxG+G,iBAHlB,WAG0H/G,EAAtFgH,aAHpC,MAG4C,GAH5C,EAGgDC,EAA0EjH,EAA1EiH,OAHhD,EAG0HjH,EAAlEkH,eAHxD,SAGyEC,EAAiDnH,EAAjDmH,eAAgBC,EAAiCpH,EAAjCoH,UAAWC,EAAsBrH,EAAtBqH,kBAHpG,EAMyB5F,oBAAS,GANlC,mBAMZ6F,EANY,KAMIC,EANJ,OAOqB9F,mBAAS2F,EAAY,CAAEjC,QAASkC,EAAmBG,QAAS,WAAc,CAAErC,QAASgC,EAAgBK,QAAS,YAPnI,mBAOZC,EAPY,KAOEC,EAPF,KAUbC,EAAqB,kIACrBC,EAA2B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAGxG,SAASC,EAAgB5F,GAIvB,IAAM6F,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQd,MAAQ/E,EAAOW,OAAO1D,MAE9B4D,EAAMiF,WAAWD,GA6BnBE,qBAAU,cAEP,CAAChI,IAEJ,IAAMiI,OAAuBC,IAAXjB,OACCiB,IAAjBjB,EAAOkB,MAAsB,8BAAUrG,GAAI8B,EAAIK,KAAMgD,EAAOkB,MAAOxF,SAAUkF,IAEvD,YAApBZ,EAAOmB,SAAyB,2BAAO3F,KAAK,SAAS4F,IAAKpB,EAAOqB,IAAKC,IAAKtB,EAAOuB,IAAKC,KAAMxB,EAAOyB,QAAS/F,SAAUkF,IAEjG,cAApBZ,EAAOmB,SAA2B,2BAAO3F,KAAK,OAAOkG,UAAU,KAAKC,UAhB1E,SAA0B3G,GAEA,cAApBgF,EAAOmB,WACJR,EAAyBiB,SAAS5G,EAAO6G,UAAU7G,EAAO8G,mBAaoCpG,SAAUkF,IAEzG,2BAAO/F,GAAI8B,EAAInB,KAAK,OAAOvD,MAAO8H,EAAO2B,UAAW1B,EAAO+B,UAAY,EAAGC,UAAWlC,EAAWmC,OArCxG,SAAuBjH,GACrB,IAAMW,EAASX,EAAOW,OAElBsE,GAA4B,KAAjBtE,EAAO1D,OACpBqI,GAAkB,GAEhBH,GAA8B,KAAjBxE,EAAO1D,QACtB0D,EAAOuG,QACP5B,GAAkB,IAEI,UAApBN,EAAOmB,WACJT,EAAmByB,KAAMnH,EAAOW,OAAO1D,MAAOmK,iBAEjD3B,EAAgB,CAAEvC,QAAS,qDAAsDqC,QAAS,YAC1FD,GAAkB,MAuBuG5E,SAAUkF,IAEvI,GACIyB,EAAgBnC,EAAiB,IAAM,GACvCoC,EAAkBnC,EAAY,0BAAMrF,UAAU,eAAhB,KAAyC,GAjE1D,EAqEeN,oBAAS,GArExB,mBAqEZhB,EArEY,KAqEDG,EArEC,KAwEnB,OACE4D,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,kBALHpB,GAAcH,KAKzC,OACM,6BACJ,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,2BAAOS,QAAQ,SAASgB,EAAxB,IAAgC8F,EAAeC,GAC9CtB,GAEH,kBAACjD,EAAD,CACEC,WAAYqC,EACZpC,iBAAkB,kBAAMqC,GAAmBD,IAC3CnC,QAAO,UAAKvB,EAAL,aAAY6D,EAAatC,SAChCC,IAAK,CAAEa,gBAAiBwB,EAAaD,SACrCnC,SAAU,qBAId,I,iCC/FC,SAASmE,EAAeC,GAC7B,OAAOA,EAAaC,MAAM,KAAKxG,KAAI,SAAAyG,GAAI,OAAIA,EAAK,GAAGC,cAAgBD,EAAKE,MAAM,MAAIC,KAAK,IAkDlF,SAASC,IAAoC,IAArBC,EAAoB,uDAAZC,KAAKC,MAK1C,OAAO,IAAID,KAAKD,GAiBX,SAASG,EAAcC,GAE5B,OAAOC,IAAcD,EAAO,CAAEE,MAAM,EAAMC,YAAY,IAIxD,IAAMC,EAAiB,GAChB,SAASC,GAAoBC,GAElC,IAAMC,EAAeH,EAAeI,WAAU,SAAAC,GAAI,OAAIA,EAAKjH,KAAO8G,EAAO9G,MAEzE,GADAkH,QAAQC,IAAR,+CAAyDJ,IACnC,IAAlBA,EAAqBH,EAAeQ,KAAKN,OACxC,CACH,IAAMO,EAAS,eAAQT,EAAeG,IACtCH,EAAeG,GAAf,eAAoCM,EAApC,GAAkDP,GAGpDI,QAAQC,IAAR,oBACAD,QAAQI,MAAMV,GC+CDW,OA/Ff,SAASA,EAAWrI,GAElB,IAAM9C,EAAO8C,EAAMa,YACJC,GAA0C5D,EAAjDwD,MAAiDxD,EAA1C4D,IAAUP,GAAgCrD,EAAtC6D,KAAsC7D,EAAhCqD,UAHA,EAGgCrD,EAAtBwE,iBAHV,SAMnB4G,EAAa,CACjBvI,0BACAa,mBACAa,QACAuC,OACAqE,aACAE,wBACAC,yBACAC,OACAtB,QACAuB,SACAC,eACAC,uBACAC,aACAC,iBACAC,aACAC,qBACAC,iBACAC,UACAC,YACAC,WACAC,WACAC,gBACAC,cACAC,gBACAC,QACAC,YACAC,aACAC,aACAC,sBACAC,sBACAC,gCACAC,gBACAC,yBACAC,kCACAC,kBACAC,2BACAC,gBACAC,uBACAC,wBACAC,kBACAC,uBA/CuB,EAoDS9L,oBAAS,GApDlB,mBAoDlBhB,EApDkB,KAoDPG,EApDO,KA0DzB,SAAS4M,EAAkBpD,GACzBU,QAAQC,IAAI,gBAAiBX,GAC7BU,QAAQC,IAAI,YAAa/K,EAAKqD,UAC9B,IAAMoK,EAAc,YAAOzN,EAAKqD,UAE1BqK,EAAeD,EAAe7C,WAAU,SAAAzH,GAAO,OAAIA,EAAQwK,KAAOvD,EAAMuD,MAC9EF,EAAeC,GAAgBtD,EAC/BU,QAAQC,IAAI,yBAAuB2C,GAEnC5K,EAAMiF,WAAN,eAAqB/H,EAArB,CAA2BqD,SAAUoK,KAGvC,IAAMG,EAAWvK,EAASH,KAAI,SAAC2K,EAASzK,GACtC,IAAM0K,EAAgBtE,EAAeqE,EAAQvK,MAEvCyK,EAAY3C,EAAW0C,GAC7B,OAAO,kBAACC,EAAD,CAAWxK,IAAKH,EAAOO,YAAakK,EAAS9F,WAAYyF,OAIlE,OACEhJ,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WA1BhCpB,GAAcH,KA0BZ,aACY,6BACV,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAIC,aAAcvE,KAAKC,UAAUI,KAC9G,yBAAK+B,UAAU,WACZ6L,IAIL,ICtGWvC,OAhCf,SAA8BvI,GAE5B,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHoB,EAGM5D,EAAtBwE,iBAHgB,WAWD/C,oBAAS,GAXR,mBAW5BhB,EAX4B,KAWjBG,EAXiB,KAanC,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,uBACsB,6BACpB,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICIW8H,OAhCf,SAA+BxI,GAE7B,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHqB,EAGK5D,EAAtBwE,iBAHiB,WAWF/C,oBAAS,GAXP,mBAW7BhB,EAX6B,KAWlBG,EAXkB,KAapC,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,wBACuB,6BACrB,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICiPW+H,OAnQf,SAAazI,GAEX,IAAM9C,EAAO8C,EAAMa,YAEXH,EACsGxD,EADtGwD,MAAOF,EAC+FtD,EAD/FsD,KAAMM,EACyF5D,EADzF4D,GAJH,EAK4F5D,EADrFgH,aAJP,MAIe,GAJf,EAImBgH,EACyEhO,EADzEgO,IACnCC,EAA4GjO,EAA5GiO,mBAAoBC,EAAwFlO,EAAxFkO,aAAcC,EAA0EnO,EAA1EmO,aAAcC,EAA4DpO,EAA5DoO,sBAAuBC,EAAqCrO,EAArCqO,oBAAqBC,EAAgBtO,EAAhBsO,YACxFC,EAAcC,OAAOR,GAAK3E,cAE1B9H,EAAWC,cARC,EAUgBC,oBAAS,GAVzB,mBAUXhB,EAVW,KAUAG,EAVA,OAWgBa,oBAAS,GAXzB,mBAWXgN,EAXW,KAWAC,EAXA,OAYYjN,mBAAS,IAZrB,mBAYXkN,EAZW,KAYFC,EAZE,OAaMnN,mBAAS,IAbf,mBAaXoN,EAbW,KAaLC,EAbK,OAcsBrN,mBAAS,IAd/B,mBAcXsN,EAdW,KAcGC,EAdH,OAe0BvN,mBAAUuF,EAAMiI,cAAgBT,OAAU,CAACxH,GAASA,GAf9E,mBAeXkI,EAfW,KAeKC,EAfL,KAiBZrO,EAAaY,YAAYN,GAEzBgO,EAAoB7J,YAAU,CAAE8J,OAAQZ,EAAY,EAAI,MAExDa,EAAaC,YAASL,EAAejM,OAAQ,CACjDwC,KAAM,CAAED,QAAS,EAAGlD,YAAa,GAAIkN,WAAY,EAAGnN,UAAW,2BAC/DoN,GAAI,CAAEjK,QAAS,EAAGlD,WAAY,EAAGkN,UAAW,EAAGnN,UAAW,uBAE1DsD,OAAQA,IAAOI,QAoBX2J,EAAM,UAHQ,qCAGR,OAeZ,WACE,OAAQnB,GACN,IAAK,iBACH,MAAM,WAAN,OApBY,KAoBZ,wBACF,IAAK,kBACH,MAAM,WAAN,OAtBY,KAsBZ,uBACF,IAAK,iBACH,MAAM,eACR,IAAK,cACH,MAAM,gBACR,IAAK,MACH,MAAM,WAAN,OA5BY,KA4BZ,QACF,IAAK,MACH,MAAM,WAAN,OA9BY,KA8BZ,QACF,IAAK,MACH,MAAM,WAAN,OAhCY,KAgCZ,UACF,IAAK,MACH,MAAM,WAAN,OAlCY,KAkCZ,QACF,IAAK,MACH,MAAM,WAAN,OApCY,KAoCZ,QACF,IAAK,MACH,MAAM,WAAN,OAtCY,KAsCZ,QACF,IAAK,OACH,MAAM,WAAN,OAxCY,KAwCZ,SACF,IAAK,MACH,MAAM,WAAN,OA1CY,KA0CZ,SAxC0BoB,IAE1BC,EAAQjQ,KAAKiC,MAAMnC,aAAaoC,QAAQ,iBAGxCgO,GAAa,IAAIC,QACvBD,GAAWE,OAAO,gBAAlB,iBAA6CH,EAAMI,eACnDH,GAAWE,OAAO,eAAgB,qCAElC,IAAME,GAAiB,CACrBC,OAAQ,MACRC,QAASN,GACTO,SAAU,UAyIZ,SAASC,GAAqBpO,GAC5B,IAAMqO,EAAcrO,EAAOW,OAAOd,GAE9BoN,EAAe,KAAOoB,EAAanB,EAAkB,CAACmB,IACrDnB,EAAkB,IACvBoB,GAAWD,GAEb,SAASC,GAAW7F,GAElB,IAAM5C,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IACtC8H,EAAQd,QAAU0D,EAAQ5C,EAAQd,MAAQ,IAE5Cc,EAAQd,MAAQ0D,EAChBgE,GAAa,IAGf5L,EAAMiF,WAAWD,GAvHnBE,qBAAU,WACRwI,MAAMd,EAAQO,IACXQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ,IAGMC,EAHkBlR,KAAKiC,MAAMgP,GAGD1N,KAAI,SAAC2H,EAAMzH,GAC3C,IAAIW,EAAQ+M,EAAaC,EAAcC,EAAOC,EAAKC,EAAMC,EAAMC,EAC/D,OAAQpD,GAEN,IAAK,kBACH8C,EAAc7C,EAAkB,aAASpD,EAAKwG,QAAQC,QAAb,OAAT,GAChCP,EAAe7C,EAAY,aAASrD,EAAKwG,QAAQE,OAAb,OAAT,GAC3BxN,EAAM,UAAM8G,EAAKwG,QAAQG,UAAnB,YAAgC3G,EAAKwG,QAAQI,SAA7C,cAA2D5G,EAAK6G,QAAQC,MAAxE,OAA+Eb,GAA/E,OAA6FC,GACnG,MAEF,IAAK,iBACHD,EAAc7C,EAAkB,aAASpD,EAAKyG,QAAL,OAAT,GAChCP,EAAe7C,EAAY,aAASrD,EAAK0G,OAAL,OAAT,GAC3BxN,EAAM,UAAM8G,EAAK2G,UAAX,YAAwB3G,EAAK4G,SAA7B,cAA2C5G,EAAK+G,aAAhD,OAA8Dd,GAA9D,OAA4EC,GAClF,MAEF,IAAK,iBAGHC,EAAQ7C,EAAY,aAAStD,EAAKrH,OAAL,OAAT,GACpByN,EAAM7C,EAAqB,aAASvD,EAAK6G,QAAQG,KAAb,OAAT,GAC3BX,EAAO7C,EAAmB,aAASxD,EAAK6G,QAAQI,MAAb,OAAT,GAC1B/N,EAAM,UAAM8G,EAAK6G,QAAQC,MAAnB,OAA0BX,GAA1B,OAAkCC,GAAlC,OAAwCC,GAE9C,MAEF,IAAK,cACHnN,EAAM,UAAM8G,EAAKrH,OAEjB,MACF,QACEwN,EAAQ7C,EAAY,UAAMtD,EAAKrH,OAAL,OAAN,GACpB2N,EAAO7C,EAAW,UAAMzD,EAAKkH,MAAL,OAAN,GAClBX,EAAU9C,GAAeH,EAAhB,SACTpK,EAAM,UAAMiN,GAAN,OAAcI,GAAd,OAAuBD,GAejC,OAAOpN,KAET+K,EAAQ+B,MAITmB,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,QACtC,IAOHjK,qBAAU,WACHyG,GAAWlN,EAASV,EAAc+C,MACtC,CAAC6K,EAAW7K,EAAIrC,IAEnByG,qBAAU,WACJlH,IAAe8C,GAAI8K,GAAa,KACnC,CAAC5N,EAAY8C,IAIhBoE,qBAAU,WACRgH,EAAgBH,EAAKqD,QAAO,SAAArH,GAAI,OAAIA,EAAKxB,cAAcR,SAAS8F,EAAQtF,qBACvE,CAACwF,EAAMF,IAwCV,IAAMwD,GAAW1D,EAAY,GAC3BM,EAAa7L,KAAI,SAAC2H,EAAMtH,GACtB,IAAM6O,EAAcvH,IAAS7D,EACvBqL,EAAYD,EAAa,kBAAC,IAAD,CAAiBlQ,KAAMoQ,MAAc,GACpE,OAAO,yBAAK/O,IAAKA,EAAKzB,GAAI+I,EAAM9I,UAAS,0BAAqBqQ,EAAa,qBAAuB,IAAMpQ,QAASqO,IAC9GgC,EACAxH,MAMD0H,GAAgBjD,EAAWpM,KAAI,SAACJ,EAAOM,GAC3C,IAAMyH,EAAOqE,EAAe9L,GAC5B,MAAa,KAATyH,EAAoB,kBAAC,IAAS3E,IAAV,CAAcnE,UAAU,oBAAoBK,MAAOU,EAAOS,IAAKH,GAAQyH,EAAK,4BAAQ/I,GAAI+I,EAAM9I,UAAU,iBACzH,MAGT,OACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WA5MhCpB,GAAcH,KA6MT6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eAAeC,QA/DpC,SAA0BC,GACxB,IAAMW,EAASX,EAAOW,OACtB,GAAyB,iBAArBA,EAAOb,WAAqD,uBAArBa,EAAOb,UAAoC2M,GAAcD,QAC/F,GAAyB,gBAArB7L,EAAOb,UAA6B,CAC3C,IAAMyQ,EAAa5P,EAAO6P,WAAWC,UAClB,KAAfF,IACFjC,GAAW,IACXpB,EAAkBD,EAAegD,QAAO,SAAArH,GAAI,OAAIA,IAAS2H,UAyDvD,yBAAKzQ,UAAU,sBACZwQ,IAEH,kBAAC,IAAD,CAAiBrQ,KAAMuM,EAAYkE,IAAcC,IAAW5Q,QAxDpE,SAA8BC,GAC5ByM,GAAcD,OAyDV,kBAAC,IAASvI,IAAV,CAAc9D,MAAOgN,EAAmBrN,UAAU,cAChD,yBAAKA,UAAU,wBACb,2BAAOU,KAAK,OAAOoQ,YAAY,SAAS9Q,UAAU,oBAAoB7C,MAAOyP,EAAShM,SAAU,SAAAmQ,GAAC,OAAIlE,EAAWkE,EAAElQ,OAAO1D,UACzH,kBAAC,IAAD,CAAiBgD,KAAMsE,IAASxE,QAAS,SAAA8Q,GAAC,OAAIlE,EAAW,QAE3D,yBAAK7M,UAAU,oBAAoBoQ,Q,+CC1P9B,SAASY,GAAUjQ,GAEhC,IAAMkQ,EAAsBlQ,EAAMmQ,OAAOC,QAAQ,OAAQ,OAFlB,EAGLzR,mBAASqB,EAAMqQ,WAHV,mBAGhCA,EAHgC,KAGrBC,EAHqB,KAgBvC,IAAMC,EAA2B,KAAdF,EAAmBA,EAAYF,aAAOK,aAAUC,aL+BnD,IAAItJ,KK/B0EkJ,EL+B7D,KAAM,IAAIlJ,MAAOuJ,gBK/BwD1Q,EAAM2Q,UAAUC,QAAS5Q,EAAM2Q,UAAUE,UAAWX,GAG9J,OACE,yBAAKjR,UAAWoE,KAAOyN,eACrB,2BACEnR,KAAK,OACLzD,KAAK,GACL8C,GAAG,GACHC,UAAWoE,KAAO0N,WAClB3P,aAAciP,EACdxQ,SAAU,SAACmQ,GAAD,OAhBSpI,EAgBcoI,EAAElQ,OAAO1D,MAf9CkU,EAAa1I,QACb5H,EAAMgR,aAAapJ,GAFrB,IAAyBA,KAkBpB2I,EACD,kBAAC,IAAD,CACEtR,UAAWoE,KAAO4N,SAClB7R,KAAMsE,IACNxE,QA3BN,WACEoR,EAAa,IACbtQ,EAAMgR,aAAa,QC6BR7J,OA9Cf,SAAcnH,GAEZ,IAAM9C,EAAO8C,EAAMa,YACPH,GAAqHxD,EAA3HsD,KAA2HtD,EAArHwD,OAAOI,EAA8G5D,EAA9G4D,GAHA,EAG8G5D,EAA1GgU,sBAHJ,MAGqB,aAHrB,IAG8GhU,EAA3EiU,eAHnC,WAG8GjU,EAA1DwE,iBAHpD,WAG8GxE,EAAxC0T,cAHtE,MAG+E,EAH/E,IAG8G1T,EAA5B2T,gBAHlF,MAG6F,EAH7F,EAGgGO,EAAclU,EAAdkU,UAE7GC,EAA6B,KAAdD,QAAkChM,IAAdgM,EAArB,UACfnK,IAAiBqK,gBAEpBF,EARiB,EAWezS,mBAAUwS,EAAwB,GAAdE,GAXnC,mBAWZhB,EAXY,KAWDC,EAXC,OAwBe3R,oBAAS,GAxBxB,mBAwBZhB,EAxBY,KAwBDG,EAxBC,KA2BnB,OACE4D,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,kBALHpB,GAAcH,KAKzC,OACM,6BACJ,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAKyB,GAEL,kBAACuP,GAAD,CAAWE,OAAQe,EAAgBb,UAAWA,EAAWM,UAAW,CAAEC,SAAQC,YAAYG,aAAc,SAAC5U,GAAD,OAzBhH,SAA6B8K,GAC3BoJ,EAAapJ,GAEb,IAAMlC,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC5B,KAAVgK,EAAclC,EAAQoM,UAAYlK,SAC1BlC,EAAQoM,UACpBpM,EAAQmM,QAAqB,KAAVjK,EACnBlH,EAAMiF,WAAWD,GAkBwGuM,CAAoBnV,QAI3I,I,oBCvCS,SAASoV,GAAOxR,GAS7B,OACE,yBAAKf,UAAWoE,KAAOoO,WACrB,yBAAKC,IAAK1R,EAAM2R,OAAQC,IAAI,WAC5B,yBAAK3S,UAAWoE,KAAOwO,SAAU3S,QAVrC,SAAwBC,GAGtBa,EAAM8R,QAAQ3S,KAO8C,kBAAC,IAAD,CAAiBC,KAAMsE,QCsDxEgF,OAnEf,SAAe1I,GAEb,IAAM9C,EAAO8C,EAAMa,YACXH,EAAmDxD,EAAnDwD,MAAOI,EAA4C5D,EAA5C4D,GAHK,GAGuC5D,EAAxC6D,KAAwC7D,EAAlCwE,kBAHL,WAGuCxE,EAAhB6U,cAHvB,MAGgC,GAHhC,IAQcpT,oBAAS,GARvB,mBAQbhB,EARa,KAQFG,EARE,OAUoBa,mBAAS,IAV7B,mBAwBpB,SAASqT,EAAe7S,GACtB6I,QAAQC,IAAI,WAAS9I,GAzBH,UA6BpB+F,qBAAU,cAEP,CAAChI,IAEJ,IAAM+U,EAASF,EAAO3R,KAAI,SAAC8R,EAAO5R,GAAR,OACxB,yBAAKrB,UAAU,cAAcwB,IAAG,eAAUH,IACxC,kBAACkR,GAAD,CAAQG,OAAM,kCAA6BO,GAASJ,QAASE,QAKjE,OACEtQ,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WA9BlCpB,GAAcH,KA8BV,QACO,6BACL,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,yBAAKA,UAAU,eACb,wBAAIS,QAAQ,SAASgB,GACrB,2BAAOhB,QAAQ,OAAOT,UAAU,6BAC9B,kBAAC,IAAD,CAAiBG,KAAM+S,MADzB,mBAIA,2BAAOxS,KAAK,OAAOX,GAAG,OAAO9C,KAAK,OAAO+C,UAAU,WAAWY,SAvCxE,SAAyBV,GAIvB6I,QAAQC,IAAI,WAAY9I,OAqCjB8S,IAML,ICOStJ,OAtEf,SAAqB3I,GAEnB,IAAM9C,EAAO8C,EAAMa,YACXH,EAAkDxD,EAAlDwD,MAAOI,EAA2C5D,EAA3C4D,GAHW,GAGgC5D,EAAvC6D,KAAuC7D,EAAjCwE,kBAHC,WAGgCxE,EAAfgH,aAHjB,MAGyB,GAHzB,IAQQvF,oBAAS,GARjB,mBAQnBhB,EARmB,KAQRG,EARQ,KAqC1BoH,qBAAU,cAEP,CAAChI,IAEJ,IAAMkV,EAAmB,KAAVlO,EAAe,kBAACsN,GAAD,CAAQG,OAAM,kCAA6BzN,GAAS4N,QAblF,SAAwB3S,GACtB6I,QAAQC,IAAI,WAAS9I,GAErB,IAAM6F,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,WACnC8H,EAAQd,MACflE,EAAMiF,WAAWD,MAQ6F,GAEhH,OACEtD,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAnClCpB,GAAcH,KAmCV,cACa,6BACX,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,yBAAKA,UAAU,eACb,wBAAIS,QAAQ,SAASgB,GACrB,2BAAOhB,QAAQ,OAAOT,UAAU,6BAC9B,kBAAC,IAAD,CAAiBG,KAAM+S,MADzB,mBAIA,2BAAOxS,KAAK,OAAOX,GAAG,OAAO9C,KAAK,OAAO+C,UAAU,WAAWY,SA5CxE,SAAyBV,GAEvB,IAAIkT,EACEC,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAACxC,GACnBqC,EAAYrC,EAAElQ,OAAOgO,OAAOsC,QAAQ,yBAA0B,IAE9D,IAAMpL,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQd,MAAQmO,EAChBrS,EAAMiF,WAAWD,IAEnBsN,EAAWG,cAActT,EAAOW,OAAO4S,MAAM,QAmCvC,yBAAKzT,UAAU,eACZmT,KAKP,ICvCSxJ,OAhCf,SAA6B5I,GAE3B,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHmB,EAGO5D,EAAtBwE,iBAHe,WAWA/C,oBAAS,GAXT,mBAW3BhB,EAX2B,KAWhBG,EAXgB,KAalC,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,sBACqB,6BACnB,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICpBWmI,OARf,WACE,OACE,2CCMWC,OARf,WACE,OACE,+CCoCWC,OAjCf,SAAmB/I,GAEjB,IAAM9C,EAAO8C,EAAMa,YACXL,EAAiDtD,EAAjDsD,KAAME,EAA2CxD,EAA3CwD,MAAOI,EAAoC5D,EAApC4D,GAHG,EAGiC5D,EAAhCwE,iBAHD,SAGmBqH,EAAc7L,EAAd6L,UAErCpL,EAAYiB,YAAYP,GAExBsU,EAAY,yBAAKjB,IAAG,iCAA4B3I,GAAa6I,IAAI,GAAGgB,MAAM,QAEhF,OACElR,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAS,cAAStB,EAAY,GAAK,WACrC6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU5E,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,KAElF,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,qBACZ0T,MAOT,ICOS3J,OAnCf,SAA2BhJ,GAEzB,IAAM9C,EAAO8C,EAAMa,YACXL,EAAgEtD,EAAhEsD,KAAME,EAA0DxD,EAA1DwD,MAAOI,EAAmD5D,EAAnD4D,GAHW,EAGwC5D,EAA/CwE,iBAHO,SAGWqH,EAA6B7L,EAA7B6L,UAAW8J,EAAkB3V,EAAlB2V,cAEhDlV,EAAYiB,YAAYP,GAExBsU,EAAY,yBAAKjB,IAAG,iCAA4B3I,GAAa6I,IAAI,GAAGgB,MAAM,QAEhF,OACElR,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAS,cAAStB,EAAY,GAAK,WACrC6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU5E,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,KAElF,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,qBACZ0T,EACD,yBAAK1T,UAAU,uBACZ4T,OASX,ICGS5J,OAnCf,SAAuBjJ,GAErB,IAAM9C,EAAO8C,EAAMa,YACXL,EAA4DtD,EAA5DsD,KAAME,EAAsDxD,EAAtDwD,MAAOI,EAA+C5D,EAA/C4D,GAHO,EAGwC5D,EAA3CwE,iBAHG,SAGeqH,EAAyB7L,EAAzB6L,UAAWqI,EAAclU,EAAdkU,UAEhDzT,EAAYiB,YAAYP,GAExBsU,EAAY,yBAAKjB,IAAG,iCAA4B3I,GAAa6I,IAAI,GAAGgB,MAAM,QAEhF,OACElR,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAS,cAAStB,EAAY,GAAK,WACrC6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU5E,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,KAElF,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eACb,yBAAKA,UAAU,qBACZ0T,EACD,yBAAK1T,UAAU,uBACZmS,OASX,IC7BSlI,OARf,WACE,OACE,wCCiFWC,OA9Ef,SAAkBnJ,GAEhB,IAAM9C,EAAO8C,EAAMa,YACXL,EAAgJtD,EAAhJsD,KAAME,EAA0IxD,EAA1IwD,MAAOI,EAAmI5D,EAAnI4D,GAAIgS,EAA+H5V,EAA/H4V,YAAaC,EAAkH7V,EAAlH6V,YAAaC,EAAqG9V,EAArG8V,YAAaC,EAAwF/V,EAAxF+V,WAAYC,EAA4EhW,EAA5EgW,QAASrR,EAAmE3E,EAAnE2E,aAH9D,EAGiI3E,EAArDwE,iBAH5E,WAGiIxE,EAAnCgH,aAH9F,MAGsG,GAHtG,IAGiIhH,EAAvBiW,oBAH1G,MAGyH,GAHzH,IAMWxU,mBAASqU,GANpB,mBAMhBrH,EANgB,KAMLC,EANK,OASWjN,oBAAS,GATpB,mBAShBhB,EATgB,KASLG,EATK,KA2CvBoH,qBAAU,cAEP,CAAChI,IAMJ,IAAMkW,EAAUN,EAAc,2BAAOnT,KAAK,OAAOoQ,YAAakD,EAAY7W,MAAO+W,EAActT,SArB/F,SAAgCV,GAG9B,IAAMkU,EAAclU,EAAOW,OAAO1D,MAGlCuL,GAFuB,CAAC7G,KAAIqS,aAAcE,IAI1C,IAAMrO,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQmO,aAAeE,EACvBrT,EAAMiF,WAAWD,MAWyH,GAEtIsO,EAAUP,EAAc,yBAAK9T,UAAU,6BAA4B,yBAAKA,UAAU,yBAAyBC,QANjH,SAA8BC,GAC5ByM,GAAcD,KAKgI,kBAAC,IAAD,CAAiBvM,KAAMuM,EAAYkE,IAAcC,OAAmB,yBAAK9Q,GAAG,iBAAiBC,UAAS,UAAK0M,EAAW,SAAW,GAA3B,6BAA0DuH,IAAuB,GAEjUK,EAAaN,EAAa,2BAAOvT,QAAQ,YAAYuT,GAAsB,GAEjF,OACEvR,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAhDhCpB,GAAcH,KAgDZ,WACU,6BACR,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAS,kBAAa4C,EAAe,oBAAsB,KAC9D,4BAAKnB,GACJ4S,EACD,2BAAO3T,KAAK,WAAW6T,eAA0B,MAAVtP,EAAerE,SArD5D,SAAyBV,GAGvB,IAAMsU,GAA0C,IAA1BtU,EAAOW,OAAOF,QAAmB,IAAM,IAG7D+H,GAFuB,CAACnH,OAAMM,KAAIoD,MAAOuP,IAKzC,IAAMzO,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQd,MAAQuP,EAEhBzT,EAAMiF,WAAWD,MA0CZuO,EACAH,IAIL,ICUWhK,OApFf,SAAiBpJ,GAEf,IAAM9C,EAAO8C,EAAMa,YACXL,EAA+ItD,EAA/IsD,KAAME,EAAyIxD,EAAzIwD,MAAOI,EAAkI5D,EAAlI4D,GAAIgS,EAA8H5V,EAA9H4V,YAAaC,EAAiH7V,EAAjH6V,YAAaC,EAAoG9V,EAApG8V,YAAanR,EAAuF3E,EAAvF2E,aAAcoR,EAAyE/V,EAAzE+V,WAAYC,EAA6DhW,EAA7DgW,QAHpE,EAGiIhW,EAApDwE,iBAH7E,WAGiIxE,EAAlCgH,aAH/F,MAGuG,GAHvG,IAGiIhH,EAAtBiW,oBAH3G,MAG0H,GAH1H,IAMYxU,mBAASqU,GANrB,mBAMfrH,EANe,KAMJC,EANI,OASYjN,oBAAS,GATrB,mBASfhB,EATe,KASJG,EATI,KAmBtB,SAASiH,EAAgB5F,GAEvB,IAAMuU,EAAevU,EAAOW,OAAO1D,MAEnCuL,GADuB,CAAEnH,OAAMM,KAAIoD,MAAOwP,IAG1C,IAAM1O,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQd,MAAQwP,EAChB1T,EAAMiF,WAAWD,GAhBnBE,qBAAU,cAEP,CAAChI,IA6BJ,IAAMkW,EAAUN,EAAc,2BAAOnT,KAAK,OAAOoQ,YAAakD,EAAY7W,MAAO+W,EAActT,SAZ/F,SAAgCV,GAC9B6I,QAAQC,IAAI,wBAAyB9I,EAAOW,OAAO1D,OAEnD,IAAM4I,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQmO,aAAehU,EAAOW,OAAO1D,MACrC4D,EAAMiF,WAAWD,MAOyH,GAEtIsO,EAAUP,EAAc,yBAAK9T,UAAU,6BAA4B,yBAAKA,UAAU,yBAAyBC,QANjH,SAA8BC,GAC5ByM,GAAcD,KAKgI,kBAAC,IAAD,CAAiBvM,KAAMuM,EAAYkE,IAAcC,OAAmB,yBAAK9Q,GAAG,iBAAiBC,UAAS,UAAK0M,EAAY,SAAW,GAA5B,6BAA2DuH,IAAuB,GAElUK,EAAaN,EAAa,2BAAOvT,QAAQ,YAAYuT,GAAsB,GAEjF,OACEvR,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAnClCpB,GAAcH,KAmCV,UACS,6BACP,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACZyB,EACD,yBAAKzB,UAAU,kBACZqU,GAEH,yBAAKrU,UAAS,yBAAoB4C,EAAe,oBAAsB,KACrE,yBAAK5C,UAAU,oBACb,2BAAOS,QAAQ,OAAf,OACA,2BAAOC,KAAK,QAAQX,GAAG,MAAM9C,KAAM4E,EAAI1E,MAAM,IAAIwD,QAAmB,MAAVsE,EAAerE,SAAUkF,KAErF,yBAAK9F,UAAU,oBACb,2BAAOS,QAAQ,MAAf,MACA,2BAAOC,KAAK,QAAQX,GAAG,KAAK9C,KAAM4E,EAAI1E,MAAM,IAAIwD,QAAmB,MAAVsE,EAAerE,SAAUkF,MAGtF,yBAAK9F,UAAU,kBACZsU,GAEH,yBAAKtU,UAAU,kBACZmU,KAKP,ICMS/J,OAtFf,SAAiBrJ,GAEf,IAAM9C,EAAO8C,EAAMa,YACXL,EAAyItD,EAAzIsD,KAAME,EAAmIxD,EAAnIwD,MAAOI,EAA4H5D,EAA5H4D,GAAIgS,EAAwH5V,EAAxH4V,YAAaa,EAA2GzW,EAA3GyW,OAHhB,EAG2HzW,EAAnGwE,iBAHxB,SAG0CqR,EAAiF7V,EAAjF6V,YAAaC,EAAoE9V,EAApE8V,YAAaC,EAAuD/V,EAAvD+V,WAAYC,EAA2ChW,EAA3CgW,QAHhF,EAG2HhW,EAAlCgH,aAHzF,MAGiG,GAHjG,IAG2HhH,EAAtBiW,oBAHrG,MAGoH,GAHpH,IAMYxU,mBAASqU,GANrB,mBAMfrH,EANe,KAMJC,EANI,OASYjN,oBAAS,GATrB,mBASfhB,EATe,KASJG,EATI,KAetB,SAASiH,EAAgB5F,GAEvB,IAAMyU,EAAezU,EAAOW,OAAO1D,MAEnCuL,GADuB,CAAEnH,OAAMM,KAAIoD,MAAO0P,IAG1C,IAAM5O,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQd,MAAQ0P,EAChB5T,EAAMiF,WAAWD,GAgBnBE,qBAAU,cAEP,CAAChI,IAEJ,IAAMkW,EAAUN,EAAc,2BAAOnT,KAAK,OAAOoQ,YAAakD,EAAY7W,MAAO+W,EAActT,SAjB/F,SAAgCV,GAG9B,IAAM6F,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQmO,aAAehU,EAAOW,OAAO1D,MACrC4D,EAAMiF,WAAWD,MAYyH,GAEtIsO,EAAUP,EAAc,yBAAK9T,UAAU,6BAA4B,yBAAKA,UAAU,yBAAyBC,QAXjH,SAA8BC,GAC5ByM,GAAcD,KAUgI,kBAAC,IAAD,CAAiBvM,KAAMuM,EAAYkE,IAAcC,OAAmB,yBAAK9Q,GAAG,iBAAiBC,UAAS,UAAK0M,EAAY,SAAW,GAA5B,6BAA2DuH,IAAuB,GAExU,OACExR,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAtClCpB,GAAcH,KAsCV,UACS,6BACP,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACZyB,EACD,yBAAKzB,UAAU,eACZqU,GAEH,yBAAKrU,UAAU,eACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,2BAAOS,QAAQ,OAAf,OACA,2BAAOC,KAAK,QAAQX,GAAG,MAAM9C,KAAM4E,EAAI1E,MAAM,IAAIwD,QAAmB,MAAVsE,EAAerE,SAAUkF,KAErF,yBAAK9F,UAAU,oBACb,2BAAOS,QAAQ,MAAf,MACA,2BAAOC,KAAK,QAAQX,GAAG,KAAK9C,KAAM4E,EAAI1E,MAAM,IAAIwD,QAAmB,MAAVsE,EAAerE,SAAUkF,KAEpF,yBAAK9F,UAAS,UAAK0U,EAAS,SAAW,GAAzB,sBACZ,2BAAOjU,QAAQ,MAAf,OACA,2BAAOC,KAAK,QAAQX,GAAG,KAAK9C,KAAM4E,EAAI1E,MAAM,KAAKwD,QAAmB,OAAVsE,EAAgBrE,SAAUkF,OAI1F,yBAAK9F,UAAU,eACZmU,KAKP,ICzBS9J,OAzDf,SAAsBtJ,GAEpB,IAAM9C,EAAO8C,EAAMa,YACXL,EAAuGtD,EAAvGsD,KAAME,EAAiGxD,EAAjGwD,MAAOI,EAA0F5D,EAA1F4D,GAHM,EAGoF5D,EAAtFwE,iBAHE,SAGgBmS,EAAoE3W,EAApE2W,QAASV,EAA2DjW,EAA3DiW,aAActR,EAA6C3E,EAA7C2E,aAAciR,EAA+B5V,EAA/B4V,YAAaa,EAAkBzW,EAAlByW,OAAQzP,EAAUhH,EAAVgH,MAE/FvG,EAAYiB,YAAYP,GAE9B,SAAS0G,EAAgB5F,GAGvB,IAAM6F,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQd,MAAQ/E,EAAOW,OAAO1D,MAC9B4D,EAAMiF,WAAWD,GAInB,IAAM8O,OAAsB1O,IAAZyO,EAAwBA,EAAQzT,KAAI,SAAC2T,EAAQzT,GAC3D,IAAM0T,EAAqB9P,IAAU6P,EAAOE,OAASF,EAAOG,wBAA0BH,EAAOI,gBAC7F,IAAMR,GAA4B,OAAlBI,EAAOE,OAAkB,OAEvC,kBAAC,IAAMG,SAAP,CAAgB3T,IAAG,UAAKK,GAAL,OAAUR,IAE3B,2BAAOX,KAAK,QAAQzD,KAAM4E,EAAI9B,GAAE,UAAK8B,GAAL,OAAUiT,EAAOtS,OAASrF,MAAO2X,EAAOE,OAAQhV,UAAU,oBAAoBY,SAAUkF,IACxH,2BAAOrF,QAAO,UAAKoB,GAAL,OAAUiT,EAAOtS,OAASxC,UAAU,oBAAoBK,MAAO,CAAE6D,gBAAiB6Q,IAC7FD,EAAOtS,WAKX,GAEC2R,EAAUN,EAAc,yBAAK7T,UAAU,eAAekU,GAAsB,GAC5EkB,EAAYxS,EAAe,6BAAS,GAE1C,OACEH,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAS,cAAStB,EAAY,GAAK,WACrC6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,GAC9B,8BAAU5E,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,KAElF,yBAAKlH,UAAU,WACb,4BAAKyB,GACJ0S,EACD,yBAAKnU,UAAU,eACZ6U,EACAO,KAMP,IC0ES9K,OA1Hf,SAAoBvJ,GAElB,IAAM9C,EAAO8C,EAAMa,YACXL,EAAqCtD,EAArCsD,KAAME,EAA+BxD,EAA/BwD,MAAOI,EAAwB5D,EAAxB4D,GAAIC,EAAoB7D,EAApB6D,KAHA,EAGoB7D,EAAdgH,aAHN,MAGc,GAHd,EAInBzF,EAAWC,cAJQ,EAMSC,oBAAS,GANlB,mBAMlBhB,EANkB,KAMPG,EANO,OAOSa,oBAAS,GAPlB,mBAOlBgN,EAPkB,KAOPC,EAPO,OAQKjN,mBAAS,IARd,mBAQlBkN,EARkB,KAQTC,EARS,OASenN,mBAAS,IATxB,mBASlBsN,EATkB,KASJC,EATI,OAUmBvN,mBAAUuF,EAAMiI,cAAgBT,OAAU,CAACxH,GAASA,GAVvE,mBAUlBkI,EAVkB,KAUFC,EAVE,KAYnBrO,EAAaY,YAAYN,GAEzBgO,EAAoB7J,YAAU,CAAC8J,OAAQZ,EAAY,EAAI,MAEvDa,EAAaC,YAASL,EAAejM,OAAQ,CACjDwC,KAAM,CAAED,QAAS,EAAGlD,YAAa,GAAIkN,WAAY,EAAGnN,UAAW,2BAC/DoN,GAAI,CAAEjK,QAAS,EAAGlD,WAAY,EAAGkN,UAAW,EAAGnN,UAAW,uBAE1DsD,OAAQA,IAAOI,QAyCjB,SAASsK,EAAqBpO,GACxBiN,EAAe,KAAOjN,EAAOW,OAAOd,GAAIqN,EAAkB,CAAClN,EAAOW,OAAOd,KACxEqN,EAAkB,IACvBoB,EAAWtO,EAAOW,OAAOd,IAE3B,SAASyO,EAAW7F,GAClB,IAAM5C,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IACtC8H,EAAQd,QAAU0D,EAAQ5C,EAAQd,MAAQ,IAE5Cc,EAAQd,MAAQ0D,EAChBgE,GAAa,IAEf5L,EAAMiF,WAAWD,GA5CnBE,qBAAU,WACHyG,GAAWlN,EAASV,EAAc+C,MACtC,CAAC6K,EAAW7K,EAAIrC,IAEnByG,qBAAU,WACJlH,IAAe8C,GAAI8K,GAAa,KACnC,CAAC5N,EAAY8C,IAIhBoE,qBAAU,WACRgH,EAAgBnL,EAAKqO,QAAO,SAAArH,GAAI,OAAIA,EAAKxB,cAAcR,SAAS8F,EAAQtF,qBACvE,CAACxF,EAAM8K,IAoCV,IAAMwD,EAAW1D,EAAY,GAC7BM,EAAa7L,KAAI,SAAC2H,EAAMtH,GACtB,IAAM6O,EAAalD,EAAetE,WAAU,SAAA1L,GAAK,OAAI2L,IAAS3L,MAAU,EAClEmT,EAAYD,EAAa,kBAAC,IAAD,CAAiBlQ,KAAMoQ,MAAc,GACpE,OAAO,yBAAK/O,IAAKA,EAAKzB,GAAI+I,EAAM9I,UAAS,0BAAqBqQ,EAAa,qBAAuB,IAAMpQ,QAASqO,GAC9GgC,EACAxH,MAMC0H,EAAgBjD,EAAWpM,KAAI,SAACJ,EAAOM,GAC3C,IAAMyH,EAAOqE,EAAe9L,GAC5B,MAAa,KAATyH,EAAoB,kBAAC,IAAS3E,IAAV,CAAcnE,UAAU,oBAAoBK,MAAOU,EAAOS,IAAKH,GAAQyH,EAAK,4BAAQ/I,GAAI+I,EAAM9I,UAAU,iBACzH,MAGT,OACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAxEhCpB,GAAcH,KAyET6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eAAeC,QA3DpC,SAA0BC,GACxB,IAAMW,EAASX,EAAOW,OACtB,GAAyB,iBAArBA,EAAOb,WAAqD,uBAArBa,EAAOb,UAAoC2M,GAAcD,QAC/F,GAAyB,gBAArB7L,EAAOb,UAA6B,CAC3C,IAAMyQ,EAAa5P,EAAO6P,WAAWC,UAClB,KAAfF,IACFjC,EAAW,IACXpB,EAAkBD,EAAegD,QAAO,SAAArH,GAAI,OAAIA,IAAS2H,UAqDvD,yBAAKzQ,UAAU,sBACZwQ,GAEH,kBAAC,IAAD,CAAiBrQ,KAAMuM,EAAYkE,IAAcC,IAAW5Q,QApDpE,SAA8BC,GAC5ByM,GAAcD,OAqDV,kBAAC,IAASvI,IAAV,CAAc9D,MAAOgN,EAAmBrN,UAAU,cAChD,yBAAKA,UAAU,wBACb,2BAAOU,KAAK,OAAOoQ,YAAY,SAAS9Q,UAAU,oBAAoB7C,MAAOyP,EAAShM,SAAU,SAAAmQ,GAAC,OAAIlE,EAAWkE,EAAElQ,OAAO1D,UACzH,kBAAC,IAAD,CAAiBgD,KAAMsE,IAASxE,QAAS,SAAA8Q,GAAC,OAAIlE,EAAW,QAE3D,yBAAK7M,UAAU,oBAAoBoQ,OCO9B7F,OA1Hf,SAAsBxJ,GAEpB,IAAM9C,EAAO8C,EAAMa,YACXL,EAA6CtD,EAA7CsD,KAAME,EAAuCxD,EAAvCwD,MAAOI,EAAgC5D,EAAhC4D,GAAIC,EAA4B7D,EAA5B6D,KAHE,EAG0B7D,EAAtBoX,qBAHJ,MAGoB,GAHpB,EAIrB7V,EAAWC,cAJU,EAMOC,oBAAS,GANhB,mBAMpBhB,EANoB,KAMTG,EANS,OAOOa,oBAAS,GAPhB,mBAOpBgN,EAPoB,KAOTC,EAPS,OAQGjN,mBAAS,IARZ,mBAQpBkN,EARoB,KAQXC,EARW,OASanN,mBAAS,IATtB,mBASpBsN,EAToB,KASNC,EATM,OAUiBvN,mBAAS2V,GAAiB,IAV3C,mBAUpBlI,EAVoB,KAUJC,EAVI,KAYrBrO,EAAaY,YAAYN,GAEzBgO,EAAoB7J,YAAU,CAAC8J,OAAQZ,EAAY,EAAI,MAEvDa,EAAaC,YAASL,EAAejM,OAAQ,CACjDwC,KAAM,CAAED,QAAS,EAAGlD,YAAa,GAAIkN,WAAY,EAAGnN,UAAW,2BAC/DoN,GAAI,CAAEjK,QAAS,EAAGlD,WAAY,EAAGkN,UAAW,EAAGnN,UAAW,uBAE1DsD,OAAQ,CAAC0R,KAAK,EAAGC,QAAS,IAAKC,SAAU,MA0C3C,SAASlH,EAAqBpO,GAC5B,IAAMqO,EAAcrO,EAAOW,OAAOd,GAE5B0V,EAAatI,EAAetE,WAAU,SAAAC,GAAI,OAAIA,IAASyF,KAAe,EAA1D,sBAAmEpB,GAAnE,CAAmFoB,IACnGpB,EAAegD,QAAO,SAAArH,GAAI,OAAIA,IAASyF,KACzCnB,EAAkBqI,GAClBjH,EAAWiH,GAEb,SAASjH,EAAW7F,GAClB,IAAM5C,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC1C8H,EAAQsP,cAAgB1M,EACxB5H,EAAMiF,WAAWD,GA5CnBE,qBAAU,WACHyG,GAAWlN,EAASV,EAAc+C,MACtC,CAAC6K,EAAW7K,EAAIrC,IAEnByG,qBAAU,WACJlH,IAAe8C,GAAI8K,GAAa,KACnC,CAAC5N,EAAY8C,IAIhBoE,qBAAU,WACRgH,EAAgBnL,EAAKqO,QAAO,SAAArH,GAAI,OAAIA,EAAKxB,cAAcR,SAAS8F,EAAQtF,qBACvE,CAACxF,EAAM8K,IAoCV,IAAMwD,EAAW1D,EAAY,GAC7BM,EAAa7L,KAAI,SAAC2H,EAAMtH,GACtB,IAAM6O,EAAalD,EAAetE,WAAU,SAAA1L,GAAK,OAAI2L,IAAS3L,MAAU,EAClEmT,EAAYD,EAAa,kBAAC,IAAD,CAAiBlQ,KAAMoQ,MAAc,GACpE,OAAO,yBAAK/O,IAAKA,EAAKzB,GAAI+I,EAAM9I,UAAS,0BAAqBqQ,EAAa,qBAAuB,IAAMpQ,QAASqO,GAC9GgC,EACAxH,MAMC0H,EAAgBjD,EAAWpM,KAAI,SAACJ,EAAOM,GAC3C,IAAMyH,EAAOqE,EAAe9L,GAC5B,MAAa,KAATyH,EAAoB,kBAAC,IAAS3E,IAAV,CAAcnE,UAAU,oBAAoBK,MAAOU,EAAOS,IAAKH,GAAQyH,EAAK,4BAAQ/I,GAAI+I,EAAM9I,UAAU,iBACzH,MAGT,OACE,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAxEhCpB,GAAcH,KAyET6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,yBAAKzB,UAAU,eAAeC,QA3DpC,SAA0BC,GACxB,IAAMW,EAASX,EAAOW,OACtB,GAAyB,iBAArBA,EAAOb,WAAqD,uBAArBa,EAAOb,UAAoC2M,GAAcD,QAC/F,GAAyB,gBAArB7L,EAAOb,UAA6B,CAC3C,IAAMyQ,EAAa5P,EAAO6P,WAAWC,UACrC,GAAmB,KAAfF,EAAmB,CACrB,IAAMgF,EAAYtI,EAAegD,QAAO,SAAArH,GAAI,OAAIA,IAAS2H,KACzDrD,EAAkBqI,GAClBjH,EAAWiH,OAoDT,yBAAKzV,UAAU,sBACZwQ,GAEH,kBAAC,IAAD,CAAiBrQ,KAAMuM,EAAYkE,IAAcC,IAAW5Q,QAnDpE,SAA8BC,GAC5ByM,GAAcD,OAoDV,kBAAC,IAASvI,IAAV,CAAc9D,MAAOgN,EAAmBrN,UAAU,cAChD,yBAAKA,UAAU,wBACb,2BAAOU,KAAK,OAAOoQ,YAAY,SAAS9Q,UAAU,oBAAoB7C,MAAOyP,EAAShM,SAAU,SAAAmQ,GAAC,OAAIlE,EAAWkE,EAAElQ,OAAO1D,UACzH,kBAAC,IAAD,CAAiBgD,KAAMsE,IAASxE,QAAS,SAAA8Q,GAAC,OAAIlE,EAAW,QAE3D,yBAAK7M,UAAU,oBAAoBoQ,O,6BCpH9B,SAASsF,GAAU3U,GAIhC,IAAM4U,EAAsB5U,EAAMmQ,OAAOC,QAAQ,KAAM,KAJhB,EAKLzR,mBAASqB,EAAM6U,WALV,mBAKhCA,EALgC,KAKrBC,EALqB,KAiBvC,IvBqCiCC,EuBrC3BC,EAA2B,KAAdH,EAAmB1E,aAAO8E,cvBqCZF,EuBrCwCF,EvBsCzD,IAAI1N,MAAK,IAAIA,MAAOmK,eAAiB,IAAMyD,IuBtC0B/U,EAAM2Q,UAAUuE,SAAUN,GAE7G,GAEF,OACE,yBAAK3V,UAAWoE,KAAO8R,eACrB,2BACExV,KAAK,OACLzD,KAAK,GACL8C,GAAG,GACHC,UAAWoE,KAAO+R,WAClBhZ,MAAOyY,EACPhV,SAAU,SAACmQ,GAAD,OAjBSpI,EAiBcoI,EAAElQ,OAAO1D,MAhB9C0Y,EAAalN,QACb5H,EAAMqV,aAAazN,GAFrB,IAAyBA,KAmBpBoN,EACD,kBAAC,IAAD,CACE/V,UAAWoE,KAAO4N,SAClB7R,KAAMsE,IACNxE,QA5BN,SAAwBC,GACtB2V,EAAa,IACb9U,EAAMqV,aAAa,QCqCR5L,OArDf,SAAczJ,GAEZ,IAAM9C,EAAO8C,EAAMa,YACXL,EAA4GtD,EAA5GsD,KAAME,EAAsGxD,EAAtGwD,MAAOI,EAA+F5D,EAA/F4D,GAHF,EAGiG5D,EAA3FgU,sBAHN,MAGuB,WAHvB,IAGiGhU,EAA9DiU,eAHnC,WAGiGjU,EAA7CwE,iBAHpD,WAGiGxE,EAA3BgY,eAHtE,MAGgF,EAHhF,EAGmFI,EAAcpY,EAAdoY,UAEhGC,EAA6B,KAAdD,QAAkClQ,IAAdkQ,EAArB,WACf,IAAInO,MAAOqO,WAAa,GACzB,KAAM,IAAIrO,MAAOqO,YAEjB,IAAIrO,MAAOqO,WAJK,aAIS,IAAIrO,MAAOsO,aAAe,GACjD,KAAM,IAAItO,MAAOsO,cAEjB,IAAItO,MAAOsO,cAEfH,EAdiB,EAiBe3W,mBAAUwS,EAAwB,GAAdoE,GAjBnC,mBAiBZV,EAjBY,KAiBDC,EAjBC,OAgCenW,oBAAS,GAhCxB,mBAgCZhB,EAhCY,KAgCDG,EAhCC,KAmCnB,OACE4D,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,kBALHpB,GAAcH,KAMtC6C,EAAK,6BACN,0BAAMvB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,kBAACiU,GAAD,CAAWxE,OAAQe,EAAgB2D,UAAWA,EAAWlE,UAAW,CAAEuE,WAAWG,aAAc,SAACjZ,GAAD,OA1BvG,SAA6B2Y,GAC3B/M,QAAQC,IAAR,wCAAkD8M,GAClDD,EAAaC,GAEb,IAAM/P,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IAC5B,KAAV6X,EAAc/P,EAAQsQ,UAAYP,SAC1B/P,EAAQsQ,UACpBtQ,EAAQmM,QAAqB,KAAV4D,EACnB/U,EAAMiF,WAAWD,GAkB+F0Q,CAAoBtZ,QAIlI,I,oBC1CS,SAASuZ,GAAc3V,GAEpC,IAAM4V,EAAsB5V,EAAMmQ,OAAOC,QAAQ,OAAQ,OAAOA,QAAQ,KAAM,KAGxEyF,EAAgB7V,EAAM6V,cAGxBxF,EAA+B,KAAlBwF,EAAD,UAA4B1F,aAAO,IAAIhJ,KAAK0O,GAAgB,eAAkB1F,aAAO,IAAIhJ,KAAQ,cAC7G0N,EAA+B,KAAlBgB,EAAD,UAA4B,IAAI1O,KAAK0O,GAAeC,uBAAyB,IAAI3O,MAAO2O,qBAmBxG,IAAMC,EAAyC,KAAlBF,EAAwB1F,aAAO,IAAIhJ,KAAK0O,GAAgBD,GAAuB,GAE5G,OACE,yBAAK3W,UAAWoE,KAAO2S,mBACrB,6BACE,2BAAOrW,KAAK,OAAOV,UAAWoE,KAAO0N,WAAY7U,KAAK,GAAG8C,GAAG,GAAGa,SAtBrE,SAA6BV,GAE3BkR,EAAYlR,EAAOW,OAAO1D,MAC1B4D,EAAMiW,iBAAiB9W,EAAOW,OAAO1D,MAAQ,IAAMyY,MAoB/C,2BAAOlV,KAAK,OAAOV,UAAWoE,KAAO+R,WAAYlZ,KAAK,GAAG8C,GAAG,GAAGa,SAlBrE,SAA6BV,GAE3B0V,EAAY1V,EAAOW,OAAO1D,MAC1B4D,EAAMiW,iBAAiB5F,EAAY,IAAMlR,EAAOW,OAAO1D,WAiBpD2Z,EACD,kBAAC,IAAD,CACE9W,UAAWoE,KAAO4N,SAClB7R,KAAMsE,IACNxE,QAlBN,WACEmR,EAAY,GACZwE,EAAY,GACZ7U,EAAMiW,iBAAiB,QCmBZvM,OAjDf,SAAkB1J,GAEhB,IAAM9C,EAAO8C,EAAMa,YACLH,GAAwGxD,EAA9GsD,KAA8GtD,EAAxGwD,OAAOI,EAAiG5D,EAAjG4D,GAHE,EAG+F5D,EAA7FgU,sBAHF,MAGmB,sBAHnB,IAG+FhU,EAArDiU,eAH1C,WAG+FjU,EAApCwE,iBAH3D,SAG6EmR,EAAkB3V,EAAlB2V,cAE9FqD,EAAqC,KAAlBrD,QAA0CzN,IAAlByN,EAAzB,UACnB5L,IAAiBqK,eAAiB,IAAMrK,IAAiB6O,sBAE5DjD,EARqB,EAUmBlU,mBAAUwS,EAA4B,GAAlB+E,GAVvC,mBAUhBL,EAVgB,KAUDM,EAVC,OA4BWxX,oBAAS,GA5BpB,mBA4BhBhB,EA5BgB,KA4BLG,EA5BK,KA+BvB,OACE4D,EACE,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,kBALHpB,GAAcH,KAKzC,WACU,6BACR,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAKyB,GACL,kBAACiV,GAAD,CAAexF,OAAQe,EAAgB2E,cAAeA,EAAeI,iBAAkB,SAAC7Z,GAAD,OA1B/F,SAAiCga,GAG/BD,EAAiBC,GAEjB,IAAMpR,EAAUnI,KAAKiC,MAAMjC,KAAKC,UAAUI,IACxB,KAAdkZ,EAAkBpR,EAAQ6N,cAAgBuD,SAClCpR,EAAQ6N,cACpB7N,EAAQmM,QAAyB,KAAdiF,EACnBpW,EAAMiF,WAAWD,GAiBuFqR,CAAwBja,QAI9H,ICzCSuN,OARf,WACE,OACE,2CCMWC,OARf,WACE,OACE,2CC8BWC,OAhCf,SAA4B7J,GAE1B,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHkB,EAGQ5D,EAAtBwE,iBAHc,WAWC/C,oBAAS,GAXV,mBAW1BhB,EAX0B,KAWfG,EAXe,KAajC,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,qBACoB,6BAClB,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICpBWoJ,OARf,WACE,OACE,oDCMWC,OARf,WACE,OACE,8DC8BWC,OAhCf,SAAsBhK,GAEpB,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHY,EAGc5D,EAAtBwE,iBAHQ,WAWO/C,oBAAS,GAXhB,mBAWpBhB,EAXoB,KAWTG,EAXS,KAa3B,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,eACc,6BACZ,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICpBWuJ,OARf,WACE,OACE,uDCMWC,OARf,WACE,OACE,gEC8BWC,OAhCf,SAAwBnK,GAEtB,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHc,EAGY5D,EAAtBwE,iBAHU,WAWK/C,oBAAS,GAXd,mBAWtBhB,EAXsB,KAWXG,EAXW,KAa7B,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,iBACgB,6BACd,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICpBW0J,OARf,WACE,OACE,yDCMWC,OARf,WACE,OACE,8CCMWC,OARf,WACE,OACE,qDCyCWC,OAvCf,SAA8BvK,GAE5B,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHoB,EAGM5D,EAAtBwE,iBAHgB,SAM7BjD,EAAWC,cANkB,EAkBDC,oBAAS,GAlBR,mBAkB5BhB,EAlB4B,KAkBjBG,EAlBiB,KAoBnC,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAdhCpB,GAAcH,KAcZ,uBACsB,6BACpB,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,oBAAoBC,QAjB5C,SAAmCC,GAEjCV,EAAS1B,EAAkB,aAgBpB2D,KAKP,ICPW8J,OAhCf,SAAwBxK,GAEtB,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHc,EAGY5D,EAAtBwE,iBAHU,WAWK/C,oBAAS,GAXd,mBAWtBhB,EAXsB,KAWXG,EAXW,KAa7B,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,iBACgB,6BACd,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,ICIW+J,OAhCf,SAA4BzK,GAE1B,IAAM9C,EAAO8C,EAAMa,YACXH,EAAiCxD,EAAjCwD,MAAOI,EAA0B5D,EAA1B4D,GAHkB,EAGQ5D,EAAtBwE,iBAHc,WAWC/C,oBAAS,GAXV,mBAW1BhB,EAX0B,KAWfG,EAXe,KAajC,OACE4D,EACA,yBAAKzC,UAAU,qBACb,yBAAKA,UAAU,MAAMC,QAAS,WAThCpB,GAAcH,KASZ,qBACoB,6BAClB,0BAAMsB,UAAU,cAAc6B,IAEhC,8BAAU7B,UAAWtB,EAAY,GAAK,SAAUzB,KAAK,GAAG8C,GAAG,GAAGkC,KAAK,KAAKC,KAAK,IAAI/E,MAAOS,KAAKC,UAAUI,GAAOiJ,UAAQ,IACtH,yBAAKlH,UAAU,WACb,4BAAQA,UAAU,qBACfyB,KAKP,I,oBCoCW,SAAS4V,KAEtB,IAAMhO,EAAa,CACjBvI,0BACAa,mBACAa,QACAuC,OACAqE,cACAE,wBACAC,yBACAC,OACAtB,QACAuB,SACAC,eACAC,uBACAC,aACAC,iBACAC,aACAC,qBACAC,iBACAC,UACAC,YACAC,WACAC,WACAC,gBACAC,cACAC,gBACAC,QACAC,YACAC,aACAC,aACAC,sBACAC,sBACAC,gCACAC,gBACAC,yBACAC,kCACAC,kBACAC,2BACAC,gBACAC,uBACAC,wBACAC,kBACAC,uBAGIvN,EAAO0B,YAAY3B,GACnBU,EAAYiB,YAAYP,GACxBT,EAAWgB,YAAYL,GACvBgY,EAAoB3X,YAAYT,GAChC9B,EAAiBuC,YAAYzB,GAC7BsB,EAAWC,cAEX8X,EAAkB5X,aAAY,SAAApC,GAAK,OAAIA,EAAMiB,WAAWrB,SACxDqa,OAAuCrR,IAAlBlI,EAAKgD,SAA0BhD,EAAKgD,SAASsW,GAAmB,GAE5EjW,GAAakW,EAApB/V,MAAoB+V,EAAblW,UAxDoB,EA0DH5B,mBAAS,IA1DN,mBA0D5B+X,EA1D4B,KA0DlB7Y,EA1DkB,OA2DDc,oBAAS,GA3DR,6BAsHnC,SAASgY,EAAmBC,GAE1B,IAAMC,EAAiB3Z,EAAKgD,SAASsW,GAEjCM,EAAW,GAiCf,OA/BAD,EAAetW,SAASwW,SAAQ,SAAChP,EAAMzH,GACjCyH,EAAKiP,eAAe,aAEtBjP,EAAKxH,SAASwW,SAAQ,SAACE,EAASC,GAC1BD,EAAQD,eAAe,aAEzBC,EAAQ1W,SAASwW,SAAQ,SAACI,EAAYC,GAChCD,EAAWrW,KAAO8V,IAEpBE,EAAW,CAAEO,QAASb,EAAiBlW,QAAO4W,WAAUE,eAC5CD,MAKdF,EAAQnW,KAAO8V,IAEjBE,EAAW,CAAEO,QAASb,EAAiBlW,QAAO4W,YAClCD,MAKdlP,EAAKjH,KAAO8V,IAEdE,EAAW,CAAEO,QAASb,EAAiBlW,SAC3BpD,EAAKgD,SAASsW,GAAiBjW,SAASD,OAKjDwW,EAOT,SAASpM,EAAkBpD,GACzBU,QAAQC,IAAI,eAAgB5L,GACL,KAAnBA,GAAuBoC,EAAS1B,EAAkB,aAEtD,IAAMua,EAAcX,EAAmBrP,EAAMxG,IAGzCyW,EAAe1a,KAAKiC,MAAMjC,KAAKC,UAAUI,IAG7Cqa,EAAarX,SAASoX,EAAYD,SAAS9W,SAAS+W,EAAYhX,OAASgH,EACzE7I,EAASlC,EAAQgb,IAhHnBrS,qBAAU,WAGR,QAAiBE,IAAb7E,EAAwB,CAC1B,IAAMiX,EAAuBjX,EAASH,KAAI,SAACC,EAASC,GAClD,IAEImX,EAFEzM,EAAgBtE,EAAerG,EAAQG,MAG7C,QAAkC4E,IAA9BkD,EAAW0C,GAA8B,CAC3C,IAAMC,EAAY3C,EAAW0C,GAC7ByM,EAAmB,kBAACxM,EAAD,CAAWxK,IAAG,UAAKuK,EAAc0M,UAAU,EAAG,GAAGnR,cAAnC,YAAoDlG,EAAQsX,WAAa9W,YAAaR,EAAS4E,WAAYyF,IAE9I,OAAO+M,KAET5Z,EAAY2Z,QAET3Z,EAAY,MAChB,CAAC0C,IAEJ2E,qBAAU,WAER,IAAIqS,EAAe1a,KAAKiC,MAAMjC,KAAKC,UAAUI,SAEvBkI,IAAlBlI,EAAKgD,UACPhD,EAAKgD,SAASsW,GAAiBjW,SAASwW,SAAQ,SAAAhM,GAE9C,IAAMuM,EAAcX,EAAmB5L,EAAQjK,SAE0CsE,IAArFmS,EAAarX,SAASoX,EAAYD,SAAS9W,SAAS+W,EAAYhX,OAAOoB,YACzE6V,EAAarX,SAASoX,EAAYD,SAAS9W,SAAS+W,EAAYhX,OAAOoB,WAAY,EACnFsG,QAAQC,IAAI,oCAAkC8C,EAAQjK,GAAIiK,EAAQ6M,eAMxErB,EAAkBQ,SAAQ,SAAA/X,GACxB,IAAMsY,EAAcX,EAAmB3X,GACvCuY,EAAarX,SAASoX,EAAYD,SAAS9W,SAAS+W,EAAYhX,OAAOoB,WAAY,KAGrFjD,EAASlC,EAAQgb,MAChB,CAAChB,IAEJrR,qBAAU,cAEP,CAAChI,EAAKgD,WAsET,IAAM2X,EAA8B,YAAnBxb,EACf,yBAAK4C,UAAU,YACZ6Y,MAAM,GAAGC,KAAK,IAAI3X,KAAI,SAAC2H,EAAMzH,GAAP,OAAiB,yBAAKG,IAAKH,EAAOrB,UAAS,UAAKqB,EAAQ,IAAM,EAAI,uBAAyB,GAAhD,wBAGpE,GAGF,OACE,yBAAKrB,UAAU,SAEb,yBAAKA,UAAS,UAAKrB,EAASuC,OAAS,EAAI,GAAK,SAAhC,eACXvC,GAIFia,EAEAnB,EAED,8BACExa,KAAK,aACL8C,GAAG,aACHC,UAAWtB,EAAS,UAAM0F,KAAO2U,OAAU,SAE3C7W,KAAK,KACL/E,MAAOS,KAAKC,UAAUyD,GACtBV,SAAU,SAAAmQ,GAAC,OAAIvR,EAASlC,EAAQM,KAAKiC,MAAMkR,EAAElQ,OAAO1D,a,wBC9M7C6b,OAjDf,WAEE,IAAMxZ,EAAWC,cAEXwZ,EAAWtZ,YAAYpB,GACvBN,EAAO0B,YAAY3B,GAGnBkb,EAAajb,EAAKgD,SAAYhD,EAAKgD,SAASC,OAAS,EACrDiY,EAAYlb,EAAKgD,SAAYhD,EAAKgD,SAASgY,GAAUxX,MAAQ,GAmBnE,OACE,yBAAKzB,UAAWoE,KAAOgV,KACrB,4BAAQpZ,UAAU,kBAAkBkH,SAAwB,IAAdgS,GAAgC,IAAbD,EAAgBhZ,QAAS,SAAC8Q,GAd7FvR,EAASpB,EAAY,MAejB,kBAAC,IAAD,CAAiB+B,KAAMkZ,OAEzB,4BAAQrZ,UAAU,kBAAkBkH,SAAwB,IAAdgS,GAAgC,IAAbD,EAAgBhZ,QAAS,SAAC8Q,GAdzFkI,EAAW,GAAGzZ,EAASnB,OAevB,kBAAC,IAAD,CAAiB8B,KAAMmZ,OAEzB,yBAAKtZ,UAAWoE,KAAO6K,OACrB,4BAAKkK,IAEP,4BAAQnZ,UAAU,kBAAkBkH,SAAwB,IAAdgS,GAAmBD,IAAaC,EAAY,EAAGjZ,QAAS,SAAC8Q,GAjBrGkI,EAAWC,EAAY,GAAG1Z,EAASlB,OAkBnC,kBAAC,IAAD,CAAiB6B,KAAMoZ,OAEzB,4BAAQvZ,UAAU,kBAAkBkH,SAAwB,IAAdgS,GAAmBD,IAAaC,EAAY,EAAGjZ,QAAS,SAAC8Q,GAjBzGvR,EAASpB,EAAY8a,EAAY,MAkB7B,kBAAC,IAAD,CAAiB/Y,KAAMqZ,S,iDCjDhB,SAASC,GAAM1Y,GAAQ,IAE5BmC,EAA0DnC,EAA1DmC,WAAYC,EAA8CpC,EAA9CoC,iBAAkBE,EAA4BtC,EAA5BsC,IAAKC,EAAuBvC,EAAvBuC,SAAUoW,EAAa3Y,EAAb2Y,SAC/CnW,EAAsBC,YAC1B,CACEC,QAASP,EAAa,EAAI,EAC1BQ,KAAM,CAAED,QAAS,EAAGE,OAAQ,IAC5BC,OAAQA,IAAOC,SAGb8V,EAAmBnW,YACvB,CACEC,QAASP,EAAa,EAAI,EAC1Ba,IAAKb,EAAa,GAAK,GACvBQ,KAAM,CAAED,QAAS,GACjBG,OAAQA,IAAOI,QAQnB,IAAMC,EAAgBX,EAAW,CAAEY,gBAAiBZ,GAAa,GAvB9B,EAyBH5D,mBAAS,IAzBN,mBAyB5Bka,EAzB4B,KAyBlBC,EAzBkB,OA0BHna,mBAAS,IA1BN,mBA0B5Boa,EA1B4B,KA0BlBC,EA1BkB,OA2BPra,mBAAS,IA3BF,mBA2B5Bsa,EA3B4B,KA2BpBC,EA3BoB,KA6BnC,OACE,kBAAC,IAAS9V,IAAV,CAAc9D,MAAOkD,GACnB,yBACExD,GAAG,WACHC,UAAS,UAAKoE,KAAO8V,cAAZ,YAA6BhX,EAAa,GAAKkB,KAAO+V,sBAC/Dla,QAfN,SAAgCC,GACL,aAArBA,EAAOW,OAAOd,IAAmBoD,KAejC9C,MAAO4D,GACP,kBAAC,IAASE,IAAV,CAAc9D,MAAOsZ,GACnB,yBACE3Z,UAAWoE,KAAOgW,eAClB/Z,MAAOgD,GACP,yBAAKrD,UAAWoE,KAAOiW,WAAYpa,QAASkD,GAC1C,kBAAC,IAAD,CAAiBhD,KAAMsE,OAEzB,yBAAKzE,UAAWoE,KAAOkW,aACrB,kBAAC,IAAD,CAAiBna,KAAMoa,OAEzB,yBAAKva,UAAWoE,KAAOoW,cACrB,8BACE,2BAAO/Z,QAAQ,YAAf,YACA,2BAAOC,KAAK,OAAOzD,KAAK,WAAW8C,GAAG,WAAWa,SAAU,SAAAmQ,GAAC,OAAI8I,EAAY9I,EAAElQ,OAAO1D,QAAQsd,QAAS,kBAAM1Z,EAAM2Z,gBAClH,2BAAOja,QAAQ,YAAf,YACA,2BAAOC,KAAK,WAAWzD,KAAK,WAAW8C,GAAG,WAAWa,SAAU,SAAAmQ,GAAC,OAAIgJ,EAAYhJ,EAAElQ,OAAO1D,QAAQsd,QAAS,kBAAM1Z,EAAM2Z,gBACtH,2BAAOja,QAAQ,UAAf,UACA,2BAAOC,KAAK,OAAOzD,KAAK,SAAS8C,GAAG,SAASa,SAAU,SAAAmQ,GAAC,OAAIkJ,EAAUlJ,EAAElQ,OAAO1D,QAAQsd,QAAS,kBAAM1Z,EAAM2Z,kBAGhH,yBAAK1a,UAAWoE,KAAOuW,aACrB,4BAAQ3a,UAAU,kBAAkBC,QAAS,SAAA8Q,GAAC,OAAIhQ,EAAM6Z,SAAShB,EAAUE,EAAUE,KAArF,UACCN,O,wBCxCA,SAASmB,GAAiB9Z,GAAQ,IAAD,EAEhBrB,mBAAS,IAFO,mBAEvCkN,EAFuC,KAE9BC,EAF8B,KAIxCiO,EAAQ/Z,EAAM+Z,MACdC,EAAgBha,EAAMga,cAGtB/N,EAAeJ,EAAQ1L,OAAS,EAAI4Z,EAAM3K,QAAO,SAAArH,GAAI,OAAI2D,OAAO3D,EAAKkS,OAAO1T,cAAcR,SAAS8F,EAAQtF,kBAAkBwT,EARrF,EApBhD,SAAoBG,GAAmB,IAAD,EACFvb,mBAASub,GADP,mBAC7BtC,EAD6B,KAClBuC,EADkB,KAE9BC,EAAMC,iBAAO,MAEbC,EAAqB,SAACC,GACtBH,EAAII,UAAYJ,EAAII,QAAQC,SAASF,EAAMza,SAC7Cqa,GAAa,IAUjB,OANAjV,qBAAU,WAER,OADAwV,SAASC,iBAAiB,QAASL,GAAoB,GAChD,WACLI,SAASE,oBAAoB,QAASN,GAAoB,MAE3D,IACI,CAAEF,MAAKxC,YAAWuC,gBAcgBU,EAAW,GAA5CT,EAVsC,EAUtCA,IAAKxC,EAViC,EAUjCA,UAAWuC,EAVsB,EAUtBA,aAExB,SAASW,EAAmB3b,EAAQ4b,IAClC5b,EAAO6b,kBAIH7b,EAAO8b,cAAchc,UAAU8G,SAAS,WAC1C/F,EAAMkb,aAAa,IAIjBlB,EACuBha,EAAMmb,cAAcrT,WAAU,SAAAC,GAAI,OAAIA,IAASgT,MAEhD,EACtB/a,EAAMkb,aAAalb,EAAMmb,cAAc/L,QAAO,SAAArH,GAAI,OAAIA,IAASgT,MAE5D/a,EAAMkb,aAAN,sBAAuBlb,EAAMmb,eAA7B,CAA4CJ,MAGjD/a,EAAMkb,aAAa,CAACH,IACpBZ,GAAa,IAKjB,OACE,yBAAKlb,UAAWoE,KAAO+X,4BACrB,yBAAKnc,UAAWoE,KAAOgY,wBAAyBnc,QAAS,SAAA8Q,GAAC,OAAImK,GAAcvC,KAC1E,yBAAK3Y,UAAWoE,KAAOiY,oCACpBtb,EAAMmb,cAAc/a,KAAI,SAAC2H,EAAMzH,GAAP,OAAiB,yBAAKG,IAAKH,EAAOrB,UAAWoE,KAAOkY,+BAC1ExT,EAAKkS,MACN,0BAAMhb,UAAWoE,KAAOmY,oBAAqBtc,QAAS,SAAC8Q,GAAD,OAAO8K,EAAmB9K,EAAGjI,KACjF,kBAAC,IAAD,CAAiB3I,KAAMsE,YAI7B,yBAAKzE,UAAWoE,KAAOoY,0BACrB,kBAAC,IAAD,CAAiBrc,KAAMwY,EAAY/H,IAAcC,QAGpD8H,GAAa,yBAAKtY,MAAO,CAAEoc,SAAU,YAAczc,UAAS,UAAKoE,KAAOsY,uBAAyBvB,IAAKA,GACrG,yBAAKnb,UAAWoE,KAAOuY,kCACrB,2BAAOjc,KAAK,OAAOvD,MAAOyP,EAAShM,SAAU,SAAAmQ,GAAC,OAAIlE,EAAWkE,EAAElQ,OAAO1D,UACtE,kBAAC,IAAD,CAAiBgD,KAAMsE,IAASxE,QAAS,SAAA8Q,GAAC,OAAIlE,EAAW,QAE3D,yBAAK7M,UAAWoE,KAAOwY,iCACpB5P,EAAa7L,KAAI,SAAC2H,EAAMzH,GAAP,OAAiB,0BAAMG,IAAKH,EAAOrB,UAAS,UAAKoE,KAAOyY,WAAZ,YAA0B9b,EAAMmb,cAAcrT,WAAU,SAAAiU,GAAY,OAAIhU,EAAKkS,QAAU8B,EAAa9B,UAAU,EAAI5W,KAAO2Y,uCAAyC,IAAM9c,QAAS,SAAC8Q,GAAD,OAAO8K,EAAmB9K,EAAGjI,KAAQA,EAAKkS,aCgdpRgC,OA9gBf,WAEerd,YAAY3B,GAAzB,IACMwB,EAAWC,cACXrC,EAAiBuC,YAAYzB,GAE7B+e,EAAS,+BANO,EAQIvd,mBAAS,IARb,mBAQfmO,EARe,KAQRqP,EARQ,OASExd,mBAAS,IATX,mBASfyd,EATe,KASTC,EATS,OAWU1d,mBAAS,IAXnB,mBAWf2d,EAXe,KAWLC,EAXK,OAYY5d,mBAAS,IAZrB,mBAYf6d,EAZe,KAYJC,EAZI,OAaY9d,mBAAS,IAbrB,mBAaf+d,EAbe,KAaJC,EAbI,OAewBhe,mBAAS,IAfjC,mBAefie,EAfe,KAeEC,EAfF,OAgB4Ble,mBAAS,IAhBrC,mBAgBfme,EAhBe,KAgBIC,EAhBJ,OAkB0Bpe,mBAAS,IAlBnC,mBAkBfqe,EAlBe,KAkBGC,EAlBH,OAmBgCte,mBAAS,IAnBzC,mBAmBfue,EAnBe,KAmBMC,EAnBN,OAqB0Bxe,mBAAS,IArBnC,gCAsBgCA,mBAAS,KAtBzC,oBAsBfye,GAtBe,MAsBMC,GAtBN,SAwBgC1e,oBAAS,GAxBzC,qBAwBf2e,GAxBe,MAwBMC,GAxBN,SAyBgC5e,qBAzBhC,qBAyBf6e,GAzBe,MAyBMC,GAzBN,SA6BgC9e,oBAAS,GA7BzC,qBA6Bf+e,GA7Be,MA6BMC,GA7BN,SA8BoBhf,mBAAS,IA9B7B,qBA8Bfif,GA9Be,MA8BAC,GA9BA,MAmCtB3Y,qBAAU,WACR,IAAM4Y,EAAYlB,EAAgBzc,OAAS,EAAIyc,EAAgB,GAAG5d,GAAK,GACvEgJ,QAAQC,IAAI,iCAA+B6V,GACvCA,EAAY,IACdf,EAAqBe,GAmNzB,SAAsBC,GAEpBR,IAAuB,GAEvB,IAAMS,EAAmB,IAAIhR,QAC7BgR,EAAiB/Q,OAAO,gBAAxB,iBAAmDH,EAAMI,eACzD8Q,EAAiB/Q,OAAO,eAAgB,qCAExC,IAAME,EAAiB,CACrBC,OAAQ,MACRC,QAAS2Q,EACT1Q,SAAU,UAGZI,MAAM,GAAD,OAAIwO,EAAJ,wBAA0B6B,EAA1B,uDAA2F5Q,GAC7FQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ2O,EAAa5f,KAAKiC,MAAMgP,IACxByP,IAAuB,MAExBrO,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,MAvOrC8O,CAAaH,GAyQjB,SAAsBC,GACpBN,IAAuB,GAEvB,IAAMS,EAAmB,IAAIlR,QAC7BkR,EAAiBjR,OAAO,gBAAxB,iBAAmDH,EAAMI,eACzDgR,EAAiBjR,OAAO,eAAgB,qCAExC,IAAME,EAAiB,CACrBC,OAAQ,MACRC,QAAS6Q,EACT5Q,SAAU,UAGZI,MAAM,GAAD,OAAIwO,EAAJ,wBAA0B6B,EAA1B,4FAAgI5Q,GAClIQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ6O,EAAa9f,KAAKiC,MAAMgP,IACxB2P,IAAuB,MAExBvO,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,MA5RrCgP,CAAaL,MAEd,CAAClB,IAUJ1X,qBAAU,WAEJgY,EAAoB/c,OAAS,GAC/Bie,GAAgBlB,EAAoB,GAAGpc,IACpC6M,MAAK,SAAA0Q,GAEJpB,EAAoBoB,GACpB5f,EAAS1B,EAAkB,gBAGhC,CAACmgB,IAEJhY,qBAAU,WAER,GADA8C,QAAQC,IAAI,yBAAuB+U,QACH5X,IAA5B4X,EAAiBsB,OAAsB,CACzC,IAAMC,EAAavB,EAAiBsB,OACpC3hB,aAAaC,QAAQ,cAAeC,KAAKC,UAAUuK,EAAcxK,KAAKiC,MAAMyf,MAC5E9f,EAASlC,EAAQ8K,EAAcxK,KAAKiC,MAAMyf,SAI3C,CAACvB,IAGJ9X,qBAAU,WAKN,IAAIwV,GAJN1S,QAAQC,IAAI,wCAAsCmV,IAC9CA,GAAoBjd,OAAS,KAC/B1B,EAAS1B,EAAkB,YAhFT,4CAmFlByhB,CAAgBpB,GAAoB,GAAGtc,IACpC6M,MAAK,SAAAvR,GAAK,OAAIse,EAAWte,KAEzBuR,MAAK,SAAAvR,GAAK,OACTgiB,GAAgBhiB,EAAMqiB,wBACnB9Q,MAAK,SAAA0Q,IA0UhB,SAAuBK,EAAWC,GAChC,IAAMC,EAAmBvX,EAAcxK,KAAKiC,MAAM4f,IAKlDC,EAAUpe,SAASwW,SAAQ,SAAAhP,GAEzB,IAAM+O,E9C3bL,SAAiCxP,EAAOuX,GAG7C,IAAMC,EAAczX,EAAcC,GAAOpH,SAErC6e,EAAY,GAsChB,MApCmB,cAAfF,GACFC,EAAY/H,SAAQ,SAACM,EAAS2H,GAC5B3H,EAAQ9W,SAASwW,SAAQ,SAAChP,EAAMzH,GAC1ByH,EAAKiP,eAAe,aAEtBjP,EAAKxH,SAASwW,SAAQ,SAACE,EAASC,GAC1BD,EAAQD,eAAe,aAEzBC,EAAQ1W,SAASwW,SAAQ,SAACI,EAAYC,QACdhS,IAAlB+R,EAAWrW,IAAoBqW,EAAWrW,KAAO+d,GAEnDE,EAAU7W,KAAK,CAAC8W,EAAc1e,EAAO4W,EAAUE,YAMlChS,IAAf6R,EAAQnW,IAAoBmW,EAAQnW,KAAO+d,GAE7CE,EAAU7W,KAAK,CAAC8W,EAAc1e,EAAO4W,YAM3B9R,IAAZ2C,EAAKjH,IAAoBiH,EAAKjH,KAAO+d,GAEvCE,EAAU7W,KAAK,CAAC8W,EAAc1e,UAS/Bye,E8CgZcE,CAAwBL,EAAkB7W,EAAKjH,IAKhE,GADIgW,EAAS3W,OAAS,GAAG1B,EAASR,EAAY,gBAAD,OAAiB8J,EAAKjH,GAAtB,6BACrB,IAApBgW,EAAS3W,OAAb,CAEA,IAAM+e,EAAmBpI,EAAS,GAGlC,OAAQA,EAAS,GAAG3W,QAClB,KAAK,EACH,IAAMgf,EAAiBP,EAAiB1e,SAASgf,EAAiB,IAAI3e,SAAS2e,EAAiB,IAChGN,EAAiB1e,SAASgf,EAAiB,IAAI3e,SAAS2e,EAAiB,IAAzE,eAAoFC,EAApF,GAAuGpX,GAEvG,MACF,KAAK,EACHC,QAAQC,IAAI,sBACZ,MACF,KAAK,EACHD,QAAQC,IAAI,6BAMlBD,QAAQC,IAAI,oDAAsD2W,GAClEngB,EAASlC,EAAQqiB,IA3WPQ,CAAcf,EAASC,OAAQzhB,KAAKiC,MAAM4b,EAAS2E,UAAU,IAC7D5gB,EAAS1B,EAAkB,oBAIpC,CAACqgB,KAGJlY,qBAAU,WACR,GAAuB,WAAnB7I,EAA6B,CAG/B,IAAIijB,EAAWziB,KAAKC,UAAU,C9CzB3B,CAAEyD,SAAUmH,K8C0BfM,QAAQC,IAAR,oBAA8BqX,GAG9B,IAAMjS,EAAU,IAAIL,QAEpBK,EAAQJ,OAAO,gBAAf,iBAA0CH,EAAMI,eAGhD,IAAMqS,EAAe1iB,KAAKC,UAAU,CAClC,GAAM,EACN,UAAaggB,EACb,YAAe,GACf,MAAS,cACT,eAAkB,KAClB,uBAA0BM,GAAoBtc,GAC9C,mBAAsB,IACtB,iBAAoB,aACpB,SAAYwe,EACZ,iBAAoB,IACpB,mBAAsB,KACtB,mBAAsB,OAGlBE,EAAqB3iB,KAAKC,UAAUyiB,GAEtCE,EAAW,IAAIC,SACnBD,EAASxS,OAAO,WAAYsS,GAE5BvX,QAAQC,IAAR,8CAAqDuX,GAErD,IAAMrS,EAAiB,CACrBC,OAAQ,OACRC,QAASA,EACTsS,KAAMF,GAkBR/R,MAAM,GAAD,OAAIwO,EAAJ,wBAA0BY,EAA1B,8BAAiEI,EAAoBpc,GAArF,WAAkGqM,GACpGQ,MAAK,SAAAiS,GAAG,OAAIA,EAAI/R,UAChBF,MAAK,SAAAG,GAAM,OAAI9F,QAAQC,IAAI,aAAc6F,MACzCoB,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,SAKxC,CAAC9S,IAYJ,IAoCMwjB,GAAU,SAACC,GACf,IAAMC,EAAc,IAAI/S,QACxB+S,EAAY9S,OAAO,gBAAnB,iBAA8C6S,IAE9C,IAAM3S,EAAiB,CACrBC,OAAQ,MACRC,QAAS0S,GAGXrS,MAAM,GAAD,OAAIwO,EAAJ,aAAuB/O,GACzBQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAM,OAAIuO,EAAQxf,KAAKiC,MAAMgP,OAClCoB,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,OA9NnB,SAmRPiP,GAnRO,mFAmRtB,WAA+B4B,GAA/B,oBAAAC,EAAA,6DACEjY,QAAQC,IAAI,4BAA0B+X,IAGhCE,EAAkB,IAAIlT,SACZC,OAAO,gBAAvB,iBAAkDH,EAAMI,eACxDgT,EAAgBjT,OAAO,eAAgB,qCAEjCE,EAAiB,CACrBC,OAAQ,MACRC,QAAS6S,EACT5S,SAAU,UAXd,SAcQI,MAAM,GAAD,OAAIwO,EAAJ,wBAA0BU,EAAgB,GAAG5d,GAA7C,mCAA0EghB,GAAe7S,GACjGQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJuQ,EAAWxhB,KAAKiC,MAAMgP,MAGvBoB,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,MApBzC,gCAsBSkP,GAtBT,4CAnRsB,sEAyUtB,WAA+B8B,GAA/B,oBAAAF,EAAA,6DAEMvF,EAAW,IAETwF,EAAkB,IAAIlT,SACZC,OAAO,gBAAvB,iBAAkDH,EAAMI,eACxDgT,EAAgBjT,OAAO,eAAgB,qCAEjCE,EAAiB,CACrBC,OAAQ,MACRC,QAAS6S,EACT5S,SAAU,UAXd,SAcQI,MAAM,GAAD,OAAIwO,EAAJ,wBAA0BY,EAA1B,qBAAwDqD,GAAehT,GAC/EQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAGJ4M,EAAW7d,KAAKiC,MAAMgP,GAAQsS,YAG/BlR,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,MAtBzC,gCAuBSuL,GAvBT,4CAzUsB,sBA0ctB,IAAM2F,GAAgB/C,GAAsB,yBAAKre,UAAU,WAAf,yBAAuD2d,EAAgBzc,OAAS,EAAI,oBAAsB,GAChJmgB,GAAgB9C,GAAsB,yBAAKve,UAAU,WAAf,yBAAuD2d,EAAgBzc,OAAS,EAAI,oBAAsB,GAEtJ,OACE,yBAAKlB,UAAU,QAEb,4BAAQA,UAAS,0BAAqBmd,EAAK1N,UAAY,SAAW,IAAMxP,QAAS,kBAAMye,IAAuB,KAA9G,SAGA,yBAAK1e,UAAS,oBAAeqd,EAASnc,OAAS,EAAI,GAAK,WACtD,wBAAIlB,UAAU,kBAAd,oBAGA,kBAAC6a,GAAD,CAAkBE,eAAe,EAAOD,MAAOuC,EAASlc,KAAI,SAAA2H,GAAI,MAAK,CAAEkS,MAAOlS,EAAKiH,KAAMhQ,GAAI+I,EAAKjH,OAAQqa,cAAeyB,EAAiB1B,aAAc,SAACnT,GAAD,OAAU8U,EAAmB9U,OAQvL,yBAAK9I,UAAS,oBAA0C,IAA3B2d,EAAgBzc,OAAe,GAAK,yBAC/D,wBAAIlB,UAAU,kBAAkBohB,IAChC,yBAAKphB,UAAS,UAAKud,EAAUrc,OAAS,EAAI,GAAK,WAE7C,kBAAC2Z,GAAD,CAAkBE,eAAe,EAAOD,MAAOyC,EAAUpc,KAAI,SAAA2H,GAAI,MAAK,CAAEkS,MAAOlS,EAAKwY,OAAQzf,GAAIiH,EAAKjH,OAAQqa,cAAe+B,EAAqBhC,aAAc,SAACnT,GAAD,OAAUoV,EAAuBpV,QAOpM,yBAAK9I,UAAU,eACb,0BAAMA,UAAS,UAAKud,EAAUrc,OAAS,EAAI,GAAK,WAAhD,OAMF,yBAAKlB,UAAU,aACb,wBAAIA,UAAU,kBAAkBqhB,IAChC,yBAAKrhB,UAAS,UAAKud,EAAUrc,OAAS,EAAI,GAAK,WAC7C,kBAAC2Z,GAAD,CAAkBE,eAAe,EAAOD,MAAO2C,EAAUtc,KAAI,SAAA2H,GAAI,MAAK,CAAEkS,MAAOlS,EAAKrH,MAAOI,GAAIiH,EAAKjH,OAAQqa,cAAeiC,GAAqBlC,aAAc,SAACnT,GAAD,OAAUsV,GAAuBtV,QAWnM,kBAAC2Q,GAAD,CACEvW,WAAYub,GACZtb,iBAAkB,kBAAMub,IAAwBD,KAChDpb,IAAK,CAAEa,gBAAiB,WACxBZ,SAAU,kBACVsX,SAtVkB,SAAChB,EAAUE,EAAUE,GAE3C,IAAM5L,EAAU,IAAIL,QACpBK,EAAQJ,OAAO,eAAgB,qCAG/B,IAAIuT,EAAa,IAAIC,gBACrBD,EAAWvT,OAAO,WAAY4L,GAC9B2H,EAAWvT,OAAO,WAAY8L,GAC9ByH,EAAWvT,OAAO,aAAcgM,GAChCuH,EAAWvT,OAAO,aAAc,YAChCuT,EAAWvT,OAAO,WAAY,oBAE9BS,MAAM,GAAD,OAAIwO,EAAJ,eAAyB,CAC5B9O,OAAQ,OACRC,QAASA,EACTsS,KAAMa,IAEL7S,MAAK,SAAAiS,GAAG,OAAIA,EAAI/R,UAChBF,MAAK,SAAAG,GACJ,IAAM4S,EAAa7jB,KAAKiC,MAAMgP,GAE1B4S,EAAWvR,MACb0O,GAAiB6C,EAAWC,oBAG5Bd,GAAQa,EAAWxT,cA0B3B,SAAqB4S,GACnB,IAAMc,EAAkB,IAAI5T,QAC5B4T,EAAgB3T,OAAO,gBAAvB,iBAAkD6S,IAClDc,EAAgB3T,OAAO,eAAgB,qCAEvC,IAAME,EAAiB,CACrBC,OAAQ,MACRC,QAASuT,EACTtT,SAAU,UAGZI,MAAM,GAAD,OAAIwO,EAAJ,yCAAmD/O,GACrDQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJyO,EAAY1f,KAAKiC,MAAMgP,OAExBoB,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,MA1CjC0R,CAAYH,EAAWxT,cACvBiP,EAASuE,GACT/jB,aAAaC,QAAQ,eAAgBC,KAAKC,UAAU4jB,IACpD/C,IAAuB,OAG1BzO,OAAM,SAAAC,GAAK,OAAInH,QAAQC,IAAI,QAASkH,OAsTnCwJ,SAAUiF,GACVjE,WAAY,kBAAMkE,GAAiB,S,MC5f5BiD,OArBf,WAEE,OACE,yBAAK7hB,UAAU,OACb,4BAAQA,UAAU,UAChB,wBAAIiP,MAAM,aAAV,gBAGA,kBAAC,GAAD,OAEF,yBAAKjP,UAAU,qBACb,kBAACT,EAAD,OAEF,kBAAC,GAAD,MACA,8BACE,kBAAC8X,GAAD,SCrBOyK,eAAe,CAC5BC,QAAS,CACP9jB,KAAM+jB,EACNxjB,WAAYyjB,EACZ9iB,QAAS+iB,KCEO/X,QACW,cAA7BgY,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,GAAD,OAEFhH,SAASiH,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnU,MAAK,SAAAoU,GACjCA,EAAaC,kB","file":"static/js/main.c57ea1ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectItem\":\"SelectSearchable_selectItem__ytOvQ\",\"selectedItem_delete\":\"SelectSearchable_selectedItem_delete__DzATU\",\"selectSearchable\":\"SelectSearchable_selectSearchable__12vBI\",\"selectSearchable_Container\":\"SelectSearchable_selectSearchable_Container__fToYi\",\"selectSearchable_SearchContainer\":\"SelectSearchable_selectSearchable_SearchContainer__3eaGr\",\"selectSearchable_ItemsContainer\":\"SelectSearchable_selectSearchable_ItemsContainer__34yKg\",\"selectSearchable_Header\":\"SelectSearchable_selectSearchable_Header__20KCq\",\"selectSearchable_SelectedContainer\":\"SelectSearchable_selectSearchable_SelectedContainer__3HBOF\",\"selectSearchable_Trigger\":\"SelectSearchable_selectSearchable_Trigger__2brz3\",\"selectSearchable_SelectedItem\":\"SelectSearchable_selectSearchable_SelectedItem__ya07B\",\"selectSearchable_SelectedItem_Selected\":\"SelectSearchable_selectSearchable_SelectedItem_Selected__3kePe\",\"selectSearchable_List\":\"SelectSearchable_selectSearchable_List__12txV\",\"listCollapsed\":\"SelectSearchable_listCollapsed__2gYJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBackdrop\":\"Login_loginBackdrop__2-vXb\",\"loginBackdrop_freeze\":\"Login_loginBackdrop_freeze__30wYs\",\"loginContainer\":\"Login_loginContainer__1-kGp\",\"loginHeader\":\"Login_loginHeader__1dDHJ\",\"loginContent\":\"Login_loginContent__pNQUT\",\"loginFooter\":\"Login_loginFooter__1T3EA\",\"loginClose\":\"Login_loginClose__EEt8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"DateTimeInput_timePicker__g55DG\",\"datePicker\":\"DateTimeInput_datePicker__fMbwV\",\"dateTimeContainer\":\"DateTimeInput_dateTimeContainer__3DJHa\",\"btnClear\":\"DateTimeInput_btnClear__1hSf7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"datePicker\":\"DateInput_datePicker__1qUGn\",\"dateContainer\":\"DateInput_dateContainer__3vsHd\",\"btnClear\":\"DateInput_btnClear__hBuJA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timePicker\":\"TimeInput_timePicker__1bwP3\",\"timeContainer\":\"TimeInput_timeContainer__15bEw\",\"btnClear\":\"TimeInput_btnClear__3Cafn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Figure_container__1bF2w\",\"btnClose\":\"Figure_btnClose__3UDU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Tabulation_row__1qqOd\",\"title\":\"Tabulation_title__2BmpY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fixed\":\"JsonReader_fixed__1abV0\"};","import { createSlice } from '@reduxjs/toolkit'\n\nexport const jsonSlice = createSlice({\n  name: 'json',\n  initialState: {\n    value: {},\n    documentStatus: '',\n  },\n  reducers: {\n    setJson: (state, action) => {\n      // console.log(`setJson : `, action.payload)\n\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value = action.payload\n      localStorage.setItem('json', JSON.stringify(action.payload))\n    },\n    setDocumentStatus: (state, action) => {\n      // console.log(`setDocumentStatut : `, action.payload)\n      state.documentStatus = action.payload\n    }\n  },\n})\n\nexport const { setJson, setDocumentStatus } = jsonSlice.actions\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectJson = state => state.json.value\nexport const selectDocumentStatus = state => state.json.documentStatus\n\nexport default jsonSlice.reducer","import { createSlice } from '@reduxjs/toolkit';\n\nexport const tabulationSlice = createSlice({\n  name: 'tabulation',\n  initialState: {\n    value: 0,\n  },\n  reducers: {\n    callSection: (state, action) => {\n      state.value = action.payload\n    },\n    prevSection: state => {\n      state.value -= 1\n    },\n    nextSection: state => {\n      state.value += 1\n    },\n  },\n});\n\nexport const { callSection,\n  prevSection,\n  nextSection,\n  } = tabulationSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectedTabulation = state => state.tabulation.value;\n\n\nexport default tabulationSlice.reducer;","import { createSlice } from '@reduxjs/toolkit';\n\nexport const displaySlice = createSlice({\n  name: 'display',\n  initialState: {\n    value: [],\n    debugMode: false,\n    errorMsg: ''\n  },\n  reducers: {\n    setControls: (state, action) => {\n      state.value = action.payload\n    },\n    setDebugMode: (state, action) => {\n      state.debugMode = action.payload\n    },\n    setOpenListId: (state, action) => {\n      state.openListId = action.payload\n    },\n    setErrorMsg: (state, action) => {\n      state.errorMsg = action.payload\n    },\n    //what's that\n    clearErrorMsg: state => {\n      state.errorMsg = ''\n    }\n  }\n})\n\nexport const { setControls, setDebugMode, setOpenListId, setErrorMsg, clearErrorMsg } = displaySlice.actions\n\nexport const selectDisplayedControls = state => state.display.value;\nexport const selectDebugMode = state => state.display.debugMode;\nexport const selectOpenListId = state => state.display.openListId;\nexport const selectErrorMsg = state => state.display.errorMsg;\n\nexport default displaySlice.reducer;","import React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setDebugMode,\n  selectDebugMode\n} from '../features/display/displaySlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRedo, faTrash } from '@fortawesome/free-solid-svg-icons'\n\nexport default function JsonOptions() {\n\n  const dispatch = useDispatch()\n\n  const [isHidden, setIsHidden] = useState(false)\n\n  const debugMode = useSelector(selectDebugMode)\n  const onDebugChangeHandler = (pEvent) => dispatch(setDebugMode(pEvent.target.checked))\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  let loadedJSON = JSON.parse(localStorage.getItem('initialJson')) || {}\n\n  function clickRevertChangesHandler(pEvent) {\n    dispatch(callSection(0))\n    dispatch(setJson(loadedJSON))\n  }\n\n  function clickClearDocumentHandler(pEvent) {\n    dispatch(setJson({}))\n  }\n\n  // function clickLoadJSONHandler(pEvent) {\n  //   fileLoaderInput = document.querySelector('#fileLoader')\n  //   fileLoaderInput.click()\n  // }\n  // let fileLoaderInput\n  // function loadJSONHandler(pEvent) {\n  //   const file = pEvent.target.files[0]\n  //   const reader = new FileReader()\n\n  //   reader.onloadend = function () {\n  //     try {\n  //       let source = reader.result\n  //       let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n  //       loadedJSON = JSON.parse(atob(newSource))\n  //       console.log(`--->: reader.onloadend -> newData`, loadedJSON)\n\n  //       localStorage.setItem('initialJson', JSON.stringify(loadedJSON))\n  //       dispatch(setJson(loadedJSON))\n  //     }\n  //     catch (err) {\n  //       console.log('---> ', err)\n  //     }\n  //   }\n  //   if (file) {\n  //     reader.readAsDataURL(file)\n  //   }\n  // }\n\n\n  return (\n    <div id=\"jsonOptions\" className={`${(documentStatus === 'modified') ? 'options-visible' : 'options-hidden'}`}>\n      {/* <button className=\"btn btn-ternary\" onClick={clickLoadJSONHandler}>LOAD JSON FILE</button> */}\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickRevertChangesHandler}>\n        <FontAwesomeIcon icon={faRedo} style={{ transform: 'scaleX(-1)', marginLeft: 0 }} />\n        REVERT CHANGES\n      </button>\n      <button className=\"btn btn-ternary btn-small btn-label\" onClick={clickClearDocumentHandler}>\n        <FontAwesomeIcon icon={faTrash} style={{ marginLeft: 0 }} />\n        CLEAR DOCUMENT\n      </button>\n      {/* <input id=\"fileLoader\" type=\"file\" onChange={loadJSONHandler}></input> */}\n      <div className=\"debug\">\n        <label htmlFor=\"debug\">Debug</label>\n        <input type=\"checkbox\" name=\"debug\" id=\"debug\" className=\"debug-check\" checked={debugMode} onChange={onDebugChangeHandler} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  selectJson\n} from '../../features/json/jsonSlice';\nimport {\n  callSection\n} from '../../features/tabulation/tabulationSlice';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nfunction DocumentTableOfContents(props) {\n  const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n\n  // const { Title, Id, Elements }  = json\n\n  function gotToSectionHanlder(pSectionIndex) {\n    // console.log('pSectionIndex: ', pSectionIndex)\n    dispatch(callSection(pSectionIndex))\n  }\n\n  const sections = json.Sections && json.Sections.length > 0 ? json.Sections.map((element, index) => {\n    if (element.Elements[0].Type === 'Document.TableOfContents') return null\n    return (\n      <li key={index}>\n        <button className=\"btn btn-secondary-outlined btn-link fixed-large\" onClick={() => gotToSectionHanlder(index)}>\n          {element.Title}\n          <FontAwesomeIcon icon={faChevronRight} />\n        </button>\n      </li>\n    )\n  }) : ''\n\n  return (\n    <ul className=\"toc-list\">\n      {sections}\n    </ul>\n  )\n}\n\nexport default DocumentTableOfContents\n","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { setControls } from '../../features/display/displaySlice'\n\nfunction ListMulticontrol(props) {\n\n  const json = props.controlJson\n\n  const { Title, Id, Data } = json\n\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n  function onChangeHandler(pEvent) {\n    const selectedIndex = pEvent.target.value\n    // console.log(`--->: onChangeHandler -> selectedIndex`, selectedIndex)\n    if (selectedIndex >= 0) {\n      const visibleControls = json.OptionedControls[selectedIndex].Controls\n      // console.log('---> ', visibleControls)\n      displayControls(visibleControls)\n    }\n  }\n\n  function displayControls(pControlList) {\n    dispatch(setControls(pControlList))\n    // pControlList.forEach((item, index) => {\n    //   console.log('---> ', item)\n    // })\n  }\n\n  const options = Data.map((option, index) => <option key={index} value={index}>{option}</option>)\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        List<br />\n        Multicontrol<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" defaultValue={JSON.stringify(json)}></textarea>\n      <div className=\"control\">\n        <label htmlFor=\"listmulticontrol\">{Title}</label>\n        <select name=\"listmulticontrol\" id=\"listmulticontrol\" onChange={onChangeHandler}>\n          <option value=\"-1\">-----</option>\n          {options}\n        </select>\n      </div>\n    </div>\n  )\n}\n\nexport default ListMulticontrol\n","import React, { useState } from 'react'\n\nfunction Label(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true, FontAttributes, FontSize = 14, HasUnderLine = false } = json\n\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const underline = HasUnderLine ? <hr /> : ''\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Label<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" defaultValue={JSON.stringify(json)}></textarea>\n        <div className=\"control\" style={{\n          fontSize: FontSize - 2 + 'px',\n          fontWeight: (FontAttributes === 'Bold' ? 'bold' : ''),\n          fontStyle: (FontAttributes === 'Italic' ? 'italic' : ''),\n          textDecoration: HasUnderLine ? 'underline' : ''\n        }}>\n          {Title}\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Label","import React from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springModalProps}>\n          <div\n            className={styles.modalContainer}\n            style={css}>\n            <div className={styles.modalClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.modalHeader}>\n              <FontAwesomeIcon icon={faExclamationTriangle} />\n            </div>\n            <div className={styles.modalContent}>\n              {message}\n            </div>\n            <div className={styles.modalFooter}>\n              <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport Modal from '../Modal'\n\nfunction Text(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true, IsEnabled = true, Value = '', Format, Warning = false, WarningMessage, Mandatory, ValidationMessage } = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const [isModalVisible, setIsModalVisible] = useState(false)\n  const [modalOptions, setModalOptions] = useState(Mandatory ? { message: ValidationMessage, bgColor: '#EF643C' } : { message: WarningMessage, bgColor: '#000000' })\n\n\n  const emailAddressTester = /^[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~](\\.?[-!#$%&'*+\\/0-9=?A-Z^_a-z`{|}~])*@[a-zA-Z0-9](-*\\.?[a-zA-Z0-9])*\\.[a-zA-Z](-?[a-zA-Z0-9])+$/\n  const phoneNumberRestrictCodes = [49, 50, 51, 52, 53, 54, 55, 56, 57, 48, 189, 16, 57, 48, 16, 187, 32, 8]\n\n\n  function onChangeHandler(pEvent) {\n\n    // if ((Format.Keyboard === 'Telephone') && !telephoneTester.test(pEvent.target.value)) return\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    // console.log('value: ', json)\n    props.updateJson(newJson)\n  }\n\n  function onBlurHandler(pEvent) {\n    const target = pEvent.target\n\n    if (Warning && target.value === '') {\n      setIsModalVisible(true)\n    }\n    if (Mandatory && target.value === '') {\n      target.focus()\n      setIsModalVisible(true)\n    }\n    if (Format.Keyboard === 'Email') {\n      if (!emailAddressTester.test((pEvent.target.value).toLowerCase())) {\n\n        setModalOptions({ message: \"The email address provided appears not to be valid\", bgColor: '#000000' })\n        setIsModalVisible(true)\n      }\n    }\n  }\n\n  function onKeyDownHandler(pEvent) {\n    // console.log('---> ', pEvent.keyCode)\n    if (Format.Keyboard === 'Telephone') {\n      if (!phoneNumberRestrictCodes.includes(pEvent.keyCode)) pEvent.preventDefault()\n    }\n  }\n\n  useEffect(() => {\n    // console.log('Text set data: ', Value)\n  }, [json])\n\n  const textfield = Format !== undefined ?\n    Format.Lines !== undefined ? <textarea id={Id} rows={Format.Lines} onChange={onChangeHandler}></textarea>\n      :\n      Format.Keyboard === 'Numeric' ? <input type='number' min={Format.Min} max={Format.Max} size={Format.Decimal} onChange={onChangeHandler} />\n        :\n        Format.Keyboard === 'Telephone' ? <input type='text' maxLength=\"20\" onKeyDown={onKeyDownHandler} onChange={onChangeHandler} />\n          :\n          <input id={Id} type=\"text\" value={Value} maxLength={Format.VarChar || -1} disabled={!IsEnabled} onBlur={onBlurHandler} onChange={onChangeHandler} />\n    :\n    ''\n  const warningMarker = WarningMessage ? '*' : ''\n  const mandatoryMarker = Mandatory ? <span className=\"warning-red\">*</span> : ''\n\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Text<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <label htmlFor=\"title\">{Title} {warningMarker}{mandatoryMarker}</label>\n          {textfield}\n        </div>\n        <Modal\n          visibility={isModalVisible}\n          toggleVisibility={() => setIsModalVisible(!isModalVisible)}\n          message={`${Id}: ${modalOptions.message}`}\n          css={{ backgroundColor: modalOptions.bgColor }}\n          backdrop={'rgba(0,0,0,0.3)'}\n        />\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Text\n","import camelcaseKeys from 'camelcase-keys'\n\nexport function getControlName(pControlType) {\n  return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n}\n\nexport function getElementFromElementId(pJson, pElementID) {\n  // console.log(`----------------> Looking for pElementID: `, pElementID, ' inside pJson: ', pJson)\n\n  const currentJson = normalizeJson(pJson).Sections\n  // console.log(`--->: getElementFromElementId inside this: `, currentJson)\n  let foundPath = []\n\n  if (pElementID !== 'undefined') {\n    currentJson.forEach((section, sectionIndex) => {\n      section.Elements.forEach((item, index) => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach((subsubitem, subsubindex) => {\n                if (subsubitem.Id !== undefined && subsubitem.Id === pElementID) {\n                  // console.log('--> subsubpath: ', { sectionIndex, index, subindex, subsubindex })\n                  foundPath.push([sectionIndex, index, subindex, subsubindex])\n                }\n              })\n\n            }\n\n            if (subitem.Id !== undefined && subitem.Id === pElementID) {\n              // console.log('--> subpath: ', { sectionIndex, index, subindex })\n              foundPath.push([sectionIndex, index, subindex])\n            }\n\n          })\n        }\n\n        if (item.Id !== undefined && item.Id === pElementID) {\n          // console.log('--> path: ', { sectionIndex, index })\n          foundPath.push([sectionIndex, index])\n        }\n\n      }\n      )\n    }\n    )\n  }\n\n  return foundPath\n}\n\n// Fix conflict with React component 'Date' and Date JS Object\nexport function getCurrentDate(pDate = Date.now()) {\n  // console.log(`--->: getCurrentDate -> pDate`, pDate)\n  // return new Date().toLocaleDateString().split('/').reverse().join('-')\n  // return new Date().toLocaleDateString()\n  // return new Date()\n  return new Date(pDate)\n}\nexport function getDateObjFromDate(pDate) {\n  const dateObj = new Date(pDate + ' ' + new Date().toTimeString())\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromTime(pTime) {\n  const dateObj = new Date(new Date().toDateString() + ' ' + pTime)\n  // console.log('utilities: ', pDate, dateObj)\n  return dateObj\n}\nexport function getDateObjFromDateString(pDate) {\n  const dateObj = new Date(pDate)\n  return dateObj\n}\n\nexport function normalizeJson(pJson) {\n  // const json = JSON.parse(pJson)\n  return camelcaseKeys(pJson, { deep: true, pascalCase: true })\n}\n\n//\nconst exportMetaData = []\nexport function addToDocumentExport(pValue) {\n\n  const controlIndex = exportMetaData.findIndex(item => item.Id === pValue.Id)\n  console.log(`--->: addToDocumentExport -> controlIndex`, controlIndex)\n  if (controlIndex === -1) exportMetaData.push(pValue)\n  else {\n    const prevValue = { ...exportMetaData[controlIndex] }\n    exportMetaData[controlIndex] = { ...prevValue, ...pValue }\n  }\n  // console.log(`--->: addToDocumentExport -> pValue`, pValue.Id)\n  console.log(`exportMetaData :`)\n  console.table(exportMetaData)\n\n  // exportMetaData[0].Elements.push(pValue)\n  // console.log('---> addToDocumentExport: ', exportMetaData)\n}\n\nexport function getDocumentExport() {\n  return { Elements: exportMetaData }\n}","import React, { useState } from 'react'\n\nimport { getControlName } from '../../app/utilities'\nimport { DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  // Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument } from './'\n\nfunction Repeatable(props) {\n\n  const json = props.controlJson\n  const { Title, Id, Data, Elements, IsVisible = true }  = json\n  // console.log(`--->: Repeatable -> IsVisible`, IsVisible)\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n\n\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function updateJsonHandler(pJson) {\n    console.log('update this: ', pJson)\n    console.log('in this: ', json.Elements)\n    const mergedElements = [...json.Elements]\n\n    const elementIndex = mergedElements.findIndex(element => element.ID === pJson.ID)\n    mergedElements[elementIndex] = pJson\n    console.log('--->elementIndex:  ', elementIndex)\n\n    props.updateJson({...json, Elements: mergedElements})\n  }\n\n  const children = Elements.map((control, index) => {\n    const componentName = getControlName(control.Type)\n    // console.log(`--->componentName: `, componentName)\n    const Component = components[componentName]\n    return <Component key={index} controlJson={control} updateJson={updateJsonHandler} />\n    // return <div key={index}>{control.Type}</div>\n  })\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        Repeatable<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" defaultValue={JSON.stringify(json)}></textarea>\n      <div className=\"control\">\n        {children}\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default Repeatable","import React, { useState } from 'react'\n\nfunction ButtonSubmitPurchase(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitPurchase<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitPurchase\n","import React, { useState } from 'react'\n\nfunction ButtonAddDocketNumber(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddDocketNumber<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddDocketNumber\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport { useSpring, animated, useTrail, config } from 'react-spring'\n\nfunction API(props) {\n\n  const json = props.controlJson\n\n  const { Title, Type, Id, Value = '', Api,\n    IncludePhoneNumber, IncludeEmail, IncludeTitle, IncludeBusinessNumber, IncludeAbbreviation, IncludeCode } = json\n  const targetedApi = String(Api).toLowerCase()\n\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [list, setList] = useState([])\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({ height: collapsed ? 0 : 200 })\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // UTILS\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // useEffect(() => {\n  //   // console.log(`API (${Title}) has new json: ${JSON.stringify(json)}`)\n  //   // console.log('API: default data: ', Value)\n  // }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - API                                   -----*\n  *----------------------------------------------------*/\n\n  const environment = 'https://api-uat.extrack.com/V1.0/'\n  const projectID = 1249\n\n  const apiUrl = `${environment}${getEndpoint()}`\n\n  const token = JSON.parse(localStorage.getItem('dynFormToken'))\n  // console.log(`--->: API -> Api`, Api, token.access_token)\n\n  const apiHeaders = new Headers()\n  apiHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n  apiHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n  const requestOptions = {\n    method: 'GET',\n    headers: apiHeaders,\n    redirect: 'follow'\n  }\n\n  function getEndpoint() {\n    switch (targetedApi) {\n      case 'projectcompany':\n        return `Project/${projectID}/Directory/Companies`\n      case 'projectcontacts':\n        return `Project/${projectID}/Directory/Contacts`\n      case 'globalcontacts':\n        return `Org/contacts`\n      case 'dockettypes':\n        return `/Docket/Types`\n      case 'abs':\n        return `Project/${projectID}/ABS`\n      case 'tbs':\n        return `Project/${projectID}/TBS`\n      case 'cbs':\n        return `Project/${projectID}/CbsWo`\n      case 'dbs':\n        return `Project/${projectID}/DBS`\n      case 'fbs':\n        return `Project/${projectID}/FBS`\n      case 'wbs':\n        return `Project/${projectID}/WBS`\n      case 'pcbs':\n        return `Project/${projectID}/PCBS`\n      case 'pbs':\n        return `Project/${projectID}/PBS`\n      default:\n        break\n    }\n  }\n\n  useEffect(() => {\n    fetch(apiUrl, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(targetedApi, JSON.parse(result))\n        const dropdownOptions = JSON.parse(result)\n        // console.log(`--->: API -> dropdownOptions`, dropdownOptions)\n\n        const listItems = dropdownOptions.map((item, index) => {\n          let option, phoneNumber, emailAddress, title, abn, abbr, code, spacer\n          switch (Api) {\n\n            case 'ProjectContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Contact.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Contact.Email || `n/a`}` : ``\n              option = `${item.Contact.NameFirst} ${item.Contact.NameLast} | ${item.Company.Name}${phoneNumber}${emailAddress}`\n              break\n\n            case 'GlobalContacts':\n              phoneNumber = IncludePhoneNumber ? ` | ${item.Number || `n/a`}` : ``\n              emailAddress = IncludeEmail ? ` | ${item.Email || `n/a`}` : ``\n              option = `${item.NameFirst} ${item.NameLast} | ${item.CompanyName}${phoneNumber}${emailAddress}`\n              break\n\n            case 'ProjectCompany':\n              // console.log(`--->: API ${Api} -> item`, item)\n\n              title = IncludeTitle ? ` | ${item.Title || `n/a`}` : ``\n              abn = IncludeBusinessNumber ? ` | ${item.Company.Abn || `n/a`}` : ``\n              abbr = IncludeAbbreviation ? ` | ${item.Company.Abbr || `n/a`}` : ``\n              option = `${item.Company.Name}${title}${abn}${abbr}`\n              // optionLabel = `${item.Company.Name} - ${item.Company.Abbr}`\n              break\n\n            case 'DocketTypes':\n              option = `${item.Title}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n            default:\n              title = IncludeTitle ? `${item.Title || `n/a`}` : ``\n              code = IncludeCode ? `${item.Code || `n/a`}` : ``\n              spacer = (IncludeCode && IncludeTitle) ? ` | ` : ``\n              option = `${title}${spacer}${code}`\n              // optionLabel = `${item.Title} - ${item.Code}`\n              break\n          }\n\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          // console.log('component:', {Type: 'Api', Value, optionLabel})\n          // setSelectedValue(optionValue)\n          // }\n          // if (Value !== '' && optionLabel.includes(Value)) {\n          //   currentValue = Value\n          //   console.log('API ---> DefaultValue: ', Value, '----> optionLabel : ', optionLabel)\n\n          // }\n          // return <option key={index} value={optionValue}>{optionLabel}</option>\n          return option\n        })\n        setList(listItems)\n        // console.log(`--->: API -> dropdownNodes`, dropdownNodes)\n\n      })\n      .catch(error => console.log('error', error))\n  }, [])\n\n\n\n\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(list.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [list, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    if (selectedValues[0] !== currentItem) setSelectedValues([currentItem])\n    else setSelectedValues([])\n    updateJSON(currentItem)\n  }\n  function updateJSON(pValue) {\n    // console.log(`--->: updateJSON with Value: `, pValue)\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    // console.log(`--->: updateJSON -> newJson`, newJson)\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n    filteredList.map((item, key) => {\n      const isSelected = (item === Value) ? true : false\n      const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n      return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n        {iconCheck}\n        {item}\n      </div>\n    }\n    )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        {Type}<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">\n            {selectedPills}\n          </div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  )\n}\n\nexport default API","import React, { useState } from 'react'\n\nimport { format, addDays, addMonths } from 'date-fns'\n// import DatePicker from \"react-datepicker\"\n// import \"react-datepicker/dist/react-datepicker.css\"\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DateInput(props) {\n\n  const dateformatConverted = props.format.replace(/ddd/g, 'eee')\n  const [dateValue, setDateValue] = useState(props.dateValue)\n  // console.log(`--->: DateInput -> props.dateValue received: `, props.dateValue)\n\n  function onClearHandler() {\n    setDateValue('')\n    props.onDateChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setDateValue(pValue)\n    props.onDateChange(pValue)\n  }\n\n  const dateString = dateValue === '' ? dateValue : format(addMonths(addDays(getDateObjFromDate(dateValue), props.modifiers.AddDay), props.modifiers.AddMonth), dateformatConverted)\n\n\n  return (\n    <div className={styles.dateContainer}>\n      <input\n        type=\"date\"\n        name=\"\"\n        id=\"\"\n        className={styles.datePicker}\n        defaultValue={dateValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {dateString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport { getCurrentDate, getDateObjFromDate } from '../../app/utilities'\nimport DateInput from '../DateInput'\n\nfunction Date(props) {\n\n  const json = props.controlJson\n  let { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd', IsBlank = false, IsVisible = true, AddDay = 0, AddMonth = 0, DateValue } = json\n\n  const defaultDate = (DateValue === '' || DateValue === undefined) ?\n    `${getCurrentDate().toDateString()}`\n    :\n    DateValue\n\n\n  const [dateValue, setDateValue] = useState(!IsBlank ? defaultDate : '')\n\n  function onDateChangeHandler(pDate) {\n    setDateValue(pDate)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDate !== '') newJson.DateValue = pDate\n    else delete newJson.DateValue\n    newJson.IsBlank = (pDate !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Date<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {/* {DateValue.toString()} */}\n          <DateInput format={FormatDateTime} dateValue={dateValue} modifiers={{ AddDay, AddMonth }} onDateChange={(value) => onDateChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Date","import React from 'react'\n\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport styles from './Figure.module.scss'\n\n\nexport default function Figure(props) {\n\n  function onClickHandler(pEvent) {\n    // console.log('---> ', pEvent)\n\n    props.onClose(pEvent)\n\n  }\n\n  return (\n    <div className={styles.container}>\n      <img src={props.source} alt=\"figure\" />\n      <div className={styles.btnClose} onClick={onClickHandler}><FontAwesomeIcon icon={faTimes} /></div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction Image(props) {\n\n  const json = props.controlJson\n  const { Title, Id, Data, IsVisible = true, Images = [] } = json\n  // console.log(`--->: Image -> IsVisible`, IsVisible)\n\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  const [selectedFile, setSelectedFile] = useState('')\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    // const newJson = JSON.parse(JSON.stringify(json))\n    // newJson.Value = pEvent.target.value\n    console.log('pEvent: ', pEvent)\n    // props.updateJson(newJson)\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const images = Images.map((image, index) => (\n    <div className=\"control-row\" key={`image${index}`}>\n      <Figure source={`data:image/png; base64, ${image}`} onClose={onCloseHandler} />\n    </div>\n  )\n  )\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Image<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          {images}\n        </div>\n\n\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Image\n","import React, { useState, useEffect } from 'react'\n\nimport Figure from '../Figure'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faImage } from '@fortawesome/free-solid-svg-icons'\n\nfunction ImageSingle(props) {\n\n  const json = props.controlJson\n  const { Title, Id, Data, IsVisible = true, Value = '' } = json\n  // console.log(`--->: ImageSingle -> IsVisible`, IsVisible)\n\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n    let imageData\n    const fileReader = new FileReader()\n    fileReader.onload = (e) => {\n      imageData = e.target.result.replace(\"data:image/png;base64,\", \"\")\n\n      const newJson = JSON.parse(JSON.stringify(json))\n      newJson.Value = imageData\n      props.updateJson(newJson)\n    }\n    fileReader.readAsDataURL(pEvent.target.files[0])\n  }\n\n  function onCloseHandler(pEvent) {\n    console.log('---> ', pEvent)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    delete newJson.Value\n    props.updateJson(newJson)\n\n  }\n\n  useEffect(() => {\n    // console.log('new data in control')\n  }, [json])\n\n  const figure = Value !== '' ? <Figure source={`data:image/png; base64, ${Value}`} onClose={onCloseHandler} /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          ImageSingle<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <div className=\"control-row\">\n            <h3 htmlFor=\"title\">{Title}</h3>\n            <label htmlFor=\"file\" className=\"btn btn-primary btn-label\">\n              <FontAwesomeIcon icon={faImage} />\n              Select an image\n            </label>\n            <input type=\"file\" id=\"file\" name=\"file\" className=\"btn-file\" onChange={onChangeHandler} />\n          </div>\n          <div className=\"control-row\">\n            {figure}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default ImageSingle\n","import React, { useState } from 'react'\n\nfunction ButtonAddReportDate(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddReportDate<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddReportDate","import React from 'react'\n\nfunction QRScanner() {\n  return (\n    <div>\n      QRScanner\n    </div>\n  )\n}\n\nexport default QRScanner\n","import React from 'react'\n\nfunction QRScannerList() {\n  return (\n    <div>\n      QRScannerList\n    </div>\n  )\n}\n\nexport default QRScannerList\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction Signature(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n            </div>\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\n\nexport default Signature\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateTimeValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateTimeValue}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDateTime\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction SignatureDate(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Signature, DateValue } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  const signature = <img src={`data:image/png;base64, ${Signature}`} alt=\"\" width=\"100\" />\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <div className=\"control-row\">\n            <div className=\"signature-display\">\n              {signature}\n              <div className=\"signature-timestamp\">\n                {DateValue}\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n}\nexport default SignatureDate\n","import React from 'react'\n\nfunction Matrix() {\n  return (\n    <div>\n      Matrix\n    </div>\n  )\n}\n\nexport default Matrix\n","import React, { useState, useEffect } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Checkbox(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, EntryTitle, Details, HasUnderLine, IsVisible = true, Value = '', CommentValue = '' }  = json\n  // console.log(`--->: Checkbox -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n    // setValue(pEvent.target.value)\n\n    const checkboxValue = pEvent.target.checked === true ? 'Y' : 'N'\n    const valuesToExport = {Type, Id, Value: checkboxValue}\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = checkboxValue\n    // console.log('value: ', newJson.Value, json)\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const commentText = pEvent.target.value\n    const valuesToExport = {Id, CommentValue: commentText}\n    // console.log('---> CHECKBOX UPDATED: ', valuesToExport)\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = commentText\n    props.updateJson(newJson)\n  }\n\n  useEffect(() => {\n    // console.log('Checkbox set data :', json)\n  }, [json])\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        Checkbox<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className={`control ${HasUnderLine ? 'control-underline' : ''}`}>\n        <h3>{Title}</h3>\n        {details}\n        <input type=\"checkbox\" defaultChecked={Value === 'Y'} onChange={onChangeHandler}/>\n        {entryTitle}\n        {comment}\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default Checkbox\n","import React, { useState, useEffect } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Boolean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, Collapsible, IsCollapsed, HasUnderLine, EntryTitle, Details, IsVisible = true, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Boolean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  useEffect(() => {\n    // console.log('Boolean set data :', json)\n  }, [json])\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n\n    const booleanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: booleanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = booleanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  const entryTitle = EntryTitle ? <label htmlFor=\"checkbox\">{EntryTitle}</label> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Boolean<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-inline\">\n            {details}\n          </div>\n          <div className={`control-inline ${HasUnderLine ? 'control-underline' : ''}`}>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n            </div>\n            <div className=\"control-checkbox\">\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n            </div>\n          </div>\n          <div className=\"control-inline\">\n            {entryTitle}\n          </div>\n          <div className=\"control-inline\">\n            {comment}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Boolean","import React, { useState, useEffect } from 'react'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown } from '@fortawesome/free-solid-svg-icons'\n\nimport { addToDocumentExport } from '../../app/utilities'\n\nfunction Trilean(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, ShowComment, HideNa, IsVisible = true, Collapsible, IsCollapsed, EntryTitle, Details, Value = '', CommentValue = '' } = json\n  // console.log(`--->: Trilean -> IsVisible`, IsVisible)\n\n  const [collapsed, setCollapsed] = useState(IsCollapsed)\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onChangeHandler(pEvent) {\n\n    const trileanValue = pEvent.target.value\n    const valuesToExport = { Type, Id, Value: trileanValue }\n    addToDocumentExport(valuesToExport)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = trileanValue\n    props.updateJson(newJson)\n  }\n\n  function onCommentChangeHandler(pEvent) {\n    // console.log('pEvent.target.value: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.CommentValue = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n  function onToggleClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n\n  useEffect(() => {\n    // console.log('Trilean set data :', json)\n  }, [json])\n\n  const comment = ShowComment ? <input type=\"text\" placeholder={EntryTitle} value={CommentValue} onChange={onCommentChangeHandler}></input> : ''\n\n  const details = Collapsible ? <div className=\"control-details-container\"><div className=\"control-details-toggle\" onClick={onToggleClickHandler}><FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} /></div><div id=\"controlDetails\" className={`${collapsed ? 'hidden' : ''} control-details-details`}>{Details}</div></div> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          Trilean<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          {Title}\n          <div className=\"control-row\">\n            {details}\n          </div>\n          <div className=\"control-row\">\n            <div className=\"control-inline\">\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"yes\">Yes</label>\n                <input type=\"radio\" id=\"yes\" name={Id} value=\"Y\" checked={Value === 'Y'} onChange={onChangeHandler} />\n              </div>\n              <div className=\"control-checkbox\">\n                <label htmlFor=\"no\">No</label>\n                <input type=\"radio\" id=\"no\" name={Id} value=\"N\" checked={Value === 'N'} onChange={onChangeHandler} />\n              </div>\n              <div className={`${HideNa ? 'hidden' : ''} control-checkbox`}>\n                <label htmlFor=\"na\">N/A</label>\n                <input type=\"radio\" id=\"na\" name={Id} value=\"NA\" checked={Value === 'NA'} onChange={onChangeHandler} />\n              </div>\n            </div>\n          </div>\n          <div className=\"control-row\">\n            {comment}\n          </div>\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Trilean\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport {\n  selectDebugMode\n} from '../../features/display/displaySlice'\n\nfunction TrileanLabel(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, IsVisible = true, Buttons, CommentValue, HasUnderLine, ShowComment, HideNa, Value } = json\n\n  const debugMode = useSelector(selectDebugMode)\n\n  function onChangeHandler(pEvent) {\n    // console.log('---> radio click: ', pEvent.target.value)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.Value = pEvent.target.value\n    props.updateJson(newJson)\n  }\n\n\n  const buttons = Buttons !== undefined ? Buttons.map((button, index) => {\n    const computedBackground = Value === button.Button ? button.BackgroundColorSelected : button.BackgroundColor\n    if (!(HideNa && button.Button === 'NA')) return (\n\n      <React.Fragment key={`${Id}${index}`}>\n\n        <input type=\"radio\" name={Id} id={`${Id}${button.Label}`} value={button.Button} className=\"radiocheck-hidden\" onChange={onChangeHandler} />\n        <label htmlFor={`${Id}${button.Label}`} className=\"radiocheck-button\" style={{ backgroundColor: computedBackground }}>\n          {button.Label}\n        </label>\n\n      </React.Fragment>\n    )\n  }) : ''\n\n  const comment = ShowComment ? <div className=\"control-row\">{CommentValue}</div> : ''\n  const underline = HasUnderLine ? <hr /> : ''\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className={`tag ${debugMode ? '' : 'hidden'}`}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n          <textarea name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        </div>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          {comment}\n          <div className=\"control-row\">\n            {buttons}\n            {underline}\n          </div>\n        </div>\n\n      </div>\n      :\n      ''\n  )\n\n}\nexport default TrileanLabel\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport {useSpring, animated, useTrail, config} from 'react-spring'\n\nfunction ListSingle(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, Value = ''} = json\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState((Value.constructor === String) ? [Value] : Value)\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({height: collapsed ? 0 : 200})\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: config.stiff\n  })\n\n  // UTILS\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        updateJSON('')\n        setSelectedValues(selectedValues.filter(item => item !== targetText))\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    if (selectedValues[0] !== pEvent.target.id) setSelectedValues([pEvent.target.id])\n    else setSelectedValues([])\n    updateJSON(pEvent.target.id)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (newJson.Value === pValue) newJson.Value = ''\n    else {\n      newJson.Value = pValue\n      setCollapsed(true)\n    }\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n  filteredList.map((item, key) => {\n    const isSelected = selectedValues.findIndex(value => item === value) > -1\n    const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n    return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n      {iconCheck}\n      {item}\n    </div>\n    }\n  )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        {Type}<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">\n            {selectedPills}\n          </div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  )\n}\n\nexport default ListSingle","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { setOpenListId } from '../../features/display/displaySlice'\nimport { selectOpenListId } from '../../features/display/displaySlice'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\nimport {useSpring, animated, useTrail, config} from 'react-spring'\n\nfunction ListMultiple(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, Data, SelectedValue = []} = json\n  const dispatch = useDispatch()\n\n  const [debugMode, setDebugMode] = useState(false)\n  const [collapsed, setCollapsed] = useState(true)\n  const [keyword, setKeyword] = useState('')\n  const [filteredList, setFilteredList] = useState([])\n  const [selectedValues, setSelectedValues] = useState(SelectedValue || [])\n\n  const openListId = useSelector(selectOpenListId)\n\n  const animatedListProps = useSpring({height: collapsed ? 0 : 200})\n  // const animatedListProps = useSpring({height: collapsed ? 0 : 200, config: { delay: 2000 }})\n  const trailPills = useTrail(selectedValues.length, {\n    from: { opacity: 0, marginLeft: -12, marginTop: -6, transform: 'scaleX(0.6) scaleY(0.8)' },\n    to: { opacity: 1, marginLeft: 0, marginTop: 0, transform: 'scaleX(1) scaleY(1)' },\n    // config: { duration: 1250 },\n    config: {mass:1, tension: 500, friction: 26}\n  })\n\n  // UTILS\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // AUTO CLOSE\n  useEffect(() => {\n    if (!collapsed) dispatch(setOpenListId(Id))\n  }, [collapsed, Id, dispatch])\n\n  useEffect(() => {\n    if (openListId !== Id) setCollapsed(true)\n  }, [openListId, Id])\n\n\n  // FILTER THE LIST ITEMS\n  useEffect(() => {\n    setFilteredList(Data.filter(item => item.toLowerCase().includes(keyword.toLowerCase())))\n  }, [Data, keyword])\n\n\n  // TOGGLE THE LIST\n  function listClickHandler(pEvent) {\n    const target = pEvent.target\n    if (target.className === 'input-select' || target.className === 'input-select-items') setCollapsed(!collapsed)\n    else if (target.className === 'remove-item') {\n      const targetText = target.parentNode.innerText\n      if (targetText !== '') {\n        const newValues = selectedValues.filter(item => item !== targetText)\n        setSelectedValues(newValues)\n        updateJSON(newValues)\n      }\n    }\n  }\n  function listIconClickHandler(pEvent) {\n    setCollapsed(!collapsed)\n  }\n\n  //SET VALUE\n  function listItemClickHandler(pEvent) {\n    const currentItem = pEvent.target.id\n\n    const newValues = (selectedValues.findIndex(item => item === currentItem) < 0) ? [...selectedValues, currentItem]\n    : selectedValues.filter(item => item !== currentItem)\n    setSelectedValues(newValues)\n    updateJSON(newValues)\n  }\n  function updateJSON(pValue) {\n    const newJson = JSON.parse(JSON.stringify(json))\n    newJson.SelectedValue = pValue\n    props.updateJson(newJson)\n  }\n\n  // DISPLAY THE LIST ITEMS\n  const itemList = collapsed ? '' :\n  filteredList.map((item, key) => {\n    const isSelected = selectedValues.findIndex(value => item === value) > -1\n    const iconCheck = isSelected ? <FontAwesomeIcon icon={faCheck} /> : ''\n    return <div key={key} id={item} className={`input-list-item ${isSelected ? 'selected-list-item' : ''}`} onClick={listItemClickHandler}>\n      {iconCheck}\n      {item}\n    </div>\n    }\n  )\n\n  // DISPLAY THE SELECTED ITEMS\n  const selectedPills = trailPills.map((props, index) => {\n    const item = selectedValues[index]\n    if (item !== '') return <animated.div className=\"input-select-item\" style={props} key={index}>{item}<button id={item} className=\"remove-item\"></button></animated.div>\n    return ''\n  })\n\n  return (\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        {Type}<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <h3>{Title}</h3>\n        <div className=\"input-select\" onClick={listClickHandler}>\n          <div className=\"input-select-items\">\n            {selectedPills}\n          </div>\n          <FontAwesomeIcon icon={collapsed ? faAngleDown : faAngleUp} onClick={listIconClickHandler} />\n        </div>\n        <animated.div style={animatedListProps} className=\"input-list\">\n          <div className=\"input-list-searchbar\">\n            <input type=\"text\" placeholder=\"Search\" className=\"input-list-search\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n            <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n          </div>\n          <div className=\"input-list-items\">{itemList}</div>\n        </animated.div>\n      </div>\n    </div>\n  )\n}\n\nexport default ListMultiple\n","import React, { useState } from 'react'\n\nimport { format, addHours } from 'date-fns'\n\nimport { getDateObjFromTime } from '../app/utilities'\n\nimport styles from './TimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function TimeInput(props) {\n\n  // console.log(`--->: TimeInput -> timeValue received: `, props.timeValue, getDateObjFromTime(props.timeValue))\n\n  const timeformatConverted = props.format.replace('tt', 'a')\n  const [timeValue, setTimeValue] = useState(props.timeValue)\n\n  function onClearHandler(pEvent) {\n    setTimeValue('')\n    props.onTimeChange('')\n  }\n\n  function onChangeHandler(pValue) {\n    setTimeValue(pValue)\n    props.onTimeChange(pValue)\n  }\n\n  const timeString = timeValue !== '' ? format(addHours(getDateObjFromTime(timeValue), props.modifiers.AddHour), timeformatConverted)\n    :\n    ''\n\n  return (\n    <div className={styles.timeContainer}>\n      <input\n        type=\"time\"\n        name=\"\"\n        id=\"\"\n        className={styles.timePicker}\n        value={timeValue}\n        onChange={(e) => onChangeHandler(e.target.value)}\n      />\n      {timeString}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\nimport TimeInput from '../../components/TimeInput'\n\nfunction Time(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'hh:mm tt', IsBlank = false, IsVisible = true, AddHour = 0, TimeValue } = json\n\n  const defaultTime = (TimeValue === '' || TimeValue === undefined) ?\n    `${new Date().getHours() < 10 ?\n      '0' + new Date().getHours()\n      :\n      new Date().getHours()}:${new Date().getMinutes() < 10 ?\n        '0' + new Date().getMinutes()\n        :\n        new Date().getMinutes()}`\n    :\n    TimeValue\n  // console.log(`TimeValue: ${TimeValue} , defaultTime: ${defaultTime}`)\n\n  const [timeValue, setTimeValue] = useState(!IsBlank ? defaultTime : '')\n\n  function onTimeChangeHandler(pTime) {\n    console.log(`--->: onTimeChangeHandler -> pTime`, pTime)\n    setTimeValue(pTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pTime !== '') newJson.TimeValue = pTime\n    else delete newJson.TimeValue\n    newJson.IsBlank = (pTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          {Type}<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <TimeInput format={FormatDateTime} timeValue={timeValue} modifiers={{ AddHour }} onTimeChange={(value) => onTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default Time\n","import React, { useState } from 'react'\n\nimport { format } from 'date-fns'\n\nimport { getDateObjFromDate } from '../app/utilities'\n\nimport styles from './DateTimeInput.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function DateTimeInput(props) {\n\n  const dateFormatConverted = props.format.replace(/ddd/g, 'eee').replace('tt', 'a')\n  // console.log(`--->: DateTimeInput -> dateFormatConverted`, dateFormatConverted)\n\n  const dateTimeValue = props.dateTimeValue\n  // console.log(`--->: DateTimeInput -> dateTimeValue: `, dateTimeValue)\n\n  let dateValue = (dateTimeValue !== '') ? `${format(new Date(dateTimeValue), 'yyyy-MM-dd')}` : format(new Date(), 'yyyy-MM-dd')\n  let timeValue = (dateTimeValue !== '') ? `${new Date(dateTimeValue).toLocaleTimeString()}` : new Date().toLocaleTimeString()\n\n  function onDateChangeHandler(pEvent) {\n    // console.log('onDateChangeHandler pEvent.target.value: ', pEvent.target.value, timeValue)\n    dateValue = pEvent.target.value\n    props.onDateTimeChange(pEvent.target.value + ' ' + timeValue)\n  }\n  function onTimeChangeHandler(pEvent) {\n    // console.log('onTimeChangeHandler pEvent.target.value', dateValue, pEvent.target.value)\n    timeValue = pEvent.target.value\n    props.onDateTimeChange(dateValue + ' ' + pEvent.target.value)\n  }\n\n  function onClearHandler() {\n    dateValue = ''\n    timeValue = ''\n    props.onDateTimeChange('')\n  }\n\n  const dateTimeStringValue = (dateTimeValue !== '') ? format(new Date(dateTimeValue), dateFormatConverted) : ''\n\n  return (\n    <div className={styles.dateTimeContainer}>\n      <div>\n        <input type=\"date\" className={styles.datePicker} name=\"\" id=\"\" onChange={onDateChangeHandler} />\n        <input type=\"time\" className={styles.timePicker} name=\"\" id=\"\" onChange={onTimeChangeHandler} />\n      </div>\n      {dateTimeStringValue}\n      <FontAwesomeIcon\n        className={styles.btnClear}\n        icon={faTimes}\n        onClick={onClearHandler}\n      />\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nimport DateTimeInput from '../../components/DateTimeInput'\n\nimport { getCurrentDate, getDateObjFromDateString } from '../../app/utilities'\n\nfunction DateTime(props) {\n\n  const json = props.controlJson\n  const { Type, Title, Id, FormatDateTime = 'yyyy-MM-dd hh:mm tt', IsBlank = false, IsVisible = true, DateTimeValue } = json\n\n  const defaultDateTime = (DateTimeValue === '' || DateTimeValue === undefined) ?\n    `${getCurrentDate().toDateString() + ' ' + getCurrentDate().toLocaleTimeString()}`\n    :\n    DateTimeValue\n\n  const [dateTimeValue, setDateTimeValue] = useState(!IsBlank ? defaultDateTime : '')\n  // const dateTimeValue = (typeof DateTimeValue === 'string' && DateTimeValue !== '') ? getDateObjFromDateString(DateTimeValue) : DateTimeValue\n  // console.log(`--->: DateTime -> dateTimeValue: `, dateTimeValue)\n\n\n  function onDateTimeChangeHandler(pDateTime) {\n    // console.log('---> onDateTimeChangeHandler: ', pDateTime)\n\n    setDateTimeValue(pDateTime)\n\n    const newJson = JSON.parse(JSON.stringify(json))\n    if (pDateTime !== '') newJson.DateTimeValue = pDateTime\n    else delete newJson.DateTimeValue\n    newJson.IsBlank = (pDateTime !== '') ? false : true\n    props.updateJson(newJson)\n  }\n\n  // Debug  ----------------------------------------- //\n  const [debugMode, setDebugMode] = useState(false)\n  const toggleDebugHandler = () => setDebugMode(!debugMode)\n\n  return (\n    IsVisible ?\n      <div className=\"control-container\">\n        <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n          DateTime<br />\n          <span className=\"control-id\">{Id}</span>\n        </div>\n        <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n        <div className=\"control\">\n          <h3>{Title}</h3>\n          <DateTimeInput format={FormatDateTime} dateTimeValue={dateTimeValue} onDateTimeChange={(value) => onDateTimeChangeHandler(value)} />\n        </div>\n      </div>\n      :\n      ''\n  )\n}\n\nexport default DateTime\n","import React from 'react'\n\nfunction TimeLabel() {\n  return (\n    <div>\n      TimeLabel\n    </div>\n  )\n}\n\nexport default TimeLabel\n","import React from 'react'\n\nfunction DateLabel() {\n  return (\n    <div>\n      DateLabel\n    </div>\n  )\n}\n\nexport default DateLabel\n","import React, { useState } from 'react'\n\nfunction ButtonAddSignature(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddSignature<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddSignature\n","import React from 'react'\n\nfunction RegisterSignatures() {\n  return (\n    <div>\n      RegisterSignatures\n    </div>\n  )\n}\n\nexport default RegisterSignatures\n","import React from 'react'\n\nfunction SearchableListEntryDialogSMS() {\n  return (\n    <div>\n      SearchableListEntryDialogSMS\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogSMS\n","import React, { useState } from 'react'\n\nfunction ButtonAddSMS(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddSMS<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddSMS","import React from 'react'\n\nfunction SearchableSMSListView() {\n  return (\n    <div>\n      SearchableSMSListView\n    </div>\n  )\n}\n\nexport default SearchableSMSListView\n","import React from 'react'\n\nfunction SearchableListEntryDialogEmail() {\n  return (\n    <div>\n      SearchableListEntryDialogEmail\n    </div>\n  )\n}\n\nexport default SearchableListEntryDialogEmail\n","import React, { useState } from 'react'\n\nfunction ButtonAddEmail(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonAddEmail<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonAddEmail\n","import React from 'react'\n\nfunction SearchableEmailListView() {\n  return (\n    <div>\n      SearchableEmailListView\n    </div>\n  )\n}\n\nexport default SearchableEmailListView\n","import React from 'react'\n\nfunction MatrixButton() {\n  return (\n    <div>\n      MatrixButton\n    </div>\n  )\n}\n\nexport default MatrixButton\n","import React from 'react'\n\nfunction DocumentSummaryGrid() {\n  return (\n    <div>\n      DocumentSummaryGrid\n    </div>\n  )\n}\n\nexport default DocumentSummaryGrid\n","import React, { useState } from 'react'\n\nimport  { useSelector, useDispatch } from 'react-redux'\nimport { setDocumentStatus } from '../../features/json/jsonSlice'\n\n\nfunction ButtonSubmitRegister(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  const dispatch = useDispatch()\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  function onSubmitToRegisterHandler(pEvent) {\n    // console.log('onSubmitToRegisterHandler: ', pEvent )\n    dispatch(setDocumentStatus('tosend'))\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonSubmitRegister<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\" onClick={onSubmitToRegisterHandler}>\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonSubmitRegister\n","import React, { useState } from 'react'\n\nfunction ButtonCloseout(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonCloseout<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonCloseout\n","import React, { useState } from 'react'\n\nfunction ButtonViewDocument(props) {\n\n  const json = props.controlJson\n  const { Title, Id, IsVisible = true }  = json\n  // console.log(`--->: Text -> IsVisible`, IsVisible)\n\n  function toggleDebugHandler() {\n    setDebugMode(!debugMode)\n  }\n\n  // const [value, setValue] = useState(json.Value || '')\n  const [debugMode, setDebugMode] = useState(false)\n\n  return (\n    IsVisible ?\n    <div className=\"control-container\">\n      <div className=\"tag\" onClick={() => toggleDebugHandler()}>\n        ButtonViewDocument<br />\n        <span className=\"control-id\">{Id}</span>\n      </div>\n      <textarea className={debugMode ? '' : 'hidden'} name=\"\" id=\"\" cols=\"50\" rows=\"6\" value={JSON.stringify(json)} disabled></textarea>\n      <div className=\"control\">\n        <button className=\"btn btn-secondary\">\n          {Title}\n        </button>\n      </div>\n    </div>\n    :\n    ''\n  )\n}\n\nexport default ButtonViewDocument\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus\n} from './jsonSlice'\n\nimport {\n  selectDisplayedControls,\n  selectDebugMode,\n  selectErrorMsg,\n} from '../display/displaySlice'\n\nimport {\n  DocumentTableOfContents,\n  ListMulticontrol,\n  Label,\n  Text,\n  Repeatable,\n  ButtonSubmitPurchase,\n  ButtonAddDocketNumber,\n  API,\n  Date,\n  Image,\n  ImageSingle,\n  ButtonAddReportDate,\n  QRScanner,\n  QRScannerList,\n  Signature,\n  SignatureDateTime,\n  SignatureDate,\n  Matrix,\n  Checkbox,\n  Boolean,\n  Trilean,\n  TrileanLabel,\n  ListSingle,\n  ListMultiple,\n  Time,\n  DateTime,\n  TimeLabel,\n  DateLabel,\n  ButtonAddSignature,\n  RegisterSignatures,\n  SearchableListEntryDialogSMS,\n  ButtonAddSMS,\n  SearchableSMSListView,\n  SearchableListEntryDialogEmail,\n  ButtonAddEmail,\n  SearchableEmailListView,\n  MatrixButton,\n  DocumentSummaryGrid,\n  ButtonSubmitRegister,\n  ButtonCloseout,\n  ButtonViewDocument\n} from '../../components/controls/'\n\nimport { getControlName } from '../../app/utilities'\n\nimport { useSpring, animated, config } from 'react-spring'\nimport { Keyframes, delay } from 'react-spring/renderprops'\n\nimport styles from './JsonReader.module.scss'\n\nexport default function JsonReader() {\n\n  const components = {\n    DocumentTableOfContents,\n    ListMulticontrol,\n    Label,\n    Text,\n    Repeatable,\n    ButtonSubmitPurchase,\n    ButtonAddDocketNumber,\n    API,\n    Date,\n    Image,\n    ImageSingle,\n    ButtonAddReportDate,\n    QRScanner,\n    QRScannerList,\n    Signature,\n    SignatureDateTime,\n    SignatureDate,\n    Matrix,\n    Checkbox,\n    Boolean,\n    Trilean,\n    TrileanLabel,\n    ListSingle,\n    ListMultiple,\n    Time,\n    DateTime,\n    TimeLabel,\n    DateLabel,\n    ButtonAddSignature,\n    RegisterSignatures,\n    SearchableListEntryDialogSMS,\n    ButtonAddSMS,\n    SearchableSMSListView,\n    SearchableListEntryDialogEmail,\n    ButtonAddEmail,\n    SearchableEmailListView,\n    MatrixButton,\n    DocumentSummaryGrid,\n    ButtonSubmitRegister,\n    ButtonCloseout,\n    ButtonViewDocument\n  }\n\n  const json = useSelector(selectJson)\n  const debugMode = useSelector(selectDebugMode)\n  const errorMsg = useSelector(selectErrorMsg)\n  const displayedControls = useSelector(selectDisplayedControls)\n  const documentStatus = useSelector(selectDocumentStatus)\n  const dispatch = useDispatch()\n\n  const activeSectionId = useSelector(state => state.tabulation.value)\n  const currentJsonToEdit = (json.Sections !== undefined) ? json.Sections[activeSectionId] : {}\n\n  const { Title, Elements } = currentJsonToEdit\n\n  const [controls, setControls] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    // console.log('Section Updated! ',Elements)\n\n    if (Elements !== undefined) {\n      const controlsFromElements = Elements.map((element, index) => {\n        const componentName = getControlName(element.Type)\n        // console.log(`--->componentName: `, componentName)\n        let controlComponent\n        if (components[componentName] !== undefined) {\n          const Component = components[componentName]\n          controlComponent = <Component key={`${componentName.substring(0, 4).toLowerCase()}-${element.ElementId}`} controlJson={element} updateJson={updateJsonHandler} />\n        }\n        return controlComponent\n      })\n      setControls(controlsFromElements)\n    }\n    else setControls('')\n  }, [Elements])\n\n  useEffect(() => {\n    // console.log('displayedControls updated... ', displayedControls)\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n\n    if (json.Sections !== undefined) {\n      json.Sections[activeSectionId].Elements.forEach(control => {\n        // console.log(`--->: JsonReader -> control`, control.Id)\n        const controlPath = getControlPathById(control.Id)\n        // console.log(`--->: JsonReader -> controlPath`, controlPath)\n        if (jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible !== undefined) {\n          jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = false\n          console.log('---> reset control visibility ', control.Id, control.isVisible)\n        }\n      })\n    }\n\n\n    displayedControls.forEach(id => {\n      const controlPath = getControlPathById(id)\n      jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index].IsVisible = true\n      // console.log('---> ', jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index])\n    })\n    dispatch(setJson(jsonToUpdate))\n  }, [displayedControls])\n\n  useEffect(() => {\n    // console.log('json.Sections: ', json.Sections)\n  }, [json.Sections])\n\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  // function getControlName(pControlType) {\n  //   return pControlType.split('.').map(part => part[0].toUpperCase() + part.slice(1)).join('')\n  // }\n\n  function getControlPathById(pControlId) {\n    // console.log(`--->: getControlPathById -> pControlId`, pControlId)\n    const currentSection = json.Sections[activeSectionId]\n    let foundItem = {}\n    let itemPath = {}\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.Id === pControlId) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                itemPath = { section: activeSectionId, index, subindex, subsubindex }\n                foundItem = subsubitem\n              }\n            })\n          }\n\n          if (subitem.Id === pControlId) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            itemPath = { section: activeSectionId, index, subindex }\n            foundItem = subitem\n          }\n        })\n      }\n\n      if (item.Id === pControlId) {\n        // console.log('---> Trouvé item: ', item)\n        itemPath = { section: activeSectionId, index }\n        foundItem = json.Sections[activeSectionId].Elements[index]\n      }\n    })\n    // console.log('-- itemPath -> ', itemPath)\n    // return foundItem\n    return itemPath\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON                                  -----*\n  *----------------------------------------------------*/\n\n  function updateJsonHandler(pJson) {\n    console.log('updating... ', documentStatus)\n    if (documentStatus === '') dispatch(setDocumentStatus('modified'))\n\n    const controlPath = getControlPathById(pJson.Id)\n    // console.log(`--->: updateJsonHandler -> controlPath: `, controlPath)\n\n    let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // console.log(`--->: updateJsonHandler -> jsonToUpdate`, jsonToUpdate)\n    // ONLY FIST SUBLEVEL\n    jsonToUpdate.Sections[controlPath.section].Elements[controlPath.index] = pJson\n    dispatch(setJson(jsonToUpdate))\n  }\n\n\n  const skeleton = documentStatus === 'loading' ?\n    <div className=\"skeleton\">\n      {Array(8).fill('').map((item, index) => <div key={index} className={`${index % 2 === 1 ? 'skeleton-bloc-offset' : ''} skeleton-bloc`}></div>)}\n    </div>\n    :\n    ''\n\n\n  return (\n    <div className=\"board\">\n\n      <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div>\n\n\n      {skeleton}\n\n      {controls}\n\n      <textarea\n        name=\"jsonviewer\"\n        id=\"jsonviewer\"\n        className={debugMode ? `${styles.fixed}` : 'hidden'}\n        // className={styles.fixed}\n        rows=\"16\"\n        value={JSON.stringify(Elements)}\n        onChange={e => dispatch(setJson(JSON.parse(e.target.value)))}>\n      </textarea>\n    </div>\n  )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  selectedTabulation,\n  callSection,\n  prevSection,\n  nextSection,\n} from '../features/tabulation/tabulationSlice'\nimport { selectJson } from '../features/json/jsonSlice'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStepBackward, faStepForward, faFastBackward, faFastForward } from '@fortawesome/free-solid-svg-icons'\nimport styles from './Tabulation.module.scss'\n\nfunction Tabulation() {\n\n  const dispatch = useDispatch()\n\n  const tabIndex = useSelector(selectedTabulation)\n  const json = useSelector(selectJson)\n\n  // const tabs = (json.Sections) ? json.Sections.map((item, index) => <div key={index}>{item.Title}</div>) : ''\n  const tabLength = (json.Sections) ? json.Sections.length : 0\n  const tabTitle = (json.Sections) ? json.Sections[tabIndex].Title : ''\n\n  // React.useEffect(() => {\n  //   console.log('TabulationUpdated! : ',json);\n  // })\n\n  function onFirstSectionHandler(e) {\n    dispatch(callSection(0))\n  }\n  function onPrevSectionHandler(e) {\n    if (tabIndex > 0) dispatch(prevSection())\n  }\n  function onNextSectionHandler(e) {\n    if (tabIndex < tabLength - 1) dispatch(nextSection())\n  }\n  function onLastSectionHandler(e) {\n    dispatch(callSection(tabLength - 1))\n  }\n\n  return (\n    <nav className={styles.row}>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onFirstSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastBackward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === 0} onClick={(e) => onPrevSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepBackward} />\n      </button>\n      <div className={styles.title}>\n        <h2>{tabTitle}</h2>\n      </div>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onNextSectionHandler(e)}>\n        <FontAwesomeIcon icon={faStepForward} />\n      </button>\n      <button className=\"btn btn-primary\" disabled={tabLength === 0 || tabIndex === tabLength - 1} onClick={(e) => onLastSectionHandler(e)}>\n        <FontAwesomeIcon icon={faFastForward} />\n      </button>\n    </nav>\n  )\n}\n\nexport default Tabulation\n","import React, { useState } from 'react'\nimport styles from './Login.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faUser } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Login(props) {\n\n  const { visibility, toggleVisibility, css, backdrop, errormsg } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springloginProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [member, setMember] = useState('')\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.loginBackdrop} ${visibility ? '' : styles.loginBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n        <animated.div style={springloginProps}>\n          <div\n            className={styles.loginContainer}\n            style={css}>\n            <div className={styles.loginClose} onClick={toggleVisibility}>\n              <FontAwesomeIcon icon={faTimes} />\n            </div>\n            <div className={styles.loginHeader}>\n              <FontAwesomeIcon icon={faUser} />\n            </div>\n            <div className={styles.loginContent}>\n              <form>\n                <label htmlFor=\"username\">username</label>\n                <input type=\"text\" name=\"username\" id=\"username\" onChange={e => setUsername(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"password\">password</label>\n                <input type=\"password\" name=\"password\" id=\"password\" onChange={e => setPassword(e.target.value)} onFocus={() => props.clearError()} />\n                <label htmlFor=\"member\">member</label>\n                <input type=\"text\" name=\"member\" id=\"member\" onChange={e => setMember(e.target.value)} onFocus={() => props.clearError()} />\n              </form>\n            </div>\n            <div className={styles.loginFooter}>\n              <button className=\"btn btn-primary\" onClick={e => props.onSubmit(username, password, member)}>SUBMIT</button>\n              {errormsg}\n            </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './SelectSearchable.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction useVisible(initialIsVisible) {\n  const [isVisible, setIsVisible] = useState(initialIsVisible)\n  const ref = useRef(null)\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true)\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true)\n    }\n  }, [])\n  return { ref, isVisible, setIsVisible }\n}\n\n\nexport default function SelectSearchable(props) {\n\n  const [keyword, setKeyword] = useState('')\n\n  const items = props.items\n  const allowMultiple = props.allowMultiple\n\n\n  const filteredList = keyword.length > 0 ? items.filter(item => String(item.label).toLowerCase().includes(keyword.toLowerCase())) : items\n\n  const { ref, isVisible, setIsVisible } = useVisible(false)\n\n  function onClickItemHandler(pEvent, pItem) {\n    pEvent.stopPropagation()\n    // console.log(`--->: onClickItemHandler -> pEvent.target.className: `, pEvent.currentTarget.className)\n    // console.log('---> delete here: ', pEvent.currentTarget.className.includes('delete'))\n\n    if (pEvent.currentTarget.className.includes('delete')) {\n      props.onSelectItem([])\n      return\n    }\n\n    if (allowMultiple) {\n      const clickedItemIndex = props.selectedItems.findIndex(item => item === pItem)\n\n      if (clickedItemIndex > -1) {\n        props.onSelectItem(props.selectedItems.filter(item => item !== pItem))\n      }\n      else props.onSelectItem([...props.selectedItems, pItem])\n    }\n    else {\n      props.onSelectItem([pItem])\n      setIsVisible(false)\n    }\n  }\n\n\n  return (\n    <div className={styles.selectSearchable_Container}>\n      <div className={styles.selectSearchable_Header} onClick={e => setIsVisible(!isVisible)}>\n        <div className={styles.selectSearchable_SelectedContainer}>\n          {props.selectedItems.map((item, index) => <div key={index} className={styles.selectSearchable_SelectedItem}>\n            {item.label}\n            <span className={styles.selectedItem_delete} onClick={(e) => onClickItemHandler(e, item)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>)}\n        </div>\n        <div className={styles.selectSearchable_Trigger}>\n          <FontAwesomeIcon icon={isVisible ? faAngleDown : faAngleUp} />\n        </div>\n      </div>\n      {isVisible && <div style={{ position: 'absolute' }} className={`${styles.selectSearchable_List}`} ref={ref}>\n        <div className={styles.selectSearchable_SearchContainer}>\n          <input type=\"text\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n          <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n        </div>\n        <div className={styles.selectSearchable_ItemsContainer}>\n          {filteredList.map((item, index) => <span key={index} className={`${styles.selectItem} ${props.selectedItems.findIndex(selectedItem => item.label === selectedItem.label) > -1 ? styles.selectSearchable_SelectedItem_Selected : ''}`} onClick={(e) => onClickItemHandler(e, item)}>{item.label}</span>)}\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {\n  setJson,\n  selectJson,\n  selectDocumentStatus,\n  setDocumentStatus\n} from '../features/json/jsonSlice'\nimport {\n  callSection\n} from '../features/tabulation/tabulationSlice'\nimport {\n  setErrorMsg,\n  clearErrorMsg\n} from '../features/display/displaySlice'\n\n\nimport Login from './Login'\nimport SelectSearchable from './SelectSearchable'\n\nimport { normalizeJson, getElementFromElementId, getDocumentExport } from '../app/utilities'\n\nfunction ApiInterface() {\n\n  const json = useSelector(selectJson)\n  const dispatch = useDispatch()\n  const documentStatus = useSelector(selectDocumentStatus)\n\n  const apiURL = 'https://api-uat.extrack.com/'\n\n  const [token, setToken] = useState({})\n  const [user, setUser] = useState({})\n\n  const [projects, setProjects] = useState([])\n  const [templates, setTemplates] = useState([])\n  const [documents, setDocuments] = useState([])\n\n  const [selectedProject, setSelectedProject] = useState([])\n  const [selectedProjectId, setSelectedProjectId] = useState('')\n\n  const [selectedTemplate, setSelectedTemplate] = useState([])\n  const [selectedTemplateRef, setSelectedTemplateRef] = useState([])\n\n  const [selectedDocument, setSelectedDocument] = useState([])\n  const [selectedDocumentRef, setSelectedDocumentRef] = useState([])\n\n  const [isFetchingTemplates, setIsFetchingTemplates] = useState(false)\n  const [isFetchingDocuments, setIsFetchingDocuments] = useState()\n\n  // const [errorMsg, setErrorMsg] = useState('')\n\n  const [isPopinLoginVisible, setIsPopinLoginVisible] = useState(false)\n  const [loginErrorMsg, setLoginErrorMsg] = useState('')\n\n\n\n  // PROJECT\n  useEffect(() => {\n    const projectId = selectedProject.length > 0 ? selectedProject[0].id : ''\n    console.log('---> new selected Project: ', projectId)\n    if (projectId > 0) {\n      setSelectedProjectId(projectId)\n      getTemplates(projectId)\n      getDocuments(projectId)\n    }\n  }, [selectedProject])\n  // useEffect(() => {\n  //   console.log('---> selectedProjectId changed: ', selectedProjectId)\n  //   if (selectedProjectId !== '') {\n  //     getTemplates(selectedProjectId)\n  //     getDocuments(selectedProjectId)\n  //   }\n  // }, [selectedProjectId])\n\n  // TEMPLATE\n  useEffect(() => {\n    // console.log('---> template selected: ', selectedTemplateRef)\n    if (selectedTemplateRef.length > 0) {\n      getTemplateById(selectedTemplateRef[0].Id)\n        .then(template => {\n          // console.log(`--->: useEffect -> template: `, template)\n          setSelectedTemplate(template)\n          dispatch(setDocumentStatus('loaded'))\n        })\n    }\n  }, [selectedTemplateRef])\n\n  useEffect(() => {\n    console.log('---> template set: ', selectedTemplate)\n    if (selectedTemplate.Config !== undefined) {\n      const configJson = selectedTemplate.Config\n      localStorage.setItem('initialJson', JSON.stringify(normalizeJson(JSON.parse(configJson))))\n      dispatch(setJson(normalizeJson(JSON.parse(configJson))))\n\n    }\n    // dispatch(setJson(decodeURI()))\n  }, [selectedTemplate])\n\n  // DOCUMENT\n  useEffect(() => {\n    console.log('---> selectedDocumentRef changed: ', selectedDocumentRef)\n    if (selectedDocumentRef.length > 0) {\n      dispatch(setDocumentStatus('loading'))\n\n      let document\n      getDocumentById(selectedDocumentRef[0].Id)\n        .then(value => document = value)\n\n        .then(value =>\n          getTemplateById(value.DocumentFormTemplateId)\n            .then(template => {\n              // console.log(`--->: useEffect -> template: `, template)\n              aggregateJson(template.Config, JSON.parse(document.MetaData)[0])\n              dispatch(setDocumentStatus('loaded'))\n            })\n        )\n    }\n  }, [selectedDocumentRef])\n\n  // SENDING DOCUMENT\n  useEffect(() => {\n    if (documentStatus === 'tosend') {\n      // console.log(`---> Sending document: ${JSON.stringify(getDocumentExport())} for project: ${selectedProjectId} and template: ${selectedTemplateId}`)\n\n      let metadata = JSON.stringify([getDocumentExport()])\n      console.log(`----> metadata`, metadata)\n\n\n      const headers = new Headers()\n      // headers.append(\"Content-Type\", \"application/json\")\n      headers.append(\"Authorization\", `Bearer ${token.access_token}`)\n\n      // JSON.stringify triple metadata backslashes\n      const documentBody = JSON.stringify({\n        \"ID\": 0,\n        \"ProjectID\": selectedProjectId,\n        \"Description\": \"\",\n        \"Title\": \"Test-NewDoc\",\n        \"DocumentTypeId\": 1088,\n        \"DocumentFormTemplateID\": selectedDocumentRef.Id,\n        \"UserRevisionNumber\": \"0\",\n        \"UserRevisionDate\": \"2020-09-25\",\n        \"MetaData\": metadata,\n        \"OpenClosedStatus\": \"O\",\n        \"CreatedByContactID\": 1059,\n        \"CreatedByCompanyID\": 1009\n      })\n\n      const documentBodyString = JSON.stringify(documentBody)\n\n      let formdata = new FormData()\n      formdata.append(\"Document\", documentBody)\n\n      console.log(`--->: sendind with body ------>  :   `, documentBodyString)\n\n      const requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: formdata\n        // body: JSON.stringify(requestBody)\n        // body: JSON.stringify({\n        //   \"ID\": 0,\n        //   \"ProjectID\": 1249,\n        //   \"Description\": \"\",\n        //   \"Title\": \"Test-NewDoc\",\n        //   \"DocumentTypeId\": 1088,\n        //   \"DocumentFormTemplateID\": 25,\n        //   \"UserRevisionNumber\": \"0\",\n        //   \"UserRevisionDate\": \"2020-09-10\",\n        //   \"MetaData\": \"[{\\\"Elements\\\":[{\\\"Type\\\":\\\"Trilean\\\",\\\"Value\\\":\\\"N\\\",\\\"Id\\\":\\\"S032\\\",\\\"CommentValue\\\":\\\"TrileanCommentvaluefromdocument\\\"}]}]\",\n        //   \"OpenClosedStatus\": \"O\",\n        //   \"CreatedByContactID\": 1059,\n        //   \"CreatedByCompanyID\": 1009\n        // })\n      }\n\n      fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/Template/${selectedTemplateRef.Id}/Create`, requestOptions)\n        .then(res => res.text())\n        .then(result => console.log('response: ', result))\n        .catch(error => console.log('error', error))\n\n\n    }\n    // dispatch(setDocumentStatus('sent'))\n  }, [documentStatus])\n\n\n  // useEffect(() => {\n  //   if (selectedDocument.MetaData !== undefined) {\n  //     const metaDataJson = selectedDocument.MetaData\n  //     console.log('-=--> ', JSON.parse(metaDataJson))\n  //   }\n  //   dispatch(setJson(decodeURI()))\n  // }, [selectedDocument])\n\n\n  const getTokenHandler = (username, password, member) => {\n\n    const headers = new Headers()\n    headers.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n\n    let urlencoded = new URLSearchParams()\n    urlencoded.append(\"username\", username)\n    urlencoded.append(\"password\", password)\n    urlencoded.append(\"MemberCode\", member)\n    urlencoded.append(\"grant_type\", \"password\")\n    urlencoded.append(\"timezone\", \"Australia/Sydney\")\n\n    fetch(`${apiURL}oAuth/Token`, {\n      method: 'POST',\n      headers: headers,\n      body: urlencoded\n    })\n      .then(res => res.text())\n      .then(result => {\n        const resultJSON = JSON.parse(result)\n        // console.log('result: ', resultJSON)\n        if (resultJSON.error) {\n          setLoginErrorMsg(resultJSON.error_description)\n        }\n        else {\n          getUser(resultJSON.access_token)\n          getProjects(resultJSON.access_token)\n          setToken(resultJSON)\n          localStorage.setItem('dynFormToken', JSON.stringify(resultJSON))\n          setIsPopinLoginVisible(false)\n        }\n      })\n      .catch(error => console.log('error', error))\n  }\n\n  const getUser = (pToken) => {\n    const userHeaders = new Headers()\n    userHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n\n    const requestOptions = {\n      method: 'GET',\n      headers: userHeaders\n    }\n\n    fetch(`${apiURL}V1.0/User`, requestOptions)\n      .then(response => response.text())\n      .then(result => setUser(JSON.parse(result)))\n      .catch(error => console.log('error', error))\n  }\n\n\n  function getProjects(pToken) {\n    const projectsHeaders = new Headers()\n    projectsHeaders.append(\"Authorization\", `Bearer ${pToken}`)\n    projectsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: projectsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project?selectorFields=(Id,Abbr)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('projects: ', JSON.parse(result))\n        setProjects(JSON.parse(result))\n      })\n      .catch(error => console.log('error', error))\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - TEMPLATES                             -----*\n  *----------------------------------------------------*/\n  function getTemplates(pProjectID) {\n    // console.log(`--->: getTemplates -> pProjectID: `, pProjectID)\n    setIsFetchingTemplates(true)\n\n    const templatesHeaders = new Headers()\n    templatesHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templatesHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templatesHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Document/Form/Templates?selectorFields=(Id,Title1)`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('templates: ', JSON.parse(result))\n        setTemplates(JSON.parse(result))\n        setIsFetchingTemplates(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n\n  async function getTemplateById(pTemplateId) {\n    console.log('---> getTemplateById: ', pTemplateId)\n    let template\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProject[0].id}/Document/Form/Template/${pTemplateId}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        template = JSON.parse(result)\n        // console.log('template: ', template)\n      })\n      .catch(error => console.log('error', error))\n    // setSelectedTemplate(template)\n    return template\n\n  }\n\n\n  /**-------------------------------------------------**\n  * @desc - DOCUMENTS                             -----*\n  *----------------------------------------------------*/\n  function getDocuments(pProjectID) {\n    setIsFetchingDocuments(true)\n\n    const documentsHeaders = new Headers()\n    documentsHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    documentsHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: documentsHeaders,\n      redirect: 'follow'\n    }\n\n    fetch(`${apiURL}V1.0/Project/${pProjectID}/Documents?selectorFields=Id,Title,DocumentNumber,DocumentFormTemplateId&orderBy=Id desc`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log(' ====> doucments: ', JSON.parse(result))\n        setDocuments(JSON.parse(result))\n        setIsFetchingDocuments(false)\n      })\n      .catch(error => console.log('error', error))\n  }\n\n\n  async function getDocumentById(pDocumentId) {\n    // console.log('---> getDocumentById: ', pDocumentId)\n    let document = {}\n\n    const templateHeaders = new Headers()\n    templateHeaders.append(\"Authorization\", `Bearer ${token.access_token}`)\n    templateHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\")\n\n    const requestOptions = {\n      method: 'GET',\n      headers: templateHeaders,\n      redirect: 'follow'\n    }\n\n    await fetch(`${apiURL}V1.0/Project/${selectedProjectId}/Document/${pDocumentId}`, requestOptions)\n      .then(response => response.text())\n      .then(result => {\n        // console.log('---> result fron fetch: ', result, JSON.parse(result), JSON.parse(result).Document)\n\n        document = JSON.parse(result).Document\n        // console.log('--> document from fetch: ', document)\n      })\n      .catch(error => console.log('error', error))\n    return document\n  }\n\n\n\n  // function selectProjectHandler(pEvent) {\n  //   if (pEvent.target.selectedIndex !== 0) {\n  //     const projectID = projects[pEvent.target.selectedIndex - 1].Id\n  //     // console.log(`--->: selectProjectHandler -> projectID`, projectID)\n\n  //     setSelectedProjectId(projectID)\n  //   }\n  //   else {\n  //     setSelectedProjectId('')\n  //   }\n  // }\n  // function selectProjectHandlerCustom(pItem) {\n  //   console.log('---> ', pItem)\n  //   setSelectedProjectId(pItem)\n\n  // }\n\n  // function selectTemplateHandler(pEvent) {\n  //   document.getElementById('documents').selectedIndex = 0\n  //   dispatch(clearErrorMsg())\n  //   // console.log('---> ', templates[pEvent.target.selectedIndex - 1])\n  //   // normalizeJson(templates[pEvent.target.selectedIndex])\n  //   // const templateJson = templates[pEvent.target.selectedIndex].Config\n  //   if (pEvent.target.selectedIndex !== 0) {\n  //     dispatch(callSection(0))\n  //     // setSelectedTemplate(templates[pEvent.target.selectedIndex - 1])\n  //     setSelectedTemplateId(templates[pEvent.target.selectedIndex - 1].Id)\n  //   }\n  //   else setSelectedTemplate({})\n  // }\n\n  // function selectDocumentHandler(pEvent) {\n  //   document.getElementById('templates').selectedIndex = 0\n  //   dispatch(clearErrorMsg())\n  //   // console.log('---> Document: ', documents[pEvent.target.selectedIndex - 1])\n  //   // normalizeJson(templates[pEvent.target.selectedIndex])\n  //   // const templateJson = templates[pEvent.target.selectedIndex].Config\n  //   if (pEvent.target.selectedIndex !== 0) {\n  //     // dispatch(callSection(0))\n  //     const document = documents[pEvent.target.selectedIndex - 1]\n  //     setSelectedDocument(document)\n  //     // setSelectedTemplate(templates[pEvent.target.selectedIndex - 1])\n\n  //     const template = getTemplateById(document.DocumentFormTemplateId)\n  //     aggregateJson(template, JSON.parse(document.MetaData)[0])\n  //     // console.log('--__-> Need template: ', document.DocumentFormTemplateId)\n\n  //   }\n  //   // setSelectedProjectID(projects[pEvent.target.selectedIndex - 1].Id)\n  // }\n\n  // function selectDocumentHandler(pEvent) {\n  //   document.getElementById('templates').selectedIndex = 0\n  //   dispatch(clearErrorMsg())\n\n  //   if (pEvent.target.selectedIndex !== 0) {\n  //     // dispatch(callSection(0))\n  //     setSelectedDocumentId(documents[pEvent.target.selectedIndex - 1].Id)\n  //   }\n  // }\n\n  function aggregateJson(pTemplate, pDocument) {\n    const templateToUpdate = normalizeJson(JSON.parse(pTemplate))\n\n    // console.log('Document\\'s Elements:', pDocument.Elements)\n    // console.log('Template to update:', templateToUpdate.Sections)\n\n    pDocument.Elements.forEach(item => {\n      // console.log(`-------------> Document's MetaData element: `, item.Id)\n      const itemPath = getElementFromElementId(templateToUpdate, item.Id)\n      // console.log(`itemPath received: `, itemPath)\n\n\n      if (itemPath.length > 1) dispatch(setErrorMsg(`Multiple ID '${item.Id}' found in the template`))\n      if (itemPath.length === 0) return\n\n      const firstFoundedPath = itemPath[0]\n      // console.log('item value: ', item, ' --> path:  ', { sectionIndex: firstFoundedPath[0], pos: firstFoundedPath[1] })\n\n      switch (itemPath[0].length) {\n        case 2:\n          const templateValues = templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]]\n          templateToUpdate.Sections[firstFoundedPath[0]].Elements[firstFoundedPath[1]] = { ...templateValues, ...item }\n          // console.log('---> valuesToInsert', templateValues)\n          break\n        case 3:\n          console.log('---> two levels')\n          break\n        case 4:\n          console.log('---> three levels')\n          break\n        default:\n          break\n      }\n    })\n    console.log('Json created from Template with Document\\'s data: ', templateToUpdate)\n    dispatch(setJson(templateToUpdate))\n  }\n\n\n\n  const templateLabel = isFetchingTemplates ? <div className=\"spinner\">Fetching Templates...</div> : selectedProject.length > 0 ? 'Select a template' : ''\n  const documentLabel = isFetchingDocuments ? <div className=\"spinner\">Fetching Documents...</div> : selectedProject.length > 0 ? 'Select a document' : ''\n\n  return (\n    <div className=\"bloc\">\n\n      <button className={`btn btn-ternary ${user.NameFirst ? 'hidden' : ''}`} onClick={() => setIsPopinLoginVisible(true)}>LOGIN</button>\n      {/* <button className={`btn btn-ternary ${user.NameFirst === undefined || projectsList.length > 0 ? 'hidden' : ''}`} onClick={getProjectsHandler}>GET PROJECTS</button> */}\n\n      <div className={`bloc-menu ${projects.length > 0 ? '' : 'hidden'}`}>\n        <h2 className=\"dropdown-label\">\n          Select a project\n        </h2>\n        <SelectSearchable allowMultiple={false} items={projects.map(item => ({ label: item.Abbr, id: item.Id }))} selectedItems={selectedProject} onSelectItem={(item) => setSelectedProject(item)} />\n        {/* <label htmlFor=\"projects\">SELECT Project</label>\n        <select name=\"projects\" id=\"projects\" onChange={selectProjectHandler}>\n          <option value=\"-1\">-----</option>\n          {projectsList}</select> */}\n      </div>\n\n\n      <div className={`bloc-menu ${selectedProject.length === 0 ? '' : 'bloc-menu__separator'}`}>\n        <h2 className=\"dropdown-label\">{templateLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          {/* const documentLabel = String(document.DocumentNumber).padEnd(20, ' ') + ' - ' + document.Title */}\n          <SelectSearchable allowMultiple={false} items={templates.map(item => ({ label: item.Title1, Id: item.Id }))} selectedItems={selectedTemplateRef} onSelectItem={(item) => setSelectedTemplateRef(item)} />\n        </div>\n        {/* <select name=\"templates\" id=\"templates\" onChange={selectTemplateHandler} className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <option value=\"\">-----</option>\n          {templatesList}</select> */}\n      </div>\n\n      <div className='bloc-spacer'>\n        <span className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          OR\n        </span>\n      </div>\n\n\n      <div className=\"bloc-menu\">\n        <h2 className=\"dropdown-label\">{documentLabel}</h2>\n        <div className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <SelectSearchable allowMultiple={false} items={documents.map(item => ({ label: item.Title, Id: item.Id }))} selectedItems={selectedDocumentRef} onSelectItem={(item) => setSelectedDocumentRef(item)} />\n        </div>\n        {/* <select name=\"documents\" id=\"documents\" onChange={selectDocumentHandler} className={`${templates.length > 0 ? '' : 'hidden'}`}>\n          <option value=\"\">-----</option>\n          {documentsList}</select> */}\n      </div>\n\n      {/* <div className={`${errorMsg.length > 0 ? '' : 'hidden'} error-msg`}>\n        {errorMsg}\n      </div> */}\n\n      <Login\n        visibility={isPopinLoginVisible}\n        toggleVisibility={() => setIsPopinLoginVisible(!isPopinLoginVisible)}\n        css={{ backgroundColor: '#007db4' }}\n        backdrop={'rgba(0,0,0,0.3)'}\n        onSubmit={getTokenHandler}\n        errormsg={loginErrorMsg}\n        clearError={() => setLoginErrorMsg('')\n        }\n      />\n\n    </div>\n  )\n}\n\nexport default ApiInterface","import React from 'react'\r\n\r\n\r\nimport JsonOptions from './components/JsonOptions'\r\nimport JsonReader from './features/json/JsonReader'\r\nimport Tabulation from './components/Tabulation'\r\nimport ApiInterface from './components/ApiInterface'\r\n\r\n\r\nimport './App.scss'\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <header className=\"header\">\r\n        <h1 title=\"v20.11.03\">\r\n          DYNAMIC FORM\r\n        </h1>\r\n        <ApiInterface />\r\n      </header>\r\n      <div className=\"options-container\">\r\n        <JsonOptions />\r\n      </div>\r\n      <Tabulation />\r\n      <main>\r\n        <JsonReader />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport jsonReducer from '../features/json/jsonSlice';\r\nimport tabulationReducer from '../features/tabulation/tabulationSlice';\r\nimport displayReducer from '../features/display/displaySlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    json: jsonReducer,\r\n    tabulation: tabulationReducer,\r\n    display: displayReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.scss'\r\nimport App from './App'\r\n\r\nimport store from './app/store'\r\nimport { Provider } from 'react-redux'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}